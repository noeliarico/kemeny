
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,438,432,397,448,410,441,428],
[453,0,446,450,466,427,420,440],
[459,445,0,420,439,441,451,428],
[494,441,471,0,449,439,444,451],
[443,425,452,442,0,427,436,423],
[481,464,450,452,464,0,447,431],
[450,471,440,447,455,444,0,443],
[463,451,463,440,468,460,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,446,521,463,419,439,484],
[379,0,420,470,404,407,401,401],
[445,471,0,522,480,448,448,462],
[370,421,369,0,423,366,369,433],
[428,487,411,468,0,458,441,444],
[472,484,443,525,433,0,421,443],
[452,490,443,522,450,470,0,453],
[407,490,429,458,447,448,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,462,462,472,459,463,472],
[451,0,444,460,461,452,459,471],
[429,447,0,462,448,456,454,435],
[429,431,429,0,455,457,444,439],
[419,430,443,436,0,432,428,432],
[432,439,435,434,459,0,439,452],
[428,432,437,447,463,452,0,445],
[419,420,456,452,459,439,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,420,443,434,454,494,456],
[419,0,426,500,474,421,449,479],
[471,465,0,442,439,453,466,477],
[448,391,449,0,484,428,409,469],
[457,417,452,407,0,393,466,450],
[437,470,438,463,498,0,480,494],
[397,442,425,482,425,411,0,455],
[435,412,414,422,441,397,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,482,444,460,459,445,466],
[428,0,481,438,417,473,428,419],
[409,410,0,433,408,444,428,454],
[447,453,458,0,451,438,430,426],
[431,474,483,440,0,468,449,444],
[432,418,447,453,423,0,436,444],
[446,463,463,461,442,455,0,476],
[425,472,437,465,447,447,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,454,404,426,452,457,417],
[412,0,441,462,446,431,404,414],
[437,450,0,397,402,360,380,421],
[487,429,494,0,408,419,422,438],
[465,445,489,483,0,449,447,413],
[439,460,531,472,442,0,478,425],
[434,487,511,469,444,413,0,450],
[474,477,470,453,478,466,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,514,457,470,479,389,459,412],
[377,0,309,394,299,309,441,376],
[434,582,0,545,540,473,516,433],
[421,497,346,0,350,366,449,383],
[412,592,351,541,0,380,471,351],
[502,582,418,525,511,0,501,480],
[432,450,375,442,420,390,0,374],
[479,515,458,508,540,411,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,472,424,501,487,491,457],
[408,0,377,410,428,443,421,475],
[419,514,0,479,468,472,481,507],
[467,481,412,0,467,496,434,481],
[390,463,423,424,0,471,444,485],
[404,448,419,395,420,0,485,445],
[400,470,410,457,447,406,0,473],
[434,416,384,410,406,446,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,458,418,402,428,475,466],
[426,0,453,457,457,444,455,402],
[433,438,0,464,414,439,458,413],
[473,434,427,0,429,443,425,405],
[489,434,477,462,0,441,487,464],
[463,447,452,448,450,0,449,421],
[416,436,433,466,404,442,0,434],
[425,489,478,486,427,470,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,471,456,466,469,452,438],
[435,0,480,457,468,467,464,452],
[420,411,0,421,437,428,441,413],
[435,434,470,0,470,447,469,442],
[425,423,454,421,0,433,428,430],
[422,424,463,444,458,0,442,436],
[439,427,450,422,463,449,0,430],
[453,439,478,449,461,455,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,466,433,444,479,413,477],
[465,0,415,456,474,455,454,481],
[425,476,0,378,414,429,433,536],
[458,435,513,0,449,519,484,536],
[447,417,477,442,0,390,490,427],
[412,436,462,372,501,0,458,489],
[478,437,458,407,401,433,0,456],
[414,410,355,355,464,402,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,430,427,448,449,459,446],
[437,0,435,442,440,416,421,432],
[461,456,0,437,443,450,459,473],
[464,449,454,0,456,438,460,448],
[443,451,448,435,0,430,438,428],
[442,475,441,453,461,0,447,436],
[432,470,432,431,453,444,0,422],
[445,459,418,443,463,455,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,459,444,451,470,468,473],
[436,0,451,461,447,465,493,443],
[432,440,0,434,443,432,447,422],
[447,430,457,0,467,483,476,439],
[440,444,448,424,0,459,440,458],
[421,426,459,408,432,0,429,447],
[423,398,444,415,451,462,0,425],
[418,448,469,452,433,444,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,481,474,427,460,428,450],
[387,0,381,400,385,430,415,410],
[410,510,0,449,445,459,426,460],
[417,491,442,0,453,470,435,466],
[464,506,446,438,0,458,477,479],
[431,461,432,421,433,0,425,429],
[463,476,465,456,414,466,0,462],
[441,481,431,425,412,462,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,438,427,439,460,434,449],
[438,0,435,441,437,445,429,429],
[453,456,0,465,443,445,449,460],
[464,450,426,0,455,450,440,428],
[452,454,448,436,0,448,428,436],
[431,446,446,441,443,0,422,446],
[457,462,442,451,463,469,0,477],
[442,462,431,463,455,445,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,438,450,448,445,444,454],
[435,0,443,447,450,440,420,451],
[453,448,0,452,467,475,428,466],
[441,444,439,0,445,431,434,457],
[443,441,424,446,0,444,433,463],
[446,451,416,460,447,0,456,449],
[447,471,463,457,458,435,0,470],
[437,440,425,434,428,442,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,425,408,516,448,497,387],
[430,0,424,475,468,463,453,461],
[466,467,0,501,552,441,495,479],
[483,416,390,0,524,451,542,530],
[375,423,339,367,0,403,431,464],
[443,428,450,440,488,0,463,504],
[394,438,396,349,460,428,0,367],
[504,430,412,361,427,387,524,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,416,404,450,451,490,464],
[423,0,441,438,497,400,438,443],
[475,450,0,452,459,438,460,477],
[487,453,439,0,382,460,418,448],
[441,394,432,509,0,433,435,400],
[440,491,453,431,458,0,466,407],
[401,453,431,473,456,425,0,417],
[427,448,414,443,491,484,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,456,450,457,452,471,441],
[398,0,429,418,434,446,446,430],
[435,462,0,444,439,441,471,417],
[441,473,447,0,438,436,476,437],
[434,457,452,453,0,458,469,420],
[439,445,450,455,433,0,470,448],
[420,445,420,415,422,421,0,424],
[450,461,474,454,471,443,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,443,441,440,451,455,430],
[462,0,446,434,446,421,455,443],
[448,445,0,428,411,449,463,453],
[450,457,463,0,429,460,449,402],
[451,445,480,462,0,470,473,464],
[440,470,442,431,421,0,451,442],
[436,436,428,442,418,440,0,404],
[461,448,438,489,427,449,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,455,452,431,470,448,437],
[447,0,456,428,444,455,443,436],
[436,435,0,435,438,467,459,429],
[439,463,456,0,443,489,450,436],
[460,447,453,448,0,466,441,450],
[421,436,424,402,425,0,447,421],
[443,448,432,441,450,444,0,422],
[454,455,462,455,441,470,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,448,442,459,432,464,442],
[443,0,447,456,468,440,458,466],
[443,444,0,428,467,428,433,451],
[449,435,463,0,462,448,437,461],
[432,423,424,429,0,430,415,442],
[459,451,463,443,461,0,472,461],
[427,433,458,454,476,419,0,460],
[449,425,440,430,449,430,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,439,471,433,433,467,434],
[435,0,439,465,447,430,453,448],
[452,452,0,467,460,438,488,436],
[420,426,424,0,449,438,446,395],
[458,444,431,442,0,447,473,445],
[458,461,453,453,444,0,484,446],
[424,438,403,445,418,407,0,407],
[457,443,455,496,446,445,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,450,459,472,416,448,434],
[444,0,444,471,452,420,446,408],
[441,447,0,465,446,396,448,416],
[432,420,426,0,422,413,426,390],
[419,439,445,469,0,451,492,457],
[475,471,495,478,440,0,495,443],
[443,445,443,465,399,396,0,380],
[457,483,475,501,434,448,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,473,475,463,465,491,474],
[462,0,442,480,467,458,447,442],
[418,449,0,474,443,465,467,454],
[416,411,417,0,431,413,432,394],
[428,424,448,460,0,429,440,427],
[426,433,426,478,462,0,446,443],
[400,444,424,459,451,445,0,434],
[417,449,437,497,464,448,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,432,458,441,490,493,452],
[404,0,420,445,410,426,452,407],
[459,471,0,496,445,453,469,459],
[433,446,395,0,427,433,440,429],
[450,481,446,464,0,451,468,427],
[401,465,438,458,440,0,477,450],
[398,439,422,451,423,414,0,406],
[439,484,432,462,464,441,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,468,466,487,447,466,438],
[419,0,493,444,446,431,451,414],
[423,398,0,428,430,436,407,414],
[425,447,463,0,478,447,426,447],
[404,445,461,413,0,424,439,417],
[444,460,455,444,467,0,448,432],
[425,440,484,465,452,443,0,437],
[453,477,477,444,474,459,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,415,431,450,425,434,429],
[466,0,441,453,475,440,472,457],
[476,450,0,429,440,436,466,465],
[460,438,462,0,464,444,449,423],
[441,416,451,427,0,456,505,435],
[466,451,455,447,435,0,457,439],
[457,419,425,442,386,434,0,428],
[462,434,426,468,456,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,477,438,452,441,415,427],
[471,0,479,437,456,438,425,454],
[414,412,0,419,435,426,416,418],
[453,454,472,0,461,442,447,461],
[439,435,456,430,0,443,419,421],
[450,453,465,449,448,0,435,458],
[476,466,475,444,472,456,0,463],
[464,437,473,430,470,433,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,505,451,363,527,432,315],
[435,0,485,451,402,575,589,472],
[386,406,0,339,429,500,689,475],
[440,440,552,0,633,569,633,465],
[528,489,462,258,0,558,546,346],
[364,316,391,322,333,0,460,394],
[459,302,202,258,345,431,0,216],
[576,419,416,426,545,497,675,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,450,422,457,435,483,458],
[456,0,473,460,475,465,445,465],
[441,418,0,405,433,421,422,440],
[469,431,486,0,461,447,460,464],
[434,416,458,430,0,439,445,426],
[456,426,470,444,452,0,460,475],
[408,446,469,431,446,431,0,435],
[433,426,451,427,465,416,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,440,445,442,440,431,403],
[428,0,465,441,414,451,442,455],
[451,426,0,441,434,448,449,412],
[446,450,450,0,456,436,441,427],
[449,477,457,435,0,460,460,458],
[451,440,443,455,431,0,442,442],
[460,449,442,450,431,449,0,458],
[488,436,479,464,433,449,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,461,426,418,464,483,459],
[427,0,441,434,434,449,446,445],
[430,450,0,401,410,452,446,427],
[465,457,490,0,467,440,473,452],
[473,457,481,424,0,484,481,438],
[427,442,439,451,407,0,460,445],
[408,445,445,418,410,431,0,421],
[432,446,464,439,453,446,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,430,439,451,442,430,420],
[446,0,428,446,437,452,445,441],
[461,463,0,438,470,451,455,462],
[452,445,453,0,436,437,425,452],
[440,454,421,455,0,450,433,445],
[449,439,440,454,441,0,433,446],
[461,446,436,466,458,458,0,455],
[471,450,429,439,446,445,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,434,442,432,428,447,456],
[424,0,404,414,411,426,438,409],
[457,487,0,435,453,466,461,464],
[449,477,456,0,439,453,467,444],
[459,480,438,452,0,452,460,440],
[463,465,425,438,439,0,451,461],
[444,453,430,424,431,440,0,445],
[435,482,427,447,451,430,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,365,411,339,402,434,415],
[415,0,355,420,415,407,334,359],
[526,536,0,434,506,489,499,487],
[480,471,457,0,384,436,338,339],
[552,476,385,507,0,490,475,427],
[489,484,402,455,401,0,411,390],
[457,557,392,553,416,480,0,379],
[476,532,404,552,464,501,512,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,451,469,465,452,450,449],
[453,0,442,466,463,448,440,446],
[440,449,0,450,436,449,448,405],
[422,425,441,0,451,449,419,423],
[426,428,455,440,0,449,427,424],
[439,443,442,442,442,0,430,423],
[441,451,443,472,464,461,0,443],
[442,445,486,468,467,468,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,468,457,434,406,430,417],
[431,0,488,453,435,416,428,485],
[423,403,0,438,408,368,373,400],
[434,438,453,0,421,373,419,422],
[457,456,483,470,0,403,453,446],
[485,475,523,518,488,0,445,475],
[461,463,518,472,438,446,0,447],
[474,406,491,469,445,416,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,453,499,458,409,430,427],
[438,0,462,444,436,415,427,440],
[438,429,0,464,425,448,433,395],
[392,447,427,0,439,365,432,421],
[433,455,466,452,0,420,451,433],
[482,476,443,526,471,0,441,431],
[461,464,458,459,440,450,0,470],
[464,451,496,470,458,460,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,433,463,462,458,449,453],
[455,0,441,439,449,482,453,423],
[458,450,0,458,452,464,508,440],
[428,452,433,0,425,483,478,458],
[429,442,439,466,0,462,463,459],
[433,409,427,408,429,0,426,427],
[442,438,383,413,428,465,0,435],
[438,468,451,433,432,464,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,478,401,435,439,480,469],
[443,0,489,445,467,466,492,480],
[413,402,0,453,399,430,467,417],
[490,446,438,0,457,445,504,433],
[456,424,492,434,0,429,485,444],
[452,425,461,446,462,0,439,439],
[411,399,424,387,406,452,0,418],
[422,411,474,458,447,452,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,410,449,445,437,428,450],
[442,0,436,422,441,424,426,415],
[481,455,0,451,468,450,443,449],
[442,469,440,0,441,455,406,433],
[446,450,423,450,0,444,456,431],
[454,467,441,436,447,0,426,446],
[463,465,448,485,435,465,0,469],
[441,476,442,458,460,445,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,454,456,475,454,449,425],
[444,0,443,442,399,428,429,414],
[437,448,0,446,419,427,406,383],
[435,449,445,0,427,430,439,422],
[416,492,472,464,0,449,473,454],
[437,463,464,461,442,0,461,452],
[442,462,485,452,418,430,0,426],
[466,477,508,469,437,439,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,446,460,484,461,451,443],
[435,0,432,437,451,438,393,422],
[445,459,0,465,459,464,429,453],
[431,454,426,0,460,440,415,424],
[407,440,432,431,0,470,421,418],
[430,453,427,451,421,0,446,471],
[440,498,462,476,470,445,0,502],
[448,469,438,467,473,420,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,449,431,423,430,391,428],
[401,0,417,417,421,421,413,437],
[442,474,0,437,439,453,428,463],
[460,474,454,0,452,458,420,444],
[468,470,452,439,0,442,450,426],
[461,470,438,433,449,0,419,438],
[500,478,463,471,441,472,0,461],
[463,454,428,447,465,453,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,451,527,492,501,494,448],
[460,0,422,493,452,487,447,484],
[440,469,0,440,471,453,443,412],
[364,398,451,0,424,455,462,452],
[399,439,420,467,0,439,375,444],
[390,404,438,436,452,0,418,445],
[397,444,448,429,516,473,0,491],
[443,407,479,439,447,446,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,453,444,447,466,467,459],
[447,0,455,454,436,470,485,462],
[438,436,0,432,428,461,462,474],
[447,437,459,0,442,459,465,463],
[444,455,463,449,0,473,484,484],
[425,421,430,432,418,0,434,431],
[424,406,429,426,407,457,0,450],
[432,429,417,428,407,460,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,449,411,450,444,420,421],
[455,0,473,446,458,461,447,438],
[442,418,0,420,439,456,442,432],
[480,445,471,0,487,459,464,476],
[441,433,452,404,0,441,441,409],
[447,430,435,432,450,0,415,399],
[471,444,449,427,450,476,0,442],
[470,453,459,415,482,492,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,446,469,451,444,479,428],
[444,0,444,474,482,467,470,431],
[445,447,0,495,478,459,483,460],
[422,417,396,0,431,427,442,424],
[440,409,413,460,0,426,444,427],
[447,424,432,464,465,0,474,454],
[412,421,408,449,447,417,0,414],
[463,460,431,467,464,437,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,473,455,481,470,431,469],
[447,0,471,460,473,454,442,449],
[418,420,0,466,442,383,390,417],
[436,431,425,0,421,415,396,424],
[410,418,449,470,0,426,431,429],
[421,437,508,476,465,0,446,455],
[460,449,501,495,460,445,0,473],
[422,442,474,467,462,436,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,443,442,438,452,473,441],
[443,0,464,450,425,446,467,448],
[448,427,0,426,426,445,464,424],
[449,441,465,0,434,439,478,432],
[453,466,465,457,0,445,483,457],
[439,445,446,452,446,0,463,448],
[418,424,427,413,408,428,0,419],
[450,443,467,459,434,443,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,534,457,504,439,474,478],
[443,0,458,487,498,466,493,487],
[357,433,0,456,484,419,421,457],
[434,404,435,0,495,443,457,452],
[387,393,407,396,0,397,363,421],
[452,425,472,448,494,0,419,462],
[417,398,470,434,528,472,0,457],
[413,404,434,439,470,429,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,438,473,427,484,447,446],
[454,0,410,466,459,522,459,415],
[453,481,0,449,430,480,414,442],
[418,425,442,0,447,473,461,410],
[464,432,461,444,0,489,444,449],
[407,369,411,418,402,0,407,386],
[444,432,477,430,447,484,0,469],
[445,476,449,481,442,505,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,410,471,443,463,440,409],
[418,0,399,440,437,383,410,414],
[481,492,0,475,451,444,477,462],
[420,451,416,0,440,412,408,410],
[448,454,440,451,0,469,407,471],
[428,508,447,479,422,0,386,424],
[451,481,414,483,484,505,0,423],
[482,477,429,481,420,467,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,452,429,432,438,441,432],
[442,0,451,435,441,455,436,457],
[439,440,0,426,425,450,457,454],
[462,456,465,0,441,460,431,464],
[459,450,466,450,0,473,434,450],
[453,436,441,431,418,0,415,417],
[450,455,434,460,457,476,0,451],
[459,434,437,427,441,474,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,426,436,450,417,434,460],
[434,0,418,435,433,417,423,430],
[465,473,0,461,450,458,449,445],
[455,456,430,0,440,424,441,449],
[441,458,441,451,0,413,447,452],
[474,474,433,467,478,0,461,503],
[457,468,442,450,444,430,0,438],
[431,461,446,442,439,388,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,454,448,422,435,453,451],
[452,0,452,467,434,457,452,441],
[437,439,0,448,442,440,454,450],
[443,424,443,0,421,443,437,433],
[469,457,449,470,0,443,449,460],
[456,434,451,448,448,0,444,442],
[438,439,437,454,442,447,0,432],
[440,450,441,458,431,449,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,451,460,453,467,469,446],
[454,0,467,432,450,429,447,460],
[440,424,0,425,428,436,448,445],
[431,459,466,0,459,469,455,455],
[438,441,463,432,0,436,443,438],
[424,462,455,422,455,0,440,471],
[422,444,443,436,448,451,0,447],
[445,431,446,436,453,420,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,434,455,449,467,453,446],
[437,0,445,452,440,451,430,428],
[457,446,0,426,443,449,431,422],
[436,439,465,0,457,474,461,441],
[442,451,448,434,0,474,460,433],
[424,440,442,417,417,0,449,424],
[438,461,460,430,431,442,0,447],
[445,463,469,450,458,467,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,479,467,467,431,475,470],
[430,0,455,449,455,450,467,461],
[412,436,0,460,430,418,413,441],
[424,442,431,0,416,399,451,454],
[424,436,461,475,0,437,460,472],
[460,441,473,492,454,0,480,466],
[416,424,478,440,431,411,0,441],
[421,430,450,437,419,425,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,452,432,471,434,487,462],
[393,0,436,423,394,411,419,456],
[439,455,0,435,452,446,481,444],
[459,468,456,0,423,419,471,453],
[420,497,439,468,0,442,470,453],
[457,480,445,472,449,0,444,439],
[404,472,410,420,421,447,0,425],
[429,435,447,438,438,452,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,420,428,468,446,401,399],
[499,0,495,443,541,493,445,469],
[471,396,0,449,510,466,467,487],
[463,448,442,0,481,483,439,472],
[423,350,381,410,0,385,401,394],
[445,398,425,408,506,0,476,480],
[490,446,424,452,490,415,0,447],
[492,422,404,419,497,411,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,346,361,455,352,401,525],
[496,0,439,361,464,468,414,487],
[545,452,0,454,494,441,549,571],
[530,530,437,0,539,474,583,572],
[436,427,397,352,0,417,485,500],
[539,423,450,417,474,0,429,599],
[490,477,342,308,406,462,0,426],
[366,404,320,319,391,292,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,480,443,468,443,481,441],
[399,0,419,417,437,417,447,406],
[411,472,0,425,465,413,477,451],
[448,474,466,0,462,432,466,447],
[423,454,426,429,0,420,475,439],
[448,474,478,459,471,0,483,432],
[410,444,414,425,416,408,0,401],
[450,485,440,444,452,459,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,510,392,434,420,424,418],
[443,0,436,453,429,401,448,421],
[381,455,0,427,447,400,435,421],
[499,438,464,0,451,414,491,432],
[457,462,444,440,0,371,387,393],
[471,490,491,477,520,0,466,421],
[467,443,456,400,504,425,0,456],
[473,470,470,459,498,470,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,466,475,468,453,455,451],
[446,0,470,482,477,418,459,450],
[425,421,0,460,460,444,449,470],
[416,409,431,0,430,430,425,440],
[423,414,431,461,0,442,438,439],
[438,473,447,461,449,0,452,460],
[436,432,442,466,453,439,0,461],
[440,441,421,451,452,431,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,448,410,439,427,439,435],
[458,0,473,416,444,451,451,443],
[443,418,0,408,424,404,450,413],
[481,475,483,0,467,441,448,453],
[452,447,467,424,0,444,446,441],
[464,440,487,450,447,0,473,460],
[452,440,441,443,445,418,0,434],
[456,448,478,438,450,431,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,415,423,393,422,370,408],
[463,0,427,432,422,406,440,442],
[476,464,0,447,472,479,440,449],
[468,459,444,0,463,430,453,468],
[498,469,419,428,0,428,446,420],
[469,485,412,461,463,0,432,433],
[521,451,451,438,445,459,0,459],
[483,449,442,423,471,458,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,441,417,445,479,443,487],
[446,0,412,468,447,451,441,465],
[450,479,0,445,480,459,473,459],
[474,423,446,0,460,422,467,449],
[446,444,411,431,0,462,457,506],
[412,440,432,469,429,0,451,454],
[448,450,418,424,434,440,0,453],
[404,426,432,442,385,437,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,433,457,453,445,438,456],
[482,0,451,476,448,463,430,456],
[458,440,0,463,462,463,441,453],
[434,415,428,0,440,438,418,436],
[438,443,429,451,0,424,427,450],
[446,428,428,453,467,0,420,437],
[453,461,450,473,464,471,0,440],
[435,435,438,455,441,454,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,460,459,436,440,442,499],
[454,0,438,419,466,410,460,456],
[431,453,0,453,429,463,467,450],
[432,472,438,0,457,434,454,495],
[455,425,462,434,0,449,435,456],
[451,481,428,457,442,0,436,473],
[449,431,424,437,456,455,0,476],
[392,435,441,396,435,418,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,481,492,397,452,418,421],
[493,0,526,513,492,477,419,460],
[410,365,0,460,379,429,388,321],
[399,378,431,0,407,433,399,387],
[494,399,512,484,0,482,432,399],
[439,414,462,458,409,0,444,400],
[473,472,503,492,459,447,0,398],
[470,431,570,504,492,491,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,300,269,372,336,357,320,317],
[591,0,488,354,694,422,797,488],
[622,403,0,337,374,477,443,334],
[519,537,554,0,508,268,560,431],
[555,197,517,383,0,265,228,414],
[534,469,414,623,626,0,729,382],
[571,94,448,331,663,162,0,465],
[574,403,557,460,477,509,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,379,432,449,421,429,421],
[475,0,449,482,469,457,499,404],
[512,442,0,496,537,498,509,451],
[459,409,395,0,442,461,456,464],
[442,422,354,449,0,448,434,445],
[470,434,393,430,443,0,430,469],
[462,392,382,435,457,461,0,432],
[470,487,440,427,446,422,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,432,488,463,456,487,462],
[408,0,402,431,422,442,461,416],
[459,489,0,450,446,478,475,429],
[403,460,441,0,438,446,413,448],
[428,469,445,453,0,444,460,433],
[435,449,413,445,447,0,470,433],
[404,430,416,478,431,421,0,464],
[429,475,462,443,458,458,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,473,448,448,478,458,470],
[447,0,468,457,451,462,426,474],
[418,423,0,434,425,448,423,433],
[443,434,457,0,440,446,432,429],
[443,440,466,451,0,463,444,470],
[413,429,443,445,428,0,420,439],
[433,465,468,459,447,471,0,456],
[421,417,458,462,421,452,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,454,448,446,455,428,450],
[434,0,450,434,436,458,430,449],
[437,441,0,439,446,436,436,446],
[443,457,452,0,461,463,449,438],
[445,455,445,430,0,450,451,444],
[436,433,455,428,441,0,420,438],
[463,461,455,442,440,471,0,455],
[441,442,445,453,447,453,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,427,461,409,419,459,446],
[476,0,443,449,441,466,462,463],
[464,448,0,460,419,451,446,463],
[430,442,431,0,403,413,436,410],
[482,450,472,488,0,453,468,429],
[472,425,440,478,438,0,452,478],
[432,429,445,455,423,439,0,432],
[445,428,428,481,462,413,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,430,450,468,437,439,443],
[456,0,432,456,480,438,456,442],
[461,459,0,458,477,430,462,440],
[441,435,433,0,484,428,409,443],
[423,411,414,407,0,425,417,400],
[454,453,461,463,466,0,443,451],
[452,435,429,482,474,448,0,450],
[448,449,451,448,491,440,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,429,454,464,451,444,406],
[427,0,448,425,471,435,430,407],
[462,443,0,445,482,461,444,414],
[437,466,446,0,490,473,489,453],
[427,420,409,401,0,406,408,397],
[440,456,430,418,485,0,451,421],
[447,461,447,402,483,440,0,411],
[485,484,477,438,494,470,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,446,495,436,439,464,496],
[433,0,436,415,442,431,455,430],
[445,455,0,485,463,509,440,474],
[396,476,406,0,389,455,432,434],
[455,449,428,502,0,453,452,491],
[452,460,382,436,438,0,435,436],
[427,436,451,459,439,456,0,425],
[395,461,417,457,400,455,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,445,446,459,460,445,448],
[416,0,419,442,440,433,426,439],
[446,472,0,462,445,461,451,447],
[445,449,429,0,455,435,434,438],
[432,451,446,436,0,437,436,453],
[431,458,430,456,454,0,443,438],
[446,465,440,457,455,448,0,447],
[443,452,444,453,438,453,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,307,569,450,454,332,636,548],
[584,0,766,383,496,549,609,465],
[322,125,0,324,303,241,241,303],
[441,508,567,0,328,406,685,388],
[437,395,588,563,0,412,513,394],
[559,342,650,485,479,0,513,648],
[255,282,650,206,378,378,0,457],
[343,426,588,503,497,243,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,442,434,458,426,437,446],
[464,0,436,455,483,459,467,454],
[449,455,0,463,451,442,443,419],
[457,436,428,0,472,445,458,459],
[433,408,440,419,0,442,435,437],
[465,432,449,446,449,0,461,464],
[454,424,448,433,456,430,0,443],
[445,437,472,432,454,427,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,472,516,435,462,526,454],
[404,0,444,434,461,464,417,396],
[419,447,0,407,445,414,430,437],
[375,457,484,0,482,475,456,449],
[456,430,446,409,0,446,445,430],
[429,427,477,416,445,0,458,434],
[365,474,461,435,446,433,0,441],
[437,495,454,442,461,457,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,415,423,418,402,462,424],
[472,0,436,464,411,437,462,411],
[476,455,0,464,455,437,484,449],
[468,427,427,0,408,423,468,433],
[473,480,436,483,0,456,479,460],
[489,454,454,468,435,0,484,450],
[429,429,407,423,412,407,0,429],
[467,480,442,458,431,441,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,487,433,463,409,421,442],
[500,0,463,496,461,413,430,471],
[404,428,0,459,455,369,389,359],
[458,395,432,0,423,450,428,442],
[428,430,436,468,0,405,366,402],
[482,478,522,441,486,0,468,419],
[470,461,502,463,525,423,0,481],
[449,420,532,449,489,472,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,432,446,451,444,461,457],
[468,0,457,471,461,496,439,456],
[459,434,0,472,405,399,438,475],
[445,420,419,0,403,463,464,430],
[440,430,486,488,0,430,513,454],
[447,395,492,428,461,0,445,430],
[430,452,453,427,378,446,0,404],
[434,435,416,461,437,461,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,435,430,432,447,460,451],
[464,0,444,468,453,467,464,453],
[456,447,0,455,437,453,465,469],
[461,423,436,0,458,458,458,464],
[459,438,454,433,0,453,453,447],
[444,424,438,433,438,0,447,449],
[431,427,426,433,438,444,0,458],
[440,438,422,427,444,442,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,445,417,598,301,435,427],
[382,0,422,397,437,374,408,442],
[446,469,0,391,466,449,457,440],
[474,494,500,0,457,369,502,492],
[293,454,425,434,0,386,430,423],
[590,517,442,522,505,0,513,455],
[456,483,434,389,461,378,0,469],
[464,449,451,399,468,436,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,448,478,443,479,486,462],
[459,0,430,458,443,469,458,424],
[443,461,0,486,436,474,456,446],
[413,433,405,0,402,435,440,416],
[448,448,455,489,0,465,482,431],
[412,422,417,456,426,0,442,405],
[405,433,435,451,409,449,0,415],
[429,467,445,475,460,486,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,466,422,441,444,465,441],
[450,0,450,437,441,423,433,443],
[425,441,0,420,436,431,432,451],
[469,454,471,0,453,441,442,469],
[450,450,455,438,0,449,433,466],
[447,468,460,450,442,0,449,467],
[426,458,459,449,458,442,0,468],
[450,448,440,422,425,424,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,444,440,425,440,438,460],
[436,0,460,430,421,450,425,429],
[447,431,0,429,423,433,421,446],
[451,461,462,0,422,451,459,468],
[466,470,468,469,0,460,454,445],
[451,441,458,440,431,0,431,449],
[453,466,470,432,437,460,0,447],
[431,462,445,423,446,442,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,430,439,427,461,443,401],
[480,0,482,451,462,431,437,460],
[461,409,0,412,437,435,456,414],
[452,440,479,0,468,463,457,472],
[464,429,454,423,0,446,459,418],
[430,460,456,428,445,0,444,449],
[448,454,435,434,432,447,0,448],
[490,431,477,419,473,442,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,511,424,363,514,540,466,437],
[380,0,314,353,451,403,443,406],
[467,577,0,388,508,488,545,470],
[528,538,503,0,564,440,483,482],
[377,440,383,327,0,439,418,411],
[351,488,403,451,452,0,419,373],
[425,448,346,408,473,472,0,429],
[454,485,421,409,480,518,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,392,435,401,417,490,446],
[438,0,362,406,423,521,454,417],
[499,529,0,451,485,481,420,470],
[456,485,440,0,400,389,463,504],
[490,468,406,491,0,460,479,481],
[474,370,410,502,431,0,391,510],
[401,437,471,428,412,500,0,448],
[445,474,421,387,410,381,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,438,448,400,443,463,457],
[459,0,439,451,409,453,448,436],
[453,452,0,441,423,445,504,444],
[443,440,450,0,402,412,473,459],
[491,482,468,489,0,444,566,467],
[448,438,446,479,447,0,471,442],
[428,443,387,418,325,420,0,418],
[434,455,447,432,424,449,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,390,441,478,422,463,473,447],
[501,0,483,505,427,472,483,452],
[450,408,0,487,471,416,494,433],
[413,386,404,0,407,396,430,416],
[469,464,420,484,0,415,474,434],
[428,419,475,495,476,0,457,441],
[418,408,397,461,417,434,0,409],
[444,439,458,475,457,450,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,491,416,423,436,447,436],
[434,0,485,431,440,412,428,406],
[400,406,0,433,381,393,392,392],
[475,460,458,0,429,425,438,438],
[468,451,510,462,0,412,435,438],
[455,479,498,466,479,0,414,482],
[444,463,499,453,456,477,0,443],
[455,485,499,453,453,409,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,452,452,480,441,455,477],
[441,0,416,459,435,425,426,467],
[439,475,0,444,452,445,451,464],
[439,432,447,0,437,435,439,455],
[411,456,439,454,0,446,444,457],
[450,466,446,456,445,0,437,466],
[436,465,440,452,447,454,0,452],
[414,424,427,436,434,425,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,463,445,458,449,447,445],
[441,0,444,448,460,445,436,444],
[428,447,0,466,444,431,449,449],
[446,443,425,0,435,431,433,417],
[433,431,447,456,0,438,445,453],
[442,446,460,460,453,0,427,443],
[444,455,442,458,446,464,0,458],
[446,447,442,474,438,448,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,433,457,434,461,449,478],
[443,0,446,460,447,448,469,479],
[458,445,0,449,444,446,460,476],
[434,431,442,0,428,423,443,473],
[457,444,447,463,0,435,456,466],
[430,443,445,468,456,0,463,471],
[442,422,431,448,435,428,0,460],
[413,412,415,418,425,420,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,482,489,449,462,449,462],
[452,0,434,454,456,455,432,468],
[409,457,0,437,436,457,403,475],
[402,437,454,0,433,466,392,483],
[442,435,455,458,0,469,420,506],
[429,436,434,425,422,0,428,457],
[442,459,488,499,471,463,0,467],
[429,423,416,408,385,434,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,449,469,447,461,461,437],
[428,0,409,454,421,440,459,419],
[442,482,0,467,451,462,492,453],
[422,437,424,0,416,433,444,418],
[444,470,440,475,0,435,484,428],
[430,451,429,458,456,0,469,427],
[430,432,399,447,407,422,0,414],
[454,472,438,473,463,464,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,473,444,460,475,487,462],
[424,0,445,471,471,454,464,459],
[418,446,0,454,403,424,435,419],
[447,420,437,0,422,437,468,439],
[431,420,488,469,0,465,468,446],
[416,437,467,454,426,0,480,431],
[404,427,456,423,423,411,0,433],
[429,432,472,452,445,460,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,434,442,429,440,442,436],
[439,0,433,469,466,450,438,451],
[457,458,0,467,447,445,451,464],
[449,422,424,0,437,426,431,438],
[462,425,444,454,0,407,438,419],
[451,441,446,465,484,0,445,465],
[449,453,440,460,453,446,0,442],
[455,440,427,453,472,426,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,462,485,498,434,448,463],
[418,0,449,457,436,444,464,440],
[429,442,0,475,439,441,457,451],
[406,434,416,0,443,410,404,396],
[393,455,452,448,0,432,400,427],
[457,447,450,481,459,0,422,449],
[443,427,434,487,491,469,0,469],
[428,451,440,495,464,442,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,478,455,446,450,433,438],
[454,0,471,468,465,445,444,439],
[413,420,0,429,429,423,428,441],
[436,423,462,0,427,432,417,432],
[445,426,462,464,0,456,424,448],
[441,446,468,459,435,0,452,464],
[458,447,463,474,467,439,0,462],
[453,452,450,459,443,427,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,451,446,428,442,444,432],
[438,0,437,383,403,412,434,426],
[440,454,0,414,414,429,448,426],
[445,508,477,0,450,463,455,447],
[463,488,477,441,0,479,467,480],
[449,479,462,428,412,0,435,448],
[447,457,443,436,424,456,0,434],
[459,465,465,444,411,443,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,400,418,379,427,427,467],
[453,0,460,437,448,434,474,474],
[491,431,0,444,447,441,459,460],
[473,454,447,0,416,426,422,477],
[512,443,444,475,0,473,466,498],
[464,457,450,465,418,0,473,479],
[464,417,432,469,425,418,0,472],
[424,417,431,414,393,412,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,445,463,413,466,434,428],
[452,0,458,476,456,463,451,442],
[446,433,0,472,421,412,448,447],
[428,415,419,0,422,423,410,410],
[478,435,470,469,0,464,466,433],
[425,428,479,468,427,0,447,444],
[457,440,443,481,425,444,0,409],
[463,449,444,481,458,447,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,442,438,445,455,454,456],
[444,0,445,462,457,454,458,456],
[449,446,0,458,443,446,461,460],
[453,429,433,0,438,442,472,462],
[446,434,448,453,0,453,472,444],
[436,437,445,449,438,0,440,453],
[437,433,430,419,419,451,0,431],
[435,435,431,429,447,438,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,384,480,420,407,422,427,380],
[507,0,484,534,417,454,552,531],
[411,407,0,481,369,381,407,440],
[471,357,410,0,297,380,391,351],
[484,474,522,594,0,379,519,397],
[469,437,510,511,512,0,557,419],
[464,339,484,500,372,334,0,385],
[511,360,451,540,494,472,506,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,432,455,446,450,466,450],
[435,0,430,486,430,426,472,465],
[459,461,0,465,446,411,444,460],
[436,405,426,0,405,421,442,449],
[445,461,445,486,0,424,471,447],
[441,465,480,470,467,0,487,457],
[425,419,447,449,420,404,0,454],
[441,426,431,442,444,434,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,462,412,473,463,436,398],
[426,0,470,460,465,452,442,452],
[429,421,0,449,450,447,459,409],
[479,431,442,0,447,463,449,426],
[418,426,441,444,0,452,463,412],
[428,439,444,428,439,0,460,431],
[455,449,432,442,428,431,0,406],
[493,439,482,465,479,460,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,441,428,427,446,422,445],
[432,0,446,425,434,413,428,452],
[450,445,0,422,424,431,448,429],
[463,466,469,0,492,468,443,464],
[464,457,467,399,0,460,436,426],
[445,478,460,423,431,0,433,464],
[469,463,443,448,455,458,0,443],
[446,439,462,427,465,427,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,444,453,440,476,465,451],
[418,0,443,436,427,455,446,454],
[447,448,0,426,452,478,458,458],
[438,455,465,0,434,445,458,454],
[451,464,439,457,0,441,462,463],
[415,436,413,446,450,0,429,441],
[426,445,433,433,429,462,0,466],
[440,437,433,437,428,450,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,467,487,487,409,498,546],
[406,0,500,506,412,451,447,471],
[424,391,0,446,460,498,468,442],
[404,385,445,0,469,407,478,499],
[404,479,431,422,0,466,467,439],
[482,440,393,484,425,0,501,516],
[393,444,423,413,424,390,0,404],
[345,420,449,392,452,375,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,409,478,414,461,410,414],
[463,0,450,486,401,519,462,465],
[482,441,0,477,382,501,449,433],
[413,405,414,0,391,449,407,398],
[477,490,509,500,0,521,475,426],
[430,372,390,442,370,0,428,457],
[481,429,442,484,416,463,0,452],
[477,426,458,493,465,434,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,453,466,465,472,464,437],
[406,0,406,399,418,431,402,400],
[438,485,0,441,457,469,445,439],
[425,492,450,0,421,458,471,422],
[426,473,434,470,0,493,449,467],
[419,460,422,433,398,0,412,433],
[427,489,446,420,442,479,0,428],
[454,491,452,469,424,458,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,437,487,467,485,435,506],
[414,0,417,445,471,422,384,433],
[454,474,0,438,480,493,453,483],
[404,446,453,0,460,414,439,498],
[424,420,411,431,0,387,426,439],
[406,469,398,477,504,0,480,489],
[456,507,438,452,465,411,0,471],
[385,458,408,393,452,402,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,373,425,448,340,403,368],
[487,0,452,457,439,451,453,446],
[518,439,0,489,444,455,447,465],
[466,434,402,0,404,401,420,433],
[443,452,447,487,0,450,474,422],
[551,440,436,490,441,0,443,485],
[488,438,444,471,417,448,0,461],
[523,445,426,458,469,406,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,513,450,493,492,519,469,389],
[378,0,427,509,414,411,511,365],
[441,464,0,519,434,399,442,449],
[398,382,372,0,406,391,371,385],
[399,477,457,485,0,544,495,345],
[372,480,492,500,347,0,492,350],
[422,380,449,520,396,399,0,360],
[502,526,442,506,546,541,531,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,428,439,419,436,423,416],
[480,0,440,453,416,435,432,444],
[463,451,0,447,433,419,432,441],
[452,438,444,0,433,452,440,448],
[472,475,458,458,0,448,442,460],
[455,456,472,439,443,0,448,450],
[468,459,459,451,449,443,0,435],
[475,447,450,443,431,441,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,442,497,504,464,478,462],
[443,0,441,488,460,457,434,457],
[449,450,0,452,437,470,440,408],
[394,403,439,0,460,425,403,428],
[387,431,454,431,0,440,404,407],
[427,434,421,466,451,0,449,396],
[413,457,451,488,487,442,0,427],
[429,434,483,463,484,495,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,423,431,454,426,434,424],
[450,0,439,437,421,428,456,390],
[468,452,0,454,482,447,507,416],
[460,454,437,0,433,456,472,449],
[437,470,409,458,0,418,449,415],
[465,463,444,435,473,0,480,428],
[457,435,384,419,442,411,0,400],
[467,501,475,442,476,463,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,408,445,441,457,435,440],
[458,0,462,467,438,500,440,460],
[483,429,0,468,462,473,457,456],
[446,424,423,0,421,477,425,461],
[450,453,429,470,0,486,469,441],
[434,391,418,414,405,0,414,417],
[456,451,434,466,422,477,0,501],
[451,431,435,430,450,474,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,365,447,384,469,334,433],
[407,0,385,453,407,398,429,379],
[526,506,0,494,535,465,487,441],
[444,438,397,0,488,454,393,444],
[507,484,356,403,0,472,413,457],
[422,493,426,437,419,0,369,394],
[557,462,404,498,478,522,0,458],
[458,512,450,447,434,497,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,487,470,410,491,460,459],
[412,0,418,473,402,492,453,461],
[404,473,0,442,409,491,452,391],
[421,418,449,0,398,483,444,433],
[481,489,482,493,0,524,508,445],
[400,399,400,408,367,0,437,402],
[431,438,439,447,383,454,0,463],
[432,430,500,458,446,489,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,478,445,457,462,465,466],
[443,0,483,455,433,438,457,450],
[413,408,0,444,412,428,448,456],
[446,436,447,0,421,479,422,500],
[434,458,479,470,0,471,460,514],
[429,453,463,412,420,0,447,481],
[426,434,443,469,431,444,0,441],
[425,441,435,391,377,410,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,434,398,416,414,424,428],
[475,0,455,450,449,445,432,448],
[457,436,0,444,443,445,434,432],
[493,441,447,0,450,477,430,471],
[475,442,448,441,0,459,453,426],
[477,446,446,414,432,0,434,434],
[467,459,457,461,438,457,0,449],
[463,443,459,420,465,457,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,435,435,426,433,410,420],
[454,0,441,448,440,433,431,435],
[456,450,0,456,448,438,442,452],
[456,443,435,0,440,413,431,427],
[465,451,443,451,0,450,439,444],
[458,458,453,478,441,0,447,475],
[481,460,449,460,452,444,0,456],
[471,456,439,464,447,416,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,509,473,387,409,386,498],
[427,0,562,474,380,378,439,468],
[382,329,0,348,373,296,338,358],
[418,417,543,0,438,437,463,419],
[504,511,518,453,0,393,474,439],
[482,513,595,454,498,0,434,580],
[505,452,553,428,417,457,0,491],
[393,423,533,472,452,311,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,438,465,447,463,453,459],
[436,0,441,447,425,452,455,450],
[453,450,0,454,414,451,418,432],
[426,444,437,0,443,468,425,463],
[444,466,477,448,0,483,454,458],
[428,439,440,423,408,0,421,451],
[438,436,473,466,437,470,0,463],
[432,441,459,428,433,440,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,480,490,483,442,497,475],
[400,0,400,475,438,382,438,446],
[411,491,0,508,463,449,490,481],
[401,416,383,0,431,366,400,400],
[408,453,428,460,0,450,462,447],
[449,509,442,525,441,0,503,473],
[394,453,401,491,429,388,0,441],
[416,445,410,491,444,418,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,445,421,460,434,571,454],
[440,0,432,383,399,436,533,356],
[446,459,0,428,409,493,547,417],
[470,508,463,0,511,464,602,433],
[431,492,482,380,0,509,576,360],
[457,455,398,427,382,0,493,360],
[320,358,344,289,315,398,0,339],
[437,535,474,458,531,531,552,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,436,454,468,443,462,437],
[474,0,452,492,478,479,458,440],
[455,439,0,450,480,451,441,436],
[437,399,441,0,454,445,455,442],
[423,413,411,437,0,426,463,471],
[448,412,440,446,465,0,449,433],
[429,433,450,436,428,442,0,429],
[454,451,455,449,420,458,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,441,457,459,416,439,428],
[466,0,446,465,463,445,462,458],
[450,445,0,469,463,457,469,445],
[434,426,422,0,446,437,435,407],
[432,428,428,445,0,429,428,428],
[475,446,434,454,462,0,448,433],
[452,429,422,456,463,443,0,414],
[463,433,446,484,463,458,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,465,471,460,469,513,444],
[406,0,453,441,454,469,470,486],
[426,438,0,467,453,426,464,480],
[420,450,424,0,449,459,425,464],
[431,437,438,442,0,476,468,485],
[422,422,465,432,415,0,483,485],
[378,421,427,466,423,408,0,490],
[447,405,411,427,406,406,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,432,431,454,454,443,437],
[431,0,420,447,449,440,433,435],
[459,471,0,451,454,465,430,451],
[460,444,440,0,452,448,431,418],
[437,442,437,439,0,449,416,423],
[437,451,426,443,442,0,432,424],
[448,458,461,460,475,459,0,438],
[454,456,440,473,468,467,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,437,431,445,474,477,451],
[420,0,430,443,439,455,465,436],
[454,461,0,419,435,436,445,436],
[460,448,472,0,442,449,455,439],
[446,452,456,449,0,441,464,441],
[417,436,455,442,450,0,450,458],
[414,426,446,436,427,441,0,421],
[440,455,455,452,450,433,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,488,467,488,448,484,485],
[451,0,455,439,475,457,466,486],
[403,436,0,431,437,424,468,460],
[424,452,460,0,452,457,466,473],
[403,416,454,439,0,437,433,452],
[443,434,467,434,454,0,457,456],
[407,425,423,425,458,434,0,432],
[406,405,431,418,439,435,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,371,412,378,395,409,410],
[434,0,405,453,465,435,473,411],
[520,486,0,491,480,486,442,466],
[479,438,400,0,444,431,393,430],
[513,426,411,447,0,401,380,375],
[496,456,405,460,490,0,431,444],
[482,418,449,498,511,460,0,444],
[481,480,425,461,516,447,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,481,457,440,411,425,410],
[476,0,467,484,437,452,487,495],
[410,424,0,433,414,406,448,434],
[434,407,458,0,442,432,426,470],
[451,454,477,449,0,422,440,484],
[480,439,485,459,469,0,441,478],
[466,404,443,465,451,450,0,440],
[481,396,457,421,407,413,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,408,495,555,400,598,433],
[415,0,470,559,439,370,513,482],
[483,421,0,475,471,477,526,453],
[396,332,416,0,497,445,496,509],
[336,452,420,394,0,312,537,424],
[491,521,414,446,579,0,462,494],
[293,378,365,395,354,429,0,372],
[458,409,438,382,467,397,519,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,432,435,449,464,435,443],
[436,0,405,413,415,444,429,409],
[459,486,0,444,462,486,456,444],
[456,478,447,0,424,461,449,466],
[442,476,429,467,0,459,453,459],
[427,447,405,430,432,0,405,413],
[456,462,435,442,438,486,0,454],
[448,482,447,425,432,478,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,443,452,453,452,445,435],
[456,0,486,444,471,467,474,478],
[448,405,0,423,443,459,447,400],
[439,447,468,0,446,449,445,435],
[438,420,448,445,0,436,463,426],
[439,424,432,442,455,0,436,432],
[446,417,444,446,428,455,0,401],
[456,413,491,456,465,459,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,451,454,459,455,426,451],
[411,0,435,425,420,460,408,415],
[440,456,0,459,445,463,413,438],
[437,466,432,0,419,467,422,423],
[432,471,446,472,0,453,439,428],
[436,431,428,424,438,0,411,412],
[465,483,478,469,452,480,0,444],
[440,476,453,468,463,479,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,444,432,446,458,450,443],
[412,0,432,403,424,428,420,411],
[447,459,0,438,451,448,465,430],
[459,488,453,0,465,456,480,440],
[445,467,440,426,0,439,448,452],
[433,463,443,435,452,0,464,437],
[441,471,426,411,443,427,0,432],
[448,480,461,451,439,454,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,468,479,470,428,479,429],
[453,0,482,462,481,442,470,484],
[423,409,0,450,428,420,450,436],
[412,429,441,0,449,443,436,433],
[421,410,463,442,0,418,446,442],
[463,449,471,448,473,0,471,438],
[412,421,441,455,445,420,0,445],
[462,407,455,458,449,453,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,445,474,432,483,427,475],
[431,0,437,435,449,485,455,466],
[446,454,0,489,453,482,431,460],
[417,456,402,0,411,442,424,470],
[459,442,438,480,0,461,440,482],
[408,406,409,449,430,0,418,487],
[464,436,460,467,451,473,0,478],
[416,425,431,421,409,404,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,475,441,436,437,434,442],
[479,0,470,455,429,455,437,450],
[416,421,0,417,424,465,395,447],
[450,436,474,0,462,499,454,460],
[455,462,467,429,0,464,447,452],
[454,436,426,392,427,0,444,431],
[457,454,496,437,444,447,0,444],
[449,441,444,431,439,460,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,427,459,419,471,448,468],
[417,0,443,474,447,496,465,475],
[464,448,0,450,437,437,438,459],
[432,417,441,0,407,453,467,448],
[472,444,454,484,0,491,459,480],
[420,395,454,438,400,0,442,448],
[443,426,453,424,432,449,0,496],
[423,416,432,443,411,443,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,451,447,406,397,448,431],
[430,0,439,448,462,400,434,412],
[440,452,0,463,407,419,417,408],
[444,443,428,0,407,422,455,410],
[485,429,484,484,0,459,463,467],
[494,491,472,469,432,0,472,452],
[443,457,474,436,428,419,0,448],
[460,479,483,481,424,439,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,458,443,471,455,458,448],
[415,0,449,414,437,415,450,440],
[433,442,0,430,473,435,440,442],
[448,477,461,0,472,441,454,457],
[420,454,418,419,0,416,437,422],
[436,476,456,450,475,0,481,428],
[433,441,451,437,454,410,0,428],
[443,451,449,434,469,463,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,451,468,456,453,462,443],
[435,0,459,435,480,478,452,439],
[440,432,0,440,461,489,464,439],
[423,456,451,0,434,478,477,474],
[435,411,430,457,0,447,438,451],
[438,413,402,413,444,0,436,420],
[429,439,427,414,453,455,0,443],
[448,452,452,417,440,471,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,462,437,468,421,401,447],
[453,0,494,445,445,450,434,448],
[429,397,0,428,431,419,411,448],
[454,446,463,0,447,477,424,452],
[423,446,460,444,0,433,424,451],
[470,441,472,414,458,0,469,471],
[490,457,480,467,467,422,0,485],
[444,443,443,439,440,420,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,443,420,456,427,421,458],
[462,0,463,444,456,441,448,456],
[448,428,0,465,454,440,464,443],
[471,447,426,0,463,434,440,466],
[435,435,437,428,0,443,415,433],
[464,450,451,457,448,0,445,451],
[470,443,427,451,476,446,0,454],
[433,435,448,425,458,440,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,452,483,443,429,446,441],
[440,0,426,456,450,438,430,434],
[439,465,0,456,448,415,462,432],
[408,435,435,0,413,426,431,427],
[448,441,443,478,0,460,450,443],
[462,453,476,465,431,0,435,467],
[445,461,429,460,441,456,0,430],
[450,457,459,464,448,424,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,472,468,432,482,463,450],
[430,0,434,452,446,452,441,441],
[419,457,0,460,437,462,447,452],
[423,439,431,0,418,454,452,419],
[459,445,454,473,0,467,459,457],
[409,439,429,437,424,0,442,429],
[428,450,444,439,432,449,0,439],
[441,450,439,472,434,462,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,431,409,402,460,437,434],
[442,0,397,404,429,420,355,427],
[460,494,0,439,450,457,419,393],
[482,487,452,0,452,460,422,426],
[489,462,441,439,0,427,442,420],
[431,471,434,431,464,0,430,462],
[454,536,472,469,449,461,0,408],
[457,464,498,465,471,429,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,509,417,512,444,459,467],
[409,0,439,358,453,448,347,406],
[382,452,0,402,463,476,430,429],
[474,533,489,0,515,483,444,494],
[379,438,428,376,0,467,394,414],
[447,443,415,408,424,0,398,402],
[432,544,461,447,497,493,0,482],
[424,485,462,397,477,489,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,542,340,405,487,400,453],
[449,0,522,491,452,523,474,419],
[349,369,0,390,381,432,405,433],
[551,400,501,0,483,496,435,539],
[486,439,510,408,0,481,449,450],
[404,368,459,395,410,0,426,384],
[491,417,486,456,442,465,0,472],
[438,472,458,352,441,507,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,349,394,445,409,438,411],
[486,0,457,483,435,505,549,496],
[542,434,0,453,452,503,462,461],
[497,408,438,0,424,414,479,431],
[446,456,439,467,0,521,473,440],
[482,386,388,477,370,0,457,433],
[453,342,429,412,418,434,0,437],
[480,395,430,460,451,458,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,485,461,482,503,471,443],
[448,0,451,431,450,474,461,456],
[406,440,0,415,449,448,447,420],
[430,460,476,0,441,490,439,436],
[409,441,442,450,0,429,448,442],
[388,417,443,401,462,0,457,429],
[420,430,444,452,443,434,0,430],
[448,435,471,455,449,462,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,511,475,404,439,424,451],
[437,0,459,504,413,443,454,466],
[380,432,0,439,451,436,461,422],
[416,387,452,0,420,380,436,369],
[487,478,440,471,0,483,464,460],
[452,448,455,511,408,0,490,406],
[467,437,430,455,427,401,0,387],
[440,425,469,522,431,485,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,336,350,176,367,364,438],
[408,0,580,479,493,602,564,473],
[555,311,0,323,506,537,416,435],
[541,412,568,0,536,604,633,430],
[715,398,385,355,0,352,425,494],
[524,289,354,287,539,0,416,512],
[527,327,475,258,466,475,0,491],
[453,418,456,461,397,379,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,466,453,464,438,494,478],
[413,0,456,437,448,426,455,458],
[425,435,0,449,427,469,453,469],
[438,454,442,0,455,451,449,457],
[427,443,464,436,0,420,458,470],
[453,465,422,440,471,0,445,456],
[397,436,438,442,433,446,0,462],
[413,433,422,434,421,435,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,472,450,448,430,457,451],
[422,0,467,429,419,440,402,428],
[419,424,0,406,416,415,391,390],
[441,462,485,0,446,452,429,440],
[443,472,475,445,0,432,418,432],
[461,451,476,439,459,0,409,472],
[434,489,500,462,473,482,0,438],
[440,463,501,451,459,419,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,452,454,439,423,440,442],
[435,0,437,452,481,457,465,504],
[439,454,0,462,442,457,465,457],
[437,439,429,0,440,441,420,422],
[452,410,449,451,0,445,434,438],
[468,434,434,450,446,0,484,439],
[451,426,426,471,457,407,0,428],
[449,387,434,469,453,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,444,434,446,419,424,439],
[478,0,422,440,453,454,443,457],
[447,469,0,449,456,457,434,459],
[457,451,442,0,473,449,426,434],
[445,438,435,418,0,434,434,454],
[472,437,434,442,457,0,447,466],
[467,448,457,465,457,444,0,460],
[452,434,432,457,437,425,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,511,492,464,417,494,456],
[423,0,414,468,473,420,427,416],
[380,477,0,422,460,403,488,448],
[399,423,469,0,377,413,445,420],
[427,418,431,514,0,443,449,422],
[474,471,488,478,448,0,415,484],
[397,464,403,446,442,476,0,392],
[435,475,443,471,469,407,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,292,363,326,424,334,391],
[502,0,391,393,450,558,404,432],
[599,500,0,465,463,569,428,521],
[528,498,426,0,461,521,477,453],
[565,441,428,430,0,509,504,511],
[467,333,322,370,382,0,409,453],
[557,487,463,414,387,482,0,529],
[500,459,370,438,380,438,362,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,407,450,443,430,418,439],
[445,0,417,457,441,442,426,448],
[484,474,0,467,457,475,442,466],
[441,434,424,0,435,439,457,448],
[448,450,434,456,0,452,439,447],
[461,449,416,452,439,0,425,456],
[473,465,449,434,452,466,0,459],
[452,443,425,443,444,435,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,437,432,435,427,453,453],
[439,0,419,435,444,430,438,440],
[454,472,0,447,470,442,448,460],
[459,456,444,0,448,456,463,470],
[456,447,421,443,0,454,452,455],
[464,461,449,435,437,0,469,454],
[438,453,443,428,439,422,0,452],
[438,451,431,421,436,437,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,469,444,401,458,489,463],
[454,0,445,431,415,392,479,393],
[422,446,0,445,435,468,476,428],
[447,460,446,0,449,436,482,447],
[490,476,456,442,0,417,466,438],
[433,499,423,455,474,0,479,419],
[402,412,415,409,425,412,0,396],
[428,498,463,444,453,472,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,450,453,474,450,477,495],
[451,0,456,439,465,433,446,465],
[441,435,0,439,438,422,486,440],
[438,452,452,0,451,415,449,458],
[417,426,453,440,0,412,429,439],
[441,458,469,476,479,0,502,485],
[414,445,405,442,462,389,0,447],
[396,426,451,433,452,406,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,446,470,442,457,440,454],
[455,0,462,484,437,443,458,459],
[445,429,0,454,440,449,443,448],
[421,407,437,0,409,434,419,440],
[449,454,451,482,0,466,443,463],
[434,448,442,457,425,0,452,445],
[451,433,448,472,448,439,0,456],
[437,432,443,451,428,446,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,417,460,436,492,451,465],
[405,0,434,448,474,486,445,434],
[474,457,0,434,472,479,438,442],
[431,443,457,0,463,486,438,454],
[455,417,419,428,0,448,453,451],
[399,405,412,405,443,0,437,406],
[440,446,453,453,438,454,0,424],
[426,457,449,437,440,485,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,463,442,449,475,440,483],
[427,0,435,425,432,414,425,458],
[428,456,0,421,413,450,429,485],
[449,466,470,0,461,436,440,477],
[442,459,478,430,0,437,457,478],
[416,477,441,455,454,0,456,474],
[451,466,462,451,434,435,0,506],
[408,433,406,414,413,417,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,437,439,427,449,447,440],
[440,0,445,455,443,448,445,443],
[454,446,0,459,442,438,454,454],
[452,436,432,0,454,447,456,459],
[464,448,449,437,0,450,447,441],
[442,443,453,444,441,0,448,464],
[444,446,437,435,444,443,0,454],
[451,448,437,432,450,427,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,355,403,387,424,457,373,350],
[536,0,499,454,421,550,481,504],
[488,392,0,440,419,461,421,427],
[504,437,451,0,454,447,432,413],
[467,470,472,437,0,417,417,423],
[434,341,430,444,474,0,486,454],
[518,410,470,459,474,405,0,425],
[541,387,464,478,468,437,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,433,426,452,462,420,435],
[452,0,454,444,438,468,450,465],
[458,437,0,453,451,465,448,414],
[465,447,438,0,454,474,451,451],
[439,453,440,437,0,424,440,461],
[429,423,426,417,467,0,434,445],
[471,441,443,440,451,457,0,456],
[456,426,477,440,430,446,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,462,437,436,428,435,433],
[431,0,436,411,435,435,434,428],
[429,455,0,440,433,424,430,435],
[454,480,451,0,457,444,459,456],
[455,456,458,434,0,435,433,435],
[463,456,467,447,456,0,443,465],
[456,457,461,432,458,448,0,460],
[458,463,456,435,456,426,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,410,388,440,406,407,415],
[454,0,452,418,460,421,427,452],
[481,439,0,416,501,443,445,461],
[503,473,475,0,503,443,456,463],
[451,431,390,388,0,429,432,404],
[485,470,448,448,462,0,437,470],
[484,464,446,435,459,454,0,459],
[476,439,430,428,487,421,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,450,451,453,429,445,464],
[464,0,436,480,450,450,466,457],
[441,455,0,437,449,408,481,438],
[440,411,454,0,431,382,434,424],
[438,441,442,460,0,439,462,456],
[462,441,483,509,452,0,462,468],
[446,425,410,457,429,429,0,418],
[427,434,453,467,435,423,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,456,445,425,448,483,444],
[449,0,506,461,480,402,505,416],
[435,385,0,423,478,399,421,423],
[446,430,468,0,447,453,438,431],
[466,411,413,444,0,442,460,436],
[443,489,492,438,449,0,486,467],
[408,386,470,453,431,405,0,445],
[447,475,468,460,455,424,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,460,498,482,464,466,439],
[424,0,435,472,476,478,413,436],
[431,456,0,448,450,442,430,427],
[393,419,443,0,483,424,433,393],
[409,415,441,408,0,400,397,417],
[427,413,449,467,491,0,410,426],
[425,478,461,458,494,481,0,465],
[452,455,464,498,474,465,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,481,447,443,447,460,448],
[440,0,465,427,434,439,445,454],
[410,426,0,405,415,439,430,424],
[444,464,486,0,463,454,446,473],
[448,457,476,428,0,466,475,460],
[444,452,452,437,425,0,443,440],
[431,446,461,445,416,448,0,450],
[443,437,467,418,431,451,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,452,506,440,447,463,465],
[383,0,398,468,420,383,394,431],
[439,493,0,483,474,448,425,496],
[385,423,408,0,383,371,411,424],
[451,471,417,508,0,435,435,464],
[444,508,443,520,456,0,433,499],
[428,497,466,480,456,458,0,460],
[426,460,395,467,427,392,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,404,406,432,439,432,430],
[466,0,407,445,453,452,427,437],
[487,484,0,448,439,446,457,447],
[485,446,443,0,453,481,447,439],
[459,438,452,438,0,427,436,456],
[452,439,445,410,464,0,434,408],
[459,464,434,444,455,457,0,448],
[461,454,444,452,435,483,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,432,428,448,449,427,443],
[468,0,489,431,443,423,447,504],
[459,402,0,419,460,396,431,451],
[463,460,472,0,478,430,441,485],
[443,448,431,413,0,408,393,438],
[442,468,495,461,483,0,445,484],
[464,444,460,450,498,446,0,464],
[448,387,440,406,453,407,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,454,447,445,461,426,477],
[452,0,464,485,472,436,459,494],
[437,427,0,461,463,441,441,453],
[444,406,430,0,411,435,434,459],
[446,419,428,480,0,439,442,442],
[430,455,450,456,452,0,466,512],
[465,432,450,457,449,425,0,428],
[414,397,438,432,449,379,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,438,430,456,433,422,451],
[439,0,439,453,445,452,418,435],
[453,452,0,424,446,438,416,444],
[461,438,467,0,445,428,431,426],
[435,446,445,446,0,437,449,430],
[458,439,453,463,454,0,425,439],
[469,473,475,460,442,466,0,439],
[440,456,447,465,461,452,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,407,425,355,447,384,424],
[513,0,405,401,482,455,432,480],
[484,486,0,439,440,506,450,488],
[466,490,452,0,475,495,432,456],
[536,409,451,416,0,455,411,448],
[444,436,385,396,436,0,406,442],
[507,459,441,459,480,485,0,468],
[467,411,403,435,443,449,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,564,483,435,439,367,415],
[409,0,415,356,438,408,338,424],
[327,476,0,422,488,449,415,433],
[408,535,469,0,470,417,454,383],
[456,453,403,421,0,410,390,487],
[452,483,442,474,481,0,430,359],
[524,553,476,437,501,461,0,484],
[476,467,458,508,404,532,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,436,418,439,481,472,476],
[422,0,399,433,424,416,401,430],
[455,492,0,411,484,435,422,486],
[473,458,480,0,434,475,433,472],
[452,467,407,457,0,404,436,488],
[410,475,456,416,487,0,464,440],
[419,490,469,458,455,427,0,471],
[415,461,405,419,403,451,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,466,469,456,410,393,454],
[448,0,414,457,432,441,416,447],
[425,477,0,442,438,452,452,449],
[422,434,449,0,420,430,410,421],
[435,459,453,471,0,438,428,403],
[481,450,439,461,453,0,457,434],
[498,475,439,481,463,434,0,440],
[437,444,442,470,488,457,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,440,442,439,448,440,435],
[429,0,433,428,441,426,425,416],
[451,458,0,444,456,459,437,446],
[449,463,447,0,435,473,439,425],
[452,450,435,456,0,446,441,426],
[443,465,432,418,445,0,457,449],
[451,466,454,452,450,434,0,428],
[456,475,445,466,465,442,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,447,459,431,449,411,451],
[448,0,468,454,446,460,413,451],
[444,423,0,440,439,430,426,449],
[432,437,451,0,429,438,446,434],
[460,445,452,462,0,455,429,450],
[442,431,461,453,436,0,433,438],
[480,478,465,445,462,458,0,476],
[440,440,442,457,441,453,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,457,449,433,475,443,430],
[423,0,392,413,418,409,395,397],
[434,499,0,464,459,465,476,465],
[442,478,427,0,387,459,451,465],
[458,473,432,504,0,481,464,429],
[416,482,426,432,410,0,429,390],
[448,496,415,440,427,462,0,416],
[461,494,426,426,462,501,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,451,462,492,470,482,428],
[432,0,481,488,499,500,453,457],
[440,410,0,461,487,480,427,429],
[429,403,430,0,475,450,469,427],
[399,392,404,416,0,444,437,437],
[421,391,411,441,447,0,418,444],
[409,438,464,422,454,473,0,456],
[463,434,462,464,454,447,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,364,420,272,293,423,291],
[489,0,509,495,324,394,448,355],
[527,382,0,460,344,397,575,480],
[471,396,431,0,385,286,486,292],
[619,567,547,506,0,434,598,352],
[598,497,494,605,457,0,529,398],
[468,443,316,405,293,362,0,317],
[600,536,411,599,539,493,574,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,457,455,431,472,441,422],
[444,0,455,446,473,473,449,452],
[434,436,0,443,452,463,421,428],
[436,445,448,0,436,457,434,439],
[460,418,439,455,0,460,452,440],
[419,418,428,434,431,0,426,431],
[450,442,470,457,439,465,0,437],
[469,439,463,452,451,460,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,495,454,448,457,483,438],
[427,0,428,406,438,509,477,467],
[396,463,0,434,411,455,421,475],
[437,485,457,0,481,497,477,484],
[443,453,480,410,0,475,499,465],
[434,382,436,394,416,0,433,444],
[408,414,470,414,392,458,0,477],
[453,424,416,407,426,447,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,408,446,424,436,443,440],
[442,0,387,430,417,447,435,422],
[483,504,0,445,452,468,496,474],
[445,461,446,0,461,449,449,449],
[467,474,439,430,0,468,459,457],
[455,444,423,442,423,0,429,437],
[448,456,395,442,432,462,0,461],
[451,469,417,442,434,454,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,427,381,422,397,393,414],
[486,0,468,451,474,444,466,478],
[464,423,0,422,449,406,433,425],
[510,440,469,0,471,466,477,467],
[469,417,442,420,0,429,425,447],
[494,447,485,425,462,0,485,455],
[498,425,458,414,466,406,0,432],
[477,413,466,424,444,436,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,457,395,485,442,439,465],
[418,0,429,456,471,472,425,459],
[434,462,0,421,480,446,452,466],
[496,435,470,0,479,471,465,496],
[406,420,411,412,0,460,429,454],
[449,419,445,420,431,0,431,515],
[452,466,439,426,462,460,0,469],
[426,432,425,395,437,376,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,418,428,458,424,421,421],
[449,0,440,420,462,436,421,442],
[473,451,0,425,438,450,436,432],
[463,471,466,0,472,441,464,440],
[433,429,453,419,0,432,439,427],
[467,455,441,450,459,0,470,450],
[470,470,455,427,452,421,0,428],
[470,449,459,451,464,441,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,421,432,434,413,420,458],
[443,0,404,432,414,415,413,432],
[470,487,0,446,468,444,451,485],
[459,459,445,0,436,418,435,454],
[457,477,423,455,0,442,444,467],
[478,476,447,473,449,0,440,475],
[471,478,440,456,447,451,0,476],
[433,459,406,437,424,416,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,407,457,420,417,403,450],
[466,0,443,464,444,439,424,451],
[484,448,0,444,415,423,460,455],
[434,427,447,0,425,434,418,474],
[471,447,476,466,0,434,471,474],
[474,452,468,457,457,0,444,480],
[488,467,431,473,420,447,0,497],
[441,440,436,417,417,411,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,454,411,475,470,447,520],
[461,0,407,451,387,459,448,489],
[437,484,0,460,436,483,508,523],
[480,440,431,0,462,426,467,514],
[416,504,455,429,0,472,455,499],
[421,432,408,465,419,0,477,492],
[444,443,383,424,436,414,0,464],
[371,402,368,377,392,399,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,437,434,428,440,402,428],
[442,0,465,454,455,454,406,418],
[454,426,0,456,466,476,461,467],
[457,437,435,0,461,453,442,432],
[463,436,425,430,0,471,420,434],
[451,437,415,438,420,0,443,454],
[489,485,430,449,471,448,0,477],
[463,473,424,459,457,437,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,426,437,433,417,418,415],
[472,0,442,437,444,433,449,431],
[465,449,0,451,453,456,442,441],
[454,454,440,0,459,445,444,431],
[458,447,438,432,0,459,430,439],
[474,458,435,446,432,0,443,436],
[473,442,449,447,461,448,0,474],
[476,460,450,460,452,455,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,450,438,453,428,432,425],
[425,0,418,424,421,413,436,415],
[441,473,0,444,445,430,430,446],
[453,467,447,0,454,450,441,437],
[438,470,446,437,0,438,441,418],
[463,478,461,441,453,0,448,435],
[459,455,461,450,450,443,0,455],
[466,476,445,454,473,456,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,451,455,441,432,455,455],
[450,0,445,431,447,445,459,466],
[440,446,0,457,463,435,469,445],
[436,460,434,0,435,436,454,455],
[450,444,428,456,0,449,453,429],
[459,446,456,455,442,0,457,456],
[436,432,422,437,438,434,0,423],
[436,425,446,436,462,435,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,436,433,432,452,412,468],
[443,0,454,455,448,441,427,436],
[455,437,0,439,436,448,446,417],
[458,436,452,0,459,445,433,469],
[459,443,455,432,0,465,451,449],
[439,450,443,446,426,0,418,447],
[479,464,445,458,440,473,0,452],
[423,455,474,422,442,444,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,481,428,461,441,427,432],
[467,0,472,446,470,452,439,441],
[410,419,0,416,437,428,425,427],
[463,445,475,0,467,458,462,457],
[430,421,454,424,0,442,415,428],
[450,439,463,433,449,0,428,429],
[464,452,466,429,476,463,0,459],
[459,450,464,434,463,462,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,715,891,359,715,616,440,451],
[176,0,634,359,891,616,616,451],
[0,257,0,359,532,257,257,275],
[532,532,532,0,532,257,257,275],
[176,0,359,359,0,359,359,176],
[275,275,634,634,532,0,0,451],
[451,275,634,634,532,891,0,451],
[440,440,616,616,715,440,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,434,408,455,424,433,397],
[448,0,433,417,441,429,479,401],
[457,458,0,451,465,426,451,438],
[483,474,440,0,477,479,464,451],
[436,450,426,414,0,445,452,402],
[467,462,465,412,446,0,502,426],
[458,412,440,427,439,389,0,396],
[494,490,453,440,489,465,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,532,424,498,517,490,493],
[404,0,453,386,463,470,429,442],
[359,438,0,358,422,445,478,438],
[467,505,533,0,435,564,470,505],
[393,428,469,456,0,495,448,478],
[374,421,446,327,396,0,426,432],
[401,462,413,421,443,465,0,477],
[398,449,453,386,413,459,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,441,458,467,445,437,440],
[451,0,450,450,477,461,463,431],
[450,441,0,460,465,463,444,447],
[433,441,431,0,454,458,476,459],
[424,414,426,437,0,445,444,441],
[446,430,428,433,446,0,403,429],
[454,428,447,415,447,488,0,433],
[451,460,444,432,450,462,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,462,445,436,451,471,436],
[450,0,450,464,445,469,457,452],
[429,441,0,392,453,439,449,441],
[446,427,499,0,468,487,502,458],
[455,446,438,423,0,430,451,449],
[440,422,452,404,461,0,467,411],
[420,434,442,389,440,424,0,429],
[455,439,450,433,442,480,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,464,474,449,458,444,458],
[416,0,480,455,432,464,411,429],
[427,411,0,425,432,438,410,415],
[417,436,466,0,460,453,446,431],
[442,459,459,431,0,458,428,425],
[433,427,453,438,433,0,415,411],
[447,480,481,445,463,476,0,450],
[433,462,476,460,466,480,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,436,410,456,446,453,485],
[448,0,419,446,456,425,464,463],
[455,472,0,440,440,466,497,470],
[481,445,451,0,436,462,468,462],
[435,435,451,455,0,438,472,443],
[445,466,425,429,453,0,453,451],
[438,427,394,423,419,438,0,411],
[406,428,421,429,448,440,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,474,455,453,462,463,436],
[457,0,475,438,470,467,485,459],
[417,416,0,428,444,425,462,455],
[436,453,463,0,461,463,477,463],
[438,421,447,430,0,427,454,466],
[429,424,466,428,464,0,464,459],
[428,406,429,414,437,427,0,447],
[455,432,436,428,425,432,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,472,501,477,413,416,519],
[431,0,382,418,393,422,396,499],
[419,509,0,486,419,450,449,463],
[390,473,405,0,438,381,449,497],
[414,498,472,453,0,392,452,506],
[478,469,441,510,499,0,434,538],
[475,495,442,442,439,457,0,515],
[372,392,428,394,385,353,376,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,447,438,467,440,457,448],
[444,0,437,454,446,417,449,429],
[444,454,0,448,425,422,439,453],
[453,437,443,0,444,439,461,439],
[424,445,466,447,0,422,452,434],
[451,474,469,452,469,0,465,439],
[434,442,452,430,439,426,0,441],
[443,462,438,452,457,452,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,466,435,459,467,477,465],
[411,0,425,449,446,467,471,477],
[425,466,0,459,482,469,463,484],
[456,442,432,0,500,479,454,430],
[432,445,409,391,0,427,425,427],
[424,424,422,412,464,0,426,461],
[414,420,428,437,466,465,0,450],
[426,414,407,461,464,430,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,423,430,430,435,429,412],
[459,0,450,466,445,444,456,471],
[468,441,0,468,455,476,453,450],
[461,425,423,0,442,456,424,430],
[461,446,436,449,0,462,446,440],
[456,447,415,435,429,0,441,447],
[462,435,438,467,445,450,0,447],
[479,420,441,461,451,444,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,418,456,412,414,445,433],
[459,0,397,429,437,385,466,425],
[473,494,0,483,478,468,444,484],
[435,462,408,0,421,433,435,440],
[479,454,413,470,0,457,450,424],
[477,506,423,458,434,0,480,446],
[446,425,447,456,441,411,0,452],
[458,466,407,451,467,445,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,501,506,518,435,433,429],
[379,0,430,454,413,439,473,420],
[390,461,0,444,442,376,415,446],
[385,437,447,0,411,410,414,391],
[373,478,449,480,0,474,495,465],
[456,452,515,481,417,0,452,460],
[458,418,476,477,396,439,0,429],
[462,471,445,500,426,431,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,488,459,509,438,501,433],
[409,0,435,484,456,420,458,499],
[403,456,0,408,380,399,407,422],
[432,407,483,0,442,426,445,412],
[382,435,511,449,0,462,383,490],
[453,471,492,465,429,0,452,427],
[390,433,484,446,508,439,0,473],
[458,392,469,479,401,464,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,462,472,517,444,490,463],
[442,0,421,473,459,449,432,419],
[429,470,0,441,464,452,484,469],
[419,418,450,0,460,407,440,423],
[374,432,427,431,0,388,433,382],
[447,442,439,484,503,0,470,446],
[401,459,407,451,458,421,0,409],
[428,472,422,468,509,445,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,408,451,448,472,449,439],
[422,0,418,442,397,443,411,452],
[483,473,0,474,449,487,439,474],
[440,449,417,0,420,460,448,426],
[443,494,442,471,0,474,452,454],
[419,448,404,431,417,0,417,398],
[442,480,452,443,439,474,0,441],
[452,439,417,465,437,493,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,435,403,440,438,446,416],
[472,0,459,425,463,459,485,440],
[456,432,0,426,418,431,439,427],
[488,466,465,0,432,475,460,465],
[451,428,473,459,0,453,473,438],
[453,432,460,416,438,0,463,450],
[445,406,452,431,418,428,0,450],
[475,451,464,426,453,441,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,449,458,471,475,465,454],
[447,0,440,435,447,461,484,450],
[442,451,0,458,453,461,461,454],
[433,456,433,0,457,442,467,428],
[420,444,438,434,0,433,443,442],
[416,430,430,449,458,0,450,435],
[426,407,430,424,448,441,0,418],
[437,441,437,463,449,456,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,303,425,347,332,405,421,389],
[588,0,389,389,463,450,474,520],
[466,502,0,388,399,491,466,397],
[544,502,503,0,358,445,482,522],
[559,428,492,533,0,542,556,519],
[486,441,400,446,349,0,488,500],
[470,417,425,409,335,403,0,368],
[502,371,494,369,372,391,523,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,472,436,433,457,469,493],
[397,0,441,427,421,425,455,457],
[419,450,0,452,457,458,456,476],
[455,464,439,0,446,477,456,458],
[458,470,434,445,0,452,469,468],
[434,466,433,414,439,0,452,456],
[422,436,435,435,422,439,0,446],
[398,434,415,433,423,435,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,481,451,482,444,386,451],
[387,0,433,422,469,417,447,452],
[410,458,0,464,468,410,456,424],
[440,469,427,0,466,388,430,454],
[409,422,423,425,0,404,417,470],
[447,474,481,503,487,0,432,436],
[505,444,435,461,474,459,0,491],
[440,439,467,437,421,455,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,479,411,461,489,462,462],
[463,0,413,466,467,436,457,387],
[412,478,0,449,462,438,422,441],
[480,425,442,0,440,462,417,396],
[430,424,429,451,0,405,452,419],
[402,455,453,429,486,0,400,452],
[429,434,469,474,439,491,0,461],
[429,504,450,495,472,439,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,439,504,459,504,551,377],
[396,0,439,441,501,449,522,369],
[452,452,0,443,433,436,583,348],
[387,450,448,0,404,485,540,333],
[432,390,458,487,0,434,499,474],
[387,442,455,406,457,0,519,400],
[340,369,308,351,392,372,0,246],
[514,522,543,558,417,491,645,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,451,447,450,456,469,436],
[438,0,449,483,463,439,438,455],
[440,442,0,460,441,462,483,427],
[444,408,431,0,471,432,435,426],
[441,428,450,420,0,438,473,434],
[435,452,429,459,453,0,434,442],
[422,453,408,456,418,457,0,421],
[455,436,464,465,457,449,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,453,467,439,440,464,457],
[419,0,423,405,408,432,416,436],
[438,468,0,443,442,437,457,464],
[424,486,448,0,441,475,460,466],
[452,483,449,450,0,445,441,473],
[451,459,454,416,446,0,427,444],
[427,475,434,431,450,464,0,472],
[434,455,427,425,418,447,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,330,571,461,584,537,604,451],
[561,0,634,472,463,505,508,380],
[320,257,0,272,375,329,394,267],
[430,419,619,0,483,439,492,471],
[307,428,516,408,0,460,380,383],
[354,386,562,452,431,0,427,463],
[287,383,497,399,511,464,0,381],
[440,511,624,420,508,428,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,495,491,459,461,453,433],
[440,0,449,469,462,479,449,448],
[396,442,0,435,432,452,439,450],
[400,422,456,0,403,466,435,406],
[432,429,459,488,0,498,458,451],
[430,412,439,425,393,0,416,417],
[438,442,452,456,433,475,0,433],
[458,443,441,485,440,474,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,546,549,484,478,468,437,487],
[345,0,433,275,326,302,335,375],
[342,458,0,427,338,345,396,522],
[407,616,464,0,399,475,458,448],
[413,565,553,492,0,476,495,539],
[423,589,546,416,415,0,469,519],
[454,556,495,433,396,422,0,417],
[404,516,369,443,352,372,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,434,453,431,449,459,480],
[414,0,447,455,448,422,435,458],
[457,444,0,475,464,462,502,475],
[438,436,416,0,410,466,403,504],
[460,443,427,481,0,452,468,528],
[442,469,429,425,439,0,419,488],
[432,456,389,488,423,472,0,487],
[411,433,416,387,363,403,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,438,445,426,406,464,426],
[480,0,458,452,433,418,430,472],
[453,433,0,417,459,406,391,435],
[446,439,474,0,414,398,372,448],
[465,458,432,477,0,413,419,434],
[485,473,485,493,478,0,433,460],
[427,461,500,519,472,458,0,468],
[465,419,456,443,457,431,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,432,424,433,470,427,416],
[453,0,444,445,437,448,435,437],
[459,447,0,443,424,448,449,431],
[467,446,448,0,460,445,466,460],
[458,454,467,431,0,467,427,429],
[421,443,443,446,424,0,451,425],
[464,456,442,425,464,440,0,433],
[475,454,460,431,462,466,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,440,440,438,455,458,460],
[439,0,421,431,435,450,443,461],
[451,470,0,454,443,466,467,462],
[451,460,437,0,451,457,454,473],
[453,456,448,440,0,457,439,455],
[436,441,425,434,434,0,440,478],
[433,448,424,437,452,451,0,445],
[431,430,429,418,436,413,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,448,476,464,475,429,476],
[425,0,431,442,425,435,441,445],
[443,460,0,461,430,498,462,442],
[415,449,430,0,423,479,446,448],
[427,466,461,468,0,484,416,439],
[416,456,393,412,407,0,446,409],
[462,450,429,445,475,445,0,444],
[415,446,449,443,452,482,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,425,442,437,454,457,465],
[448,0,432,451,443,440,432,451],
[466,459,0,428,438,444,435,446],
[449,440,463,0,455,440,462,452],
[454,448,453,436,0,464,451,462],
[437,451,447,451,427,0,439,463],
[434,459,456,429,440,452,0,455],
[426,440,445,439,429,428,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,442,407,429,415,416,436],
[443,0,420,425,404,397,414,452],
[449,471,0,439,441,435,444,475],
[484,466,452,0,415,403,454,436],
[462,487,450,476,0,437,447,458],
[476,494,456,488,454,0,438,457],
[475,477,447,437,444,453,0,513],
[455,439,416,455,433,434,378,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,454,502,429,486,507,469],
[412,0,429,420,431,501,488,447],
[437,462,0,437,448,493,487,463],
[389,471,454,0,471,481,508,483],
[462,460,443,420,0,493,462,428],
[405,390,398,410,398,0,431,430],
[384,403,404,383,429,460,0,436],
[422,444,428,408,463,461,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,522,483,504,570,424,437,432],
[369,0,383,421,372,336,332,415],
[408,508,0,470,368,354,413,446],
[387,470,421,0,391,431,431,411],
[321,519,523,500,0,446,494,428],
[467,555,537,460,445,0,472,367],
[454,559,478,460,397,419,0,361],
[459,476,445,480,463,524,530,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,442,428,455,468,443,437],
[445,0,486,443,468,483,449,468],
[449,405,0,457,471,487,433,453],
[463,448,434,0,466,459,455,453],
[436,423,420,425,0,440,462,420],
[423,408,404,432,451,0,447,433],
[448,442,458,436,429,444,0,448],
[454,423,438,438,471,458,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,524,480,481,553,465,474],
[460,0,466,302,405,449,412,387],
[367,425,0,401,481,527,482,503],
[411,589,490,0,456,496,477,543],
[410,486,410,435,0,407,493,416],
[338,442,364,395,484,0,358,407],
[426,479,409,414,398,533,0,460],
[417,504,388,348,475,484,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,481,467,461,482,458,498],
[456,0,452,438,484,466,467,482],
[410,439,0,421,438,458,442,447],
[424,453,470,0,451,465,460,468],
[430,407,453,440,0,448,434,462],
[409,425,433,426,443,0,459,447],
[433,424,449,431,457,432,0,471],
[393,409,444,423,429,444,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,471,445,442,447,452,448],
[431,0,439,430,423,423,413,439],
[420,452,0,440,425,454,439,463],
[446,461,451,0,437,437,451,458],
[449,468,466,454,0,435,442,456],
[444,468,437,454,456,0,451,463],
[439,478,452,440,449,440,0,461],
[443,452,428,433,435,428,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,450,459,456,451,463,427],
[464,0,469,451,461,456,481,443],
[441,422,0,457,453,448,430,451],
[432,440,434,0,468,433,450,404],
[435,430,438,423,0,409,451,414],
[440,435,443,458,482,0,453,452],
[428,410,461,441,440,438,0,441],
[464,448,440,487,477,439,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,437,480,448,454,443,440],
[420,0,432,433,443,422,426,440],
[454,459,0,476,445,465,454,445],
[411,458,415,0,447,434,419,431],
[443,448,446,444,0,423,421,422],
[437,469,426,457,468,0,446,453],
[448,465,437,472,470,445,0,448],
[451,451,446,460,469,438,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,380,454,457,437,405,422],
[405,0,423,455,447,421,436,387],
[511,468,0,480,447,441,453,416],
[437,436,411,0,450,429,402,380],
[434,444,444,441,0,449,452,439],
[454,470,450,462,442,0,427,445],
[486,455,438,489,439,464,0,455],
[469,504,475,511,452,446,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,466,425,426,436,441,445],
[460,0,469,428,465,417,439,461],
[425,422,0,413,420,407,437,446],
[466,463,478,0,448,450,442,452],
[465,426,471,443,0,431,447,445],
[455,474,484,441,460,0,446,469],
[450,452,454,449,444,445,0,456],
[446,430,445,439,446,422,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,444,455,450,481,447,451],
[448,0,437,457,439,463,432,438],
[447,454,0,450,450,458,450,444],
[436,434,441,0,435,439,453,417],
[441,452,441,456,0,466,452,447],
[410,428,433,452,425,0,437,423],
[444,459,441,438,439,454,0,456],
[440,453,447,474,444,468,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,433,432,459,441,438,439],
[426,0,448,409,438,442,419,423],
[458,443,0,425,451,450,431,441],
[459,482,466,0,482,462,457,432],
[432,453,440,409,0,447,425,434],
[450,449,441,429,444,0,446,442],
[453,472,460,434,466,445,0,451],
[452,468,450,459,457,449,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,465,469,439,447,473,472],
[428,0,464,450,437,429,426,461],
[426,427,0,440,418,436,439,451],
[422,441,451,0,459,449,455,459],
[452,454,473,432,0,455,464,476],
[444,462,455,442,436,0,441,454],
[418,465,452,436,427,450,0,468],
[419,430,440,432,415,437,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,462,483,446,442,444,434],
[430,0,445,476,466,431,441,445],
[429,446,0,463,448,449,447,458],
[408,415,428,0,437,414,426,428],
[445,425,443,454,0,448,445,441],
[449,460,442,477,443,0,439,466],
[447,450,444,465,446,452,0,451],
[457,446,433,463,450,425,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,442,440,520,501,461,482],
[422,0,476,464,478,439,445,463],
[449,415,0,408,438,449,438,476],
[451,427,483,0,527,453,467,481],
[371,413,453,364,0,440,412,438],
[390,452,442,438,451,0,446,422],
[430,446,453,424,479,445,0,492],
[409,428,415,410,453,469,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,454,433,458,428,434,463],
[472,0,469,433,464,458,467,463],
[437,422,0,421,445,426,450,417],
[458,458,470,0,464,438,472,456],
[433,427,446,427,0,426,437,434],
[463,433,465,453,465,0,443,458],
[457,424,441,419,454,448,0,432],
[428,428,474,435,457,433,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,519,404,410,417,463,481],
[401,0,459,410,430,398,445,405],
[372,432,0,397,466,337,436,437],
[487,481,494,0,499,390,465,439],
[481,461,425,392,0,407,434,450],
[474,493,554,501,484,0,485,434],
[428,446,455,426,457,406,0,457],
[410,486,454,452,441,457,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,450,462,446,432,453,443],
[437,0,446,452,448,448,424,432],
[441,445,0,439,462,419,458,425],
[429,439,452,0,414,415,437,415],
[445,443,429,477,0,440,458,454],
[459,443,472,476,451,0,454,459],
[438,467,433,454,433,437,0,454],
[448,459,466,476,437,432,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,464,435,465,456,428,428],
[431,0,450,410,431,419,453,405],
[427,441,0,444,440,431,454,423],
[456,481,447,0,487,460,447,430],
[426,460,451,404,0,448,448,406],
[435,472,460,431,443,0,453,453],
[463,438,437,444,443,438,0,406],
[463,486,468,461,485,438,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,481,501,435,466,485,439],
[441,0,447,489,472,466,477,452],
[410,444,0,452,452,436,463,420],
[390,402,439,0,396,417,437,415],
[456,419,439,495,0,427,472,442],
[425,425,455,474,464,0,454,432],
[406,414,428,454,419,437,0,427],
[452,439,471,476,449,459,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,443,420,445,451,431,455],
[448,0,454,437,460,435,457,435],
[448,437,0,437,453,444,456,442],
[471,454,454,0,442,451,449,445],
[446,431,438,449,0,434,437,429],
[440,456,447,440,457,0,443,453],
[460,434,435,442,454,448,0,439],
[436,456,449,446,462,438,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,494,452,458,444,444,428],
[415,0,466,431,435,426,424,448],
[397,425,0,427,434,430,432,428],
[439,460,464,0,474,467,452,438],
[433,456,457,417,0,412,447,429],
[447,465,461,424,479,0,444,434],
[447,467,459,439,444,447,0,434],
[463,443,463,453,462,457,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,481,432,443,445,474,427],
[426,0,471,397,426,435,405,457],
[410,420,0,430,448,444,434,419],
[459,494,461,0,464,499,416,431],
[448,465,443,427,0,454,417,432],
[446,456,447,392,437,0,392,407],
[417,486,457,475,474,499,0,459],
[464,434,472,460,459,484,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,462,454,450,454,440,453],
[403,0,437,388,400,418,425,410],
[429,454,0,463,458,440,416,449],
[437,503,428,0,461,450,435,441],
[441,491,433,430,0,472,459,445],
[437,473,451,441,419,0,478,446],
[451,466,475,456,432,413,0,429],
[438,481,442,450,446,445,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,427,401,454,454,450,395],
[490,0,458,436,500,468,453,461],
[464,433,0,456,452,477,440,441],
[490,455,435,0,471,461,459,468],
[437,391,439,420,0,431,471,420],
[437,423,414,430,460,0,418,425],
[441,438,451,432,420,473,0,426],
[496,430,450,423,471,466,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,452,455,428,446,442,444],
[475,0,430,478,422,480,463,439],
[439,461,0,468,433,442,440,462],
[436,413,423,0,404,459,448,410],
[463,469,458,487,0,479,481,443],
[445,411,449,432,412,0,457,440],
[449,428,451,443,410,434,0,458],
[447,452,429,481,448,451,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,476,422,425,425,389,447],
[473,0,484,448,450,444,416,443],
[415,407,0,371,397,419,403,424],
[469,443,520,0,452,445,396,450],
[466,441,494,439,0,474,453,457],
[466,447,472,446,417,0,433,436],
[502,475,488,495,438,458,0,450],
[444,448,467,441,434,455,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,440,446,439,454,430,453],
[456,0,437,454,439,430,441,428],
[451,454,0,450,437,443,439,448],
[445,437,441,0,438,419,420,443],
[452,452,454,453,0,451,446,427],
[437,461,448,472,440,0,446,444],
[461,450,452,471,445,445,0,456],
[438,463,443,448,464,447,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,460,457,447,447,457,444],
[461,0,433,454,438,431,454,438],
[431,458,0,421,449,450,442,443],
[434,437,470,0,452,464,469,446],
[444,453,442,439,0,450,451,417],
[444,460,441,427,441,0,449,435],
[434,437,449,422,440,442,0,432],
[447,453,448,445,474,456,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,392,419,401,299,513,475],
[415,0,472,378,457,391,590,635],
[499,419,0,337,471,466,596,529],
[472,513,554,0,332,590,566,494],
[490,434,420,559,0,350,476,443],
[592,500,425,301,541,0,472,511],
[378,301,295,325,415,419,0,543],
[416,256,362,397,448,380,348,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,448,467,449,561,503,384],
[456,0,453,484,434,461,492,397],
[443,438,0,504,453,426,423,393],
[424,407,387,0,420,408,438,392],
[442,457,438,471,0,512,465,476],
[330,430,465,483,379,0,418,386],
[388,399,468,453,426,473,0,433],
[507,494,498,499,415,505,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,451,431,443,465,434,449],
[462,0,468,437,450,452,456,442],
[440,423,0,435,444,457,423,425],
[460,454,456,0,451,463,444,443],
[448,441,447,440,0,450,461,454],
[426,439,434,428,441,0,441,432],
[457,435,468,447,430,450,0,454],
[442,449,466,448,437,459,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,457,421,477,460,444,457],
[434,0,428,448,468,435,483,456],
[434,463,0,440,468,482,507,475],
[470,443,451,0,478,446,480,445],
[414,423,423,413,0,424,469,427],
[431,456,409,445,467,0,460,437],
[447,408,384,411,422,431,0,428],
[434,435,416,446,464,454,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,464,449,449,451,433,459],
[459,0,456,431,449,472,466,476],
[427,435,0,429,426,447,441,444],
[442,460,462,0,427,439,453,477],
[442,442,465,464,0,437,437,461],
[440,419,444,452,454,0,431,450],
[458,425,450,438,454,460,0,468],
[432,415,447,414,430,441,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,590,485,411,418,465,488,456],
[301,0,515,465,426,494,503,463],
[406,376,0,464,476,590,503,480],
[480,426,427,0,437,517,478,451],
[473,465,415,454,0,629,470,596],
[426,397,301,374,262,0,471,330],
[403,388,388,413,421,420,0,317],
[435,428,411,440,295,561,574,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,430,438,440,435,416,467],
[441,0,434,446,450,435,428,443],
[461,457,0,438,454,434,456,468],
[453,445,453,0,444,459,446,470],
[451,441,437,447,0,420,441,440],
[456,456,457,432,471,0,442,456],
[475,463,435,445,450,449,0,451],
[424,448,423,421,451,435,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,404,408,412,423,421,450],
[497,0,453,453,426,467,463,432],
[487,438,0,427,433,479,486,469],
[483,438,464,0,464,501,457,470],
[479,465,458,427,0,478,467,457],
[468,424,412,390,413,0,434,414],
[470,428,405,434,424,457,0,448],
[441,459,422,421,434,477,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,473,460,416,462,430,471],
[431,0,480,450,447,475,456,461],
[418,411,0,417,407,452,426,437],
[431,441,474,0,414,477,445,450],
[475,444,484,477,0,481,448,450],
[429,416,439,414,410,0,420,424],
[461,435,465,446,443,471,0,469],
[420,430,454,441,441,467,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,482,413,456,468,470,459],
[455,0,492,416,510,438,432,422],
[409,399,0,410,497,424,434,440],
[478,475,481,0,512,435,489,481],
[435,381,394,379,0,425,423,395],
[423,453,467,456,466,0,434,451],
[421,459,457,402,468,457,0,449],
[432,469,451,410,496,440,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,468,466,431,441,466,468],
[443,0,460,452,460,436,451,462],
[423,431,0,463,427,451,459,433],
[425,439,428,0,439,458,451,437],
[460,431,464,452,0,455,475,456],
[450,455,440,433,436,0,486,440],
[425,440,432,440,416,405,0,409],
[423,429,458,454,435,451,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,451,450,435,437,450,437],
[425,0,424,434,427,426,417,409],
[440,467,0,448,441,426,440,425],
[441,457,443,0,457,437,464,435],
[456,464,450,434,0,446,454,415],
[454,465,465,454,445,0,456,449],
[441,474,451,427,437,435,0,443],
[454,482,466,456,476,442,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,434,449,431,428,483,479],
[442,0,438,463,453,454,466,491],
[457,453,0,446,431,444,425,466],
[442,428,445,0,462,440,484,470],
[460,438,460,429,0,465,461,481],
[463,437,447,451,426,0,486,458],
[408,425,466,407,430,405,0,465],
[412,400,425,421,410,433,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,665,504,349,480,531,515],
[391,0,552,398,397,520,598,485],
[226,339,0,197,175,293,433,530],
[387,493,694,0,541,455,446,421],
[542,494,716,350,0,471,482,370],
[411,371,598,436,420,0,433,506],
[360,293,458,445,409,458,0,513],
[376,406,361,470,521,385,378,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,477,474,494,459,443,476],
[420,0,492,488,479,426,461,453],
[414,399,0,454,421,432,431,454],
[417,403,437,0,440,452,432,434],
[397,412,470,451,0,431,445,448],
[432,465,459,439,460,0,458,471],
[448,430,460,459,446,433,0,455],
[415,438,437,457,443,420,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,420,425,468,424,460,398],
[431,0,415,428,476,451,447,445],
[471,476,0,464,442,464,433,433],
[466,463,427,0,499,483,487,472],
[423,415,449,392,0,414,414,463],
[467,440,427,408,477,0,458,426],
[431,444,458,404,477,433,0,451],
[493,446,458,419,428,465,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,583,475,394,545,452,512],
[382,0,433,381,393,472,352,483],
[308,458,0,440,324,396,458,469],
[416,510,451,0,449,567,482,499],
[497,498,567,442,0,506,443,430],
[346,419,495,324,385,0,454,418],
[439,539,433,409,448,437,0,479],
[379,408,422,392,461,473,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,475,459,470,454,453,462],
[447,0,465,444,444,435,435,448],
[416,426,0,465,444,417,413,439],
[432,447,426,0,454,430,419,444],
[421,447,447,437,0,434,411,429],
[437,456,474,461,457,0,445,460],
[438,456,478,472,480,446,0,450],
[429,443,452,447,462,431,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,446,406,452,454,441,417],
[467,0,451,451,466,466,479,434],
[445,440,0,428,442,469,452,420],
[485,440,463,0,471,472,450,450],
[439,425,449,420,0,466,436,411],
[437,425,422,419,425,0,430,428],
[450,412,439,441,455,461,0,418],
[474,457,471,441,480,463,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,427,432,473,462,413,453],
[433,0,455,445,437,435,413,424],
[464,436,0,442,434,446,459,464],
[459,446,449,0,472,475,443,473],
[418,454,457,419,0,458,457,446],
[429,456,445,416,433,0,414,441],
[478,478,432,448,434,477,0,473],
[438,467,427,418,445,450,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,449,477,458,437,462,454],
[454,0,448,459,433,445,444,446],
[442,443,0,451,439,437,426,429],
[414,432,440,0,414,427,438,424],
[433,458,452,477,0,448,461,463],
[454,446,454,464,443,0,473,466],
[429,447,465,453,430,418,0,425],
[437,445,462,467,428,425,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,429,468,429,429,440,456],
[450,0,420,450,445,440,428,428],
[462,471,0,458,467,423,467,427],
[423,441,433,0,414,462,463,463],
[462,446,424,477,0,421,427,451],
[462,451,468,429,470,0,447,447],
[451,463,424,428,464,444,0,410],
[435,463,464,428,440,444,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,393,433,436,415,411,447],
[450,0,403,426,448,432,473,467],
[498,488,0,456,483,441,494,486],
[458,465,435,0,457,448,484,484],
[455,443,408,434,0,438,466,491],
[476,459,450,443,453,0,509,469],
[480,418,397,407,425,382,0,450],
[444,424,405,407,400,422,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,448,430,456,433,470,446],
[441,0,475,427,427,450,468,446],
[443,416,0,419,434,439,434,416],
[461,464,472,0,469,444,471,459],
[435,464,457,422,0,415,446,441],
[458,441,452,447,476,0,470,450],
[421,423,457,420,445,421,0,426],
[445,445,475,432,450,441,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,434,426,421,428,418,446],
[433,0,427,454,426,442,433,445],
[457,464,0,470,455,455,442,460],
[465,437,421,0,448,441,439,442],
[470,465,436,443,0,439,455,447],
[463,449,436,450,452,0,453,446],
[473,458,449,452,436,438,0,441],
[445,446,431,449,444,445,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,429,443,437,437,435,430],
[442,0,436,438,423,426,443,432],
[462,455,0,451,457,462,441,457],
[448,453,440,0,446,437,458,432],
[454,468,434,445,0,442,457,453],
[454,465,429,454,449,0,477,455],
[456,448,450,433,434,414,0,442],
[461,459,434,459,438,436,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,432,452,426,463,369,398],
[471,0,433,461,449,478,408,474],
[459,458,0,434,419,458,395,435],
[439,430,457,0,447,451,442,468],
[465,442,472,444,0,462,447,448],
[428,413,433,440,429,0,382,422],
[522,483,496,449,444,509,0,464],
[493,417,456,423,443,469,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,452,471,453,438,453,433],
[445,0,459,474,436,435,441,472],
[439,432,0,439,443,437,441,456],
[420,417,452,0,435,435,431,435],
[438,455,448,456,0,466,439,450],
[453,456,454,456,425,0,449,459],
[438,450,450,460,452,442,0,472],
[458,419,435,456,441,432,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,476,410,438,449,424,415],
[498,0,530,446,497,442,432,439],
[415,361,0,416,383,357,394,424],
[481,445,475,0,421,437,395,426],
[453,394,508,470,0,442,475,442],
[442,449,534,454,449,0,441,411],
[467,459,497,496,416,450,0,456],
[476,452,467,465,449,480,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,429,445,431,449,440,439],
[462,0,447,458,452,450,442,455],
[462,444,0,465,437,456,455,451],
[446,433,426,0,440,451,448,449],
[460,439,454,451,0,449,436,448],
[442,441,435,440,442,0,429,421],
[451,449,436,443,455,462,0,466],
[452,436,440,442,443,470,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,440,422,457,449,453,432],
[443,0,433,429,455,449,464,447],
[451,458,0,419,429,455,442,443],
[469,462,472,0,463,462,443,452],
[434,436,462,428,0,437,453,432],
[442,442,436,429,454,0,453,442],
[438,427,449,448,438,438,0,435],
[459,444,448,439,459,449,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,423,510,451,410,454,402],
[492,0,433,422,420,433,494,370],
[468,458,0,475,452,387,480,402],
[381,469,416,0,380,343,396,406],
[440,471,439,511,0,406,492,455],
[481,458,504,548,485,0,611,443],
[437,397,411,495,399,280,0,363],
[489,521,489,485,436,448,528,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,423,424,464,451,437,438],
[429,0,423,409,398,419,456,425],
[468,468,0,453,467,469,470,440],
[467,482,438,0,498,452,479,440],
[427,493,424,393,0,446,458,429],
[440,472,422,439,445,0,439,458],
[454,435,421,412,433,452,0,454],
[453,466,451,451,462,433,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,413,437,453,428,424,413],
[464,0,428,452,437,448,451,444],
[478,463,0,462,451,433,462,467],
[454,439,429,0,453,448,446,422],
[438,454,440,438,0,442,459,462],
[463,443,458,443,449,0,456,423],
[467,440,429,445,432,435,0,454],
[478,447,424,469,429,468,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,444,450,450,450,436,448],
[462,0,439,483,457,423,456,455],
[447,452,0,441,458,447,433,459],
[441,408,450,0,479,445,437,440],
[441,434,433,412,0,436,426,438],
[441,468,444,446,455,0,471,477],
[455,435,458,454,465,420,0,459],
[443,436,432,451,453,414,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,486,459,438,417,449,438],
[446,0,438,479,464,446,471,462],
[405,453,0,446,445,462,441,455],
[432,412,445,0,451,449,419,427],
[453,427,446,440,0,464,464,446],
[474,445,429,442,427,0,428,418],
[442,420,450,472,427,463,0,439],
[453,429,436,464,445,473,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,460,439,465,446,467,471],
[434,0,443,442,465,435,451,461],
[431,448,0,440,468,429,435,473],
[452,449,451,0,472,442,424,464],
[426,426,423,419,0,447,439,456],
[445,456,462,449,444,0,467,491],
[424,440,456,467,452,424,0,447],
[420,430,418,427,435,400,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,522,437,500,489,426,429],
[402,0,548,498,485,413,343,471],
[369,343,0,325,478,322,394,366],
[454,393,566,0,491,413,445,417],
[391,406,413,400,0,392,389,374],
[402,478,569,478,499,0,461,439],
[465,548,497,446,502,430,0,434],
[462,420,525,474,517,452,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,443,441,452,436,450,433],
[480,0,445,468,469,450,446,454],
[448,446,0,442,461,428,432,446],
[450,423,449,0,449,432,442,436],
[439,422,430,442,0,428,440,452],
[455,441,463,459,463,0,448,453],
[441,445,459,449,451,443,0,449],
[458,437,445,455,439,438,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,443,411,451,432,445,447],
[466,0,454,448,444,466,484,461],
[448,437,0,418,427,460,437,453],
[480,443,473,0,472,494,461,459],
[440,447,464,419,0,450,453,462],
[459,425,431,397,441,0,440,430],
[446,407,454,430,438,451,0,472],
[444,430,438,432,429,461,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,513,498,473,476,454,476],
[449,0,488,490,444,473,424,486],
[378,403,0,479,436,472,416,433],
[393,401,412,0,416,457,396,414],
[418,447,455,475,0,516,450,450],
[415,418,419,434,375,0,428,449],
[437,467,475,495,441,463,0,468],
[415,405,458,477,441,442,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,474,443,455,440,479,447],
[434,0,454,457,459,419,474,441],
[417,437,0,423,450,425,469,427],
[448,434,468,0,451,449,493,441],
[436,432,441,440,0,443,470,447],
[451,472,466,442,448,0,483,469],
[412,417,422,398,421,408,0,409],
[444,450,464,450,444,422,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,444,426,495,456,433,444],
[427,0,429,432,438,426,423,421],
[447,462,0,432,485,423,442,425],
[465,459,459,0,475,434,445,446],
[396,453,406,416,0,400,428,417],
[435,465,468,457,491,0,447,452],
[458,468,449,446,463,444,0,433],
[447,470,466,445,474,439,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,466,420,445,459,550,469],
[461,0,425,357,388,417,493,412],
[425,466,0,457,389,492,495,496],
[471,534,434,0,466,549,554,509],
[446,503,502,425,0,511,538,532],
[432,474,399,342,380,0,443,458],
[341,398,396,337,353,448,0,436],
[422,479,395,382,359,433,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,444,432,431,426,430,435],
[434,0,446,413,412,406,411,432],
[447,445,0,430,406,455,450,440],
[459,478,461,0,444,453,457,442],
[460,479,485,447,0,437,469,462],
[465,485,436,438,454,0,436,477],
[461,480,441,434,422,455,0,449],
[456,459,451,449,429,414,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,451,464,449,478,465,465],
[463,0,465,445,456,460,473,452],
[440,426,0,447,444,447,446,443],
[427,446,444,0,459,443,461,458],
[442,435,447,432,0,435,450,432],
[413,431,444,448,456,0,470,448],
[426,418,445,430,441,421,0,433],
[426,439,448,433,459,443,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,468,454,458,465,442,470],
[421,0,439,410,422,441,432,451],
[423,452,0,455,445,446,430,431],
[437,481,436,0,464,445,461,453],
[433,469,446,427,0,457,454,467],
[426,450,445,446,434,0,426,437],
[449,459,461,430,437,465,0,448],
[421,440,460,438,424,454,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,459,417,470,478,461,468],
[436,0,411,399,434,480,451,428],
[432,480,0,446,450,512,489,467],
[474,492,445,0,497,533,480,464],
[421,457,441,394,0,478,418,438],
[413,411,379,358,413,0,394,391],
[430,440,402,411,473,497,0,459],
[423,463,424,427,453,500,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,473,438,453,453,443,461],
[444,0,464,451,428,441,466,435],
[418,427,0,424,418,420,428,431],
[453,440,467,0,457,459,448,443],
[438,463,473,434,0,447,423,450],
[438,450,471,432,444,0,444,462],
[448,425,463,443,468,447,0,462],
[430,456,460,448,441,429,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,441,453,458,449,438,473],
[440,0,451,447,444,432,471,442],
[450,440,0,446,460,453,474,447],
[438,444,445,0,451,435,432,442],
[433,447,431,440,0,442,458,435],
[442,459,438,456,449,0,449,457],
[453,420,417,459,433,442,0,439],
[418,449,444,449,456,434,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,422,479,445,477,461,423],
[397,0,408,470,436,449,447,402],
[469,483,0,492,445,449,456,455],
[412,421,399,0,420,409,417,417],
[446,455,446,471,0,462,445,436],
[414,442,442,482,429,0,398,466],
[430,444,435,474,446,493,0,449],
[468,489,436,474,455,425,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,465,465,466,434,436,441],
[460,0,442,473,459,441,464,433],
[426,449,0,457,433,447,431,430],
[426,418,434,0,439,429,428,436],
[425,432,458,452,0,433,450,447],
[457,450,444,462,458,0,452,431],
[455,427,460,463,441,439,0,434],
[450,458,461,455,444,460,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,465,441,450,429,512,430],
[440,0,466,435,449,447,463,466],
[426,425,0,476,438,449,472,394],
[450,456,415,0,443,475,481,416],
[441,442,453,448,0,449,484,456],
[462,444,442,416,442,0,476,448],
[379,428,419,410,407,415,0,410],
[461,425,497,475,435,443,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,444,443,414,444,454,442],
[431,0,433,421,440,402,435,447],
[447,458,0,461,400,445,442,424],
[448,470,430,0,417,423,443,427],
[477,451,491,474,0,453,464,440],
[447,489,446,468,438,0,462,439],
[437,456,449,448,427,429,0,435],
[449,444,467,464,451,452,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,405,456,433,436,460,447],
[450,0,423,456,449,411,425,423],
[486,468,0,480,443,447,476,458],
[435,435,411,0,457,466,427,432],
[458,442,448,434,0,434,415,450],
[455,480,444,425,457,0,436,459],
[431,466,415,464,476,455,0,477],
[444,468,433,459,441,432,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,436,430,464,464,433,460],
[412,0,429,413,425,421,433,416],
[455,462,0,426,477,451,450,411],
[461,478,465,0,462,462,441,452],
[427,466,414,429,0,453,430,411],
[427,470,440,429,438,0,435,437],
[458,458,441,450,461,456,0,461],
[431,475,480,439,480,454,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,445,467,467,459,482,473],
[464,0,448,444,436,473,478,443],
[446,443,0,451,454,462,461,427],
[424,447,440,0,450,460,439,432],
[424,455,437,441,0,457,442,422],
[432,418,429,431,434,0,440,436],
[409,413,430,452,449,451,0,426],
[418,448,464,459,469,455,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,510,457,472,425,433,440],
[414,0,491,384,375,429,391,369],
[381,400,0,390,389,461,344,386],
[434,507,501,0,440,465,432,466],
[419,516,502,451,0,486,476,457],
[466,462,430,426,405,0,430,364],
[458,500,547,459,415,461,0,476],
[451,522,505,425,434,527,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,386,404,440,380,394,507],
[463,0,433,442,472,449,447,499],
[505,458,0,416,463,438,429,470],
[487,449,475,0,477,448,435,509],
[451,419,428,414,0,437,426,488],
[511,442,453,443,454,0,481,501],
[497,444,462,456,465,410,0,525],
[384,392,421,382,403,390,366,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,443,446,461,449,434,441],
[463,0,451,450,449,456,428,462],
[448,440,0,442,464,448,428,431],
[445,441,449,0,448,455,429,441],
[430,442,427,443,0,454,436,431],
[442,435,443,436,437,0,429,424],
[457,463,463,462,455,462,0,441],
[450,429,460,450,460,467,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,444,435,466,420,442,466],
[456,0,407,433,487,415,385,456],
[447,484,0,461,483,441,439,476],
[456,458,430,0,470,444,452,487],
[425,404,408,421,0,422,438,466],
[471,476,450,447,469,0,441,470],
[449,506,452,439,453,450,0,450],
[425,435,415,404,425,421,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,457,439,451,441,465,462],
[470,0,454,475,442,455,481,474],
[434,437,0,444,443,421,452,459],
[452,416,447,0,436,419,467,451],
[440,449,448,455,0,459,470,459],
[450,436,470,472,432,0,470,443],
[426,410,439,424,421,421,0,458],
[429,417,432,440,432,448,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,477,425,438,455,417,407],
[427,0,425,402,425,436,391,407],
[414,466,0,418,422,410,409,431],
[466,489,473,0,443,446,431,415],
[453,466,469,448,0,447,410,440],
[436,455,481,445,444,0,388,467],
[474,500,482,460,481,503,0,422],
[484,484,460,476,451,424,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,474,412,417,448,460,435],
[435,0,446,421,445,436,452,415],
[417,445,0,402,424,425,465,411],
[479,470,489,0,417,434,471,452],
[474,446,467,474,0,454,488,430],
[443,455,466,457,437,0,452,458],
[431,439,426,420,403,439,0,402],
[456,476,480,439,461,433,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,446,432,450,452,429,447],
[463,0,456,438,462,457,441,459],
[445,435,0,435,460,437,467,460],
[459,453,456,0,461,435,442,445],
[441,429,431,430,0,434,433,442],
[439,434,454,456,457,0,432,450],
[462,450,424,449,458,459,0,456],
[444,432,431,446,449,441,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,428,408,415,438,485,374],
[393,0,393,424,423,361,498,386],
[463,498,0,468,482,372,494,411],
[483,467,423,0,452,455,474,424],
[476,468,409,439,0,470,493,424],
[453,530,519,436,421,0,512,473],
[406,393,397,417,398,379,0,380],
[517,505,480,467,467,418,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,457,464,445,429,452,448],
[445,0,449,426,421,429,449,433],
[434,442,0,420,459,454,464,448],
[427,465,471,0,472,446,463,447],
[446,470,432,419,0,454,463,454],
[462,462,437,445,437,0,468,440],
[439,442,427,428,428,423,0,419],
[443,458,443,444,437,451,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,455,453,435,440,439,449],
[435,0,453,438,427,467,433,440],
[436,438,0,444,443,451,439,441],
[438,453,447,0,437,455,448,452],
[456,464,448,454,0,453,442,448],
[451,424,440,436,438,0,445,418],
[452,458,452,443,449,446,0,438],
[442,451,450,439,443,473,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,442,434,431,440,453,450],
[451,0,466,447,466,428,458,450],
[449,425,0,445,438,450,440,476],
[457,444,446,0,441,447,450,461],
[460,425,453,450,0,446,444,470],
[451,463,441,444,445,0,449,457],
[438,433,451,441,447,442,0,461],
[441,441,415,430,421,434,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,459,450,460,445,459,440],
[437,0,463,445,469,440,450,427],
[432,428,0,447,454,447,439,459],
[441,446,444,0,436,442,456,452],
[431,422,437,455,0,433,455,425],
[446,451,444,449,458,0,439,440],
[432,441,452,435,436,452,0,435],
[451,464,432,439,466,451,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,431,407,430,425,424,467],
[432,0,445,425,456,420,440,451],
[460,446,0,427,426,445,433,459],
[484,466,464,0,454,437,440,471],
[461,435,465,437,0,427,453,440],
[466,471,446,454,464,0,421,459],
[467,451,458,451,438,470,0,448],
[424,440,432,420,451,432,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,473,420,462,444,456,438],
[401,0,448,454,441,426,451,407],
[418,443,0,430,439,378,481,448],
[471,437,461,0,483,436,490,434],
[429,450,452,408,0,460,469,411],
[447,465,513,455,431,0,466,431],
[435,440,410,401,422,425,0,398],
[453,484,443,457,480,460,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,464,455,484,473,435,477],
[450,0,457,439,464,469,443,472],
[427,434,0,460,457,470,451,464],
[436,452,431,0,469,460,442,451],
[407,427,434,422,0,447,430,444],
[418,422,421,431,444,0,421,444],
[456,448,440,449,461,470,0,462],
[414,419,427,440,447,447,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,437,448,447,461,442,433],
[449,0,448,453,435,451,455,435],
[454,443,0,450,436,467,430,454],
[443,438,441,0,428,441,419,421],
[444,456,455,463,0,465,431,421],
[430,440,424,450,426,0,427,401],
[449,436,461,472,460,464,0,428],
[458,456,437,470,470,490,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,448,456,446,436,457,440],
[454,0,437,446,468,434,457,447],
[443,454,0,433,455,430,460,443],
[435,445,458,0,478,446,449,453],
[445,423,436,413,0,416,418,418],
[455,457,461,445,475,0,462,455],
[434,434,431,442,473,429,0,433],
[451,444,448,438,473,436,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,485,474,452,481,445,457],
[415,0,434,420,410,431,402,442],
[406,457,0,434,419,460,389,428],
[417,471,457,0,446,476,408,464],
[439,481,472,445,0,488,448,493],
[410,460,431,415,403,0,398,454],
[446,489,502,483,443,493,0,500],
[434,449,463,427,398,437,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,451,438,443,449,435,443],
[451,0,452,407,435,425,447,462],
[440,439,0,451,431,407,421,459],
[453,484,440,0,423,433,426,458],
[448,456,460,468,0,451,456,439],
[442,466,484,458,440,0,431,475],
[456,444,470,465,435,460,0,475],
[448,429,432,433,452,416,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,413,429,429,448,418,426],
[471,0,422,421,442,467,468,475],
[478,469,0,417,465,465,460,489],
[462,470,474,0,474,469,441,497],
[462,449,426,417,0,488,455,466],
[443,424,426,422,403,0,423,449],
[473,423,431,450,436,468,0,469],
[465,416,402,394,425,442,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,441,432,477,454,403,421],
[450,0,458,429,466,479,438,454],
[450,433,0,417,496,471,447,431],
[459,462,474,0,472,465,432,447],
[414,425,395,419,0,420,426,433],
[437,412,420,426,471,0,415,434],
[488,453,444,459,465,476,0,423],
[470,437,460,444,458,457,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,343,474,483,440,514,434],
[450,0,411,444,535,470,464,384],
[548,480,0,478,486,412,570,430],
[417,447,413,0,452,424,446,350],
[408,356,405,439,0,488,433,424],
[451,421,479,467,403,0,400,451],
[377,427,321,445,458,491,0,423],
[457,507,461,541,467,440,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,439,429,433,444,436,452],
[450,0,459,442,457,465,428,443],
[452,432,0,439,436,458,428,465],
[462,449,452,0,442,440,430,452],
[458,434,455,449,0,444,447,454],
[447,426,433,451,447,0,424,432],
[455,463,463,461,444,467,0,471],
[439,448,426,439,437,459,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,447,446,447,430,424,440],
[455,0,441,455,450,436,447,447],
[444,450,0,449,436,430,422,453],
[445,436,442,0,458,438,417,435],
[444,441,455,433,0,432,417,432],
[461,455,461,453,459,0,422,441],
[467,444,469,474,474,469,0,454],
[451,444,438,456,459,450,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,448,452,438,458,476,432],
[390,0,435,475,413,415,422,422],
[443,456,0,433,420,391,435,421],
[439,416,458,0,452,432,419,425],
[453,478,471,439,0,468,450,499],
[433,476,500,459,423,0,467,470],
[415,469,456,472,441,424,0,395],
[459,469,470,466,392,421,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,434,438,430,467,471,425],
[461,0,422,441,410,431,455,445],
[457,469,0,442,441,474,458,448],
[453,450,449,0,458,471,443,441],
[461,481,450,433,0,463,461,431],
[424,460,417,420,428,0,439,446],
[420,436,433,448,430,452,0,427],
[466,446,443,450,460,445,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,436,448,436,456,458,454],
[461,0,442,454,449,447,432,471],
[455,449,0,463,440,444,459,472],
[443,437,428,0,434,420,437,446],
[455,442,451,457,0,465,472,469],
[435,444,447,471,426,0,474,468],
[433,459,432,454,419,417,0,459],
[437,420,419,445,422,423,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,433,409,465,436,444,438],
[461,0,435,462,468,445,477,439],
[458,456,0,430,470,464,443,418],
[482,429,461,0,461,451,440,443],
[426,423,421,430,0,440,463,427],
[455,446,427,440,451,0,469,449],
[447,414,448,451,428,422,0,441],
[453,452,473,448,464,442,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,448,453,449,439,454,434],
[453,0,456,440,458,444,449,435],
[443,435,0,445,449,443,447,432],
[438,451,446,0,448,431,462,435],
[442,433,442,443,0,428,458,446],
[452,447,448,460,463,0,434,464],
[437,442,444,429,433,457,0,431],
[457,456,459,456,445,427,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,441,450,440,453,485,457],
[451,0,463,455,437,492,478,466],
[450,428,0,435,469,450,473,468],
[441,436,456,0,415,436,455,469],
[451,454,422,476,0,449,485,480],
[438,399,441,455,442,0,454,458],
[406,413,418,436,406,437,0,448],
[434,425,423,422,411,433,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,433,419,444,471,424,447],
[465,0,457,453,476,459,445,456],
[458,434,0,431,441,444,433,451],
[472,438,460,0,479,462,477,465],
[447,415,450,412,0,441,441,464],
[420,432,447,429,450,0,425,436],
[467,446,458,414,450,466,0,458],
[444,435,440,426,427,455,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,386,398,517,451,418,555,491],
[505,0,516,466,443,467,524,500],
[493,375,0,473,381,379,483,406],
[374,425,418,0,362,408,482,386],
[440,448,510,529,0,398,548,554],
[473,424,512,483,493,0,474,516],
[336,367,408,409,343,417,0,422],
[400,391,485,505,337,375,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,452,430,453,436,446,460],
[452,0,436,449,475,434,475,467],
[439,455,0,418,474,444,459,459],
[461,442,473,0,481,458,471,481],
[438,416,417,410,0,422,424,436],
[455,457,447,433,469,0,467,455],
[445,416,432,420,467,424,0,448],
[431,424,432,410,455,436,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,462,457,465,488,455,470],
[457,0,473,464,482,440,470,503],
[429,418,0,428,439,417,428,460],
[434,427,463,0,453,445,448,461],
[426,409,452,438,0,452,429,480],
[403,451,474,446,439,0,443,485],
[436,421,463,443,462,448,0,458],
[421,388,431,430,411,406,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,404,453,449,444,453,453],
[447,0,369,449,423,436,447,417],
[487,522,0,509,465,460,479,426],
[438,442,382,0,490,460,452,419],
[442,468,426,401,0,451,453,453],
[447,455,431,431,440,0,464,420],
[438,444,412,439,438,427,0,412],
[438,474,465,472,438,471,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,441,429,441,421,437,431],
[442,0,455,446,439,432,448,451],
[450,436,0,418,436,446,440,442],
[462,445,473,0,470,470,469,465],
[450,452,455,421,0,439,440,454],
[470,459,445,421,452,0,456,450],
[454,443,451,422,451,435,0,461],
[460,440,449,426,437,441,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,436,452,450,435,450,441],
[452,0,448,474,434,451,460,462],
[455,443,0,488,488,462,472,474],
[439,417,403,0,449,443,434,444],
[441,457,403,442,0,443,456,415],
[456,440,429,448,448,0,450,442],
[441,431,419,457,435,441,0,466],
[450,429,417,447,476,449,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,417,423,421,448,436,420],
[442,0,431,418,439,447,437,433],
[474,460,0,447,450,474,441,432],
[468,473,444,0,453,485,471,440],
[470,452,441,438,0,455,479,452],
[443,444,417,406,436,0,445,420],
[455,454,450,420,412,446,0,431],
[471,458,459,451,439,471,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,432,452,443,469,448,460],
[422,0,401,424,412,440,432,425],
[459,490,0,442,454,469,458,446],
[439,467,449,0,438,465,470,469],
[448,479,437,453,0,470,451,452],
[422,451,422,426,421,0,430,437],
[443,459,433,421,440,461,0,458],
[431,466,445,422,439,454,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,445,436,454,441,436,430],
[452,0,450,452,431,458,427,431],
[446,441,0,456,450,418,422,435],
[455,439,435,0,427,422,430,426],
[437,460,441,464,0,425,450,447],
[450,433,473,469,466,0,437,427],
[455,464,469,461,441,454,0,430],
[461,460,456,465,444,464,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,442,457,473,444,466,475],
[400,0,414,434,439,427,450,466],
[449,477,0,445,509,480,451,478],
[434,457,446,0,480,439,453,464],
[418,452,382,411,0,416,409,440],
[447,464,411,452,475,0,454,453],
[425,441,440,438,482,437,0,447],
[416,425,413,427,451,438,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,398,378,370,345,400,410],
[502,0,444,430,460,490,489,475],
[493,447,0,456,492,432,469,468],
[513,461,435,0,449,492,496,495],
[521,431,399,442,0,480,454,479],
[546,401,459,399,411,0,461,415],
[491,402,422,395,437,430,0,457],
[481,416,423,396,412,476,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,462,457,480,464,476,472],
[448,0,471,447,487,440,472,444],
[429,420,0,447,433,417,470,425],
[434,444,444,0,478,444,466,488],
[411,404,458,413,0,443,474,468],
[427,451,474,447,448,0,484,468],
[415,419,421,425,417,407,0,442],
[419,447,466,403,423,423,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,481,459,482,437,441,468],
[439,0,461,489,471,434,428,442],
[410,430,0,486,435,419,425,452],
[432,402,405,0,414,407,395,415],
[409,420,456,477,0,432,409,438],
[454,457,472,484,459,0,454,423],
[450,463,466,496,482,437,0,471],
[423,449,439,476,453,468,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,430,431,455,458,458,408],
[464,0,423,445,441,457,438,423],
[461,468,0,419,498,478,447,459],
[460,446,472,0,454,470,460,442],
[436,450,393,437,0,436,430,417],
[433,434,413,421,455,0,428,419],
[433,453,444,431,461,463,0,421],
[483,468,432,449,474,472,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,433,447,457,455,463,454],
[471,0,452,448,447,410,482,464],
[458,439,0,472,472,440,477,464],
[444,443,419,0,459,399,458,442],
[434,444,419,432,0,416,476,449],
[436,481,451,492,475,0,477,476],
[428,409,414,433,415,414,0,408],
[437,427,427,449,442,415,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,491,485,440,505,492,401],
[468,0,459,556,490,411,517,398],
[400,432,0,480,344,457,499,415],
[406,335,411,0,414,533,400,421],
[451,401,547,477,0,491,480,451],
[386,480,434,358,400,0,425,355],
[399,374,392,491,411,466,0,436],
[490,493,476,470,440,536,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,407,467,472,426,442,425],
[440,0,415,461,458,424,444,440],
[484,476,0,460,465,472,444,452],
[424,430,431,0,461,429,423,412],
[419,433,426,430,0,434,423,426],
[465,467,419,462,457,0,435,436],
[449,447,447,468,468,456,0,442],
[466,451,439,479,465,455,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,394,403,420,421,390,400],
[468,0,401,450,430,510,397,424],
[497,490,0,408,439,453,500,402],
[488,441,483,0,456,407,410,459],
[471,461,452,435,0,444,430,434],
[470,381,438,484,447,0,393,412],
[501,494,391,481,461,498,0,423],
[491,467,489,432,457,479,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,367,479,471,544,518,483,413],
[524,0,477,468,515,518,482,434],
[412,414,0,479,433,484,489,441],
[420,423,412,0,493,519,425,392],
[347,376,458,398,0,440,355,370],
[373,373,407,372,451,0,400,339],
[408,409,402,466,536,491,0,473],
[478,457,450,499,521,552,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,437,564,437,575,449,495],
[449,0,411,461,445,477,404,521],
[454,480,0,494,491,485,462,411],
[327,430,397,0,402,505,439,473],
[454,446,400,489,0,474,424,460],
[316,414,406,386,417,0,413,441],
[442,487,429,452,467,478,0,441],
[396,370,480,418,431,450,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,448,447,420,428,422,457],
[415,0,434,413,407,416,434,432],
[443,457,0,448,452,462,448,435],
[444,478,443,0,454,419,444,442],
[471,484,439,437,0,429,433,457],
[463,475,429,472,462,0,431,448],
[469,457,443,447,458,460,0,450],
[434,459,456,449,434,443,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,471,444,445,453,445,439],
[452,0,489,425,474,455,430,450],
[420,402,0,409,452,440,395,431],
[447,466,482,0,476,454,460,444],
[446,417,439,415,0,453,409,428],
[438,436,451,437,438,0,421,427],
[446,461,496,431,482,470,0,442],
[452,441,460,447,463,464,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,493,308,374,354,486,393],
[449,0,459,342,542,433,488,378],
[398,432,0,358,389,473,306,296],
[583,549,533,0,432,527,455,539],
[517,349,502,459,0,409,491,401],
[537,458,418,364,482,0,394,441],
[405,403,585,436,400,497,0,532],
[498,513,595,352,490,450,359,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,454,432,442,443,446,458],
[453,0,458,423,442,445,446,451],
[437,433,0,432,430,450,434,461],
[459,468,459,0,462,443,444,456],
[449,449,461,429,0,449,459,474],
[448,446,441,448,442,0,449,467],
[445,445,457,447,432,442,0,446],
[433,440,430,435,417,424,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,423,449,488,425,469,465],
[465,0,457,467,473,440,472,436],
[468,434,0,455,485,450,433,440],
[442,424,436,0,449,432,463,437],
[403,418,406,442,0,412,413,396],
[466,451,441,459,479,0,450,444],
[422,419,458,428,478,441,0,430],
[426,455,451,454,495,447,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,470,474,499,451,435,491],
[422,0,474,478,481,450,487,510],
[421,417,0,429,459,402,467,471],
[417,413,462,0,463,387,488,469],
[392,410,432,428,0,418,438,453],
[440,441,489,504,473,0,469,501],
[456,404,424,403,453,422,0,493],
[400,381,420,422,438,390,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,495,452,485,468,497,488],
[452,0,439,435,423,465,418,431],
[396,452,0,420,520,475,452,458],
[439,456,471,0,472,465,444,463],
[406,468,371,419,0,421,426,420],
[423,426,416,426,470,0,415,459],
[394,473,439,447,465,476,0,452],
[403,460,433,428,471,432,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,435,456,431,435,433,424],
[441,0,423,440,466,447,435,465],
[456,468,0,471,468,427,446,464],
[435,451,420,0,452,436,440,419],
[460,425,423,439,0,427,420,424],
[456,444,464,455,464,0,490,468],
[458,456,445,451,471,401,0,444],
[467,426,427,472,467,423,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,466,408,464,443,418,426],
[439,0,456,406,379,378,447,421],
[425,435,0,458,449,441,429,405],
[483,485,433,0,449,459,486,387],
[427,512,442,442,0,470,440,452],
[448,513,450,432,421,0,443,441],
[473,444,462,405,451,448,0,431],
[465,470,486,504,439,450,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,510,567,455,524,415,458],
[393,0,445,435,315,532,372,374],
[381,446,0,428,394,487,389,465],
[324,456,463,0,382,447,357,404],
[436,576,497,509,0,605,455,505],
[367,359,404,444,286,0,347,416],
[476,519,502,534,436,544,0,483],
[433,517,426,487,386,475,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,413,408,449,439,444,404],
[462,0,455,422,462,431,454,486],
[478,436,0,429,439,445,447,444],
[483,469,462,0,493,489,481,394],
[442,429,452,398,0,401,482,453],
[452,460,446,402,490,0,527,406],
[447,437,444,410,409,364,0,400],
[487,405,447,497,438,485,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,425,419,448,438,422,413],
[444,0,460,437,459,448,423,421],
[466,431,0,429,460,429,433,411],
[472,454,462,0,459,471,450,441],
[443,432,431,432,0,453,418,412],
[453,443,462,420,438,0,446,437],
[469,468,458,441,473,445,0,447],
[478,470,480,450,479,454,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,443,433,424,433,415,442],
[428,0,486,482,473,460,452,451],
[448,405,0,464,436,391,401,408],
[458,409,427,0,447,425,420,420],
[467,418,455,444,0,440,430,398],
[458,431,500,466,451,0,459,451],
[476,439,490,471,461,432,0,427],
[449,440,483,471,493,440,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,432,447,432,445,433,448],
[440,0,448,444,435,442,454,445],
[459,443,0,453,442,455,436,444],
[444,447,438,0,453,454,448,463],
[459,456,449,438,0,444,447,449],
[446,449,436,437,447,0,442,439],
[458,437,455,443,444,449,0,450],
[443,446,447,428,442,452,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,426,429,430,433,418,432],
[459,0,456,474,449,450,461,443],
[465,435,0,467,434,462,440,471],
[462,417,424,0,418,443,431,430],
[461,442,457,473,0,444,438,437],
[458,441,429,448,447,0,428,448],
[473,430,451,460,453,463,0,450],
[459,448,420,461,454,443,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,416,459,454,476,446,463],
[469,0,452,445,472,449,496,481],
[475,439,0,439,476,427,503,439],
[432,446,452,0,488,470,509,472],
[437,419,415,403,0,422,440,425],
[415,442,464,421,469,0,449,441],
[445,395,388,382,451,442,0,401],
[428,410,452,419,466,450,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,438,408,413,401,492,487],
[435,0,432,441,394,421,479,452],
[453,459,0,429,506,457,500,504],
[483,450,462,0,458,399,457,481],
[478,497,385,433,0,437,503,463],
[490,470,434,492,454,0,450,513],
[399,412,391,434,388,441,0,453],
[404,439,387,410,428,378,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,410,440,437,432,430,417],
[427,0,417,431,410,420,413,420],
[481,474,0,458,447,439,437,445],
[451,460,433,0,445,424,443,422],
[454,481,444,446,0,434,449,433],
[459,471,452,467,457,0,429,454],
[461,478,454,448,442,462,0,437],
[474,471,446,469,458,437,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,477,377,475,470,428,396],
[472,0,459,402,461,487,454,423],
[414,432,0,381,426,462,425,415],
[514,489,510,0,441,494,442,463],
[416,430,465,450,0,452,462,425],
[421,404,429,397,439,0,426,410],
[463,437,466,449,429,465,0,454],
[495,468,476,428,466,481,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,574,582,379,405,431,365],
[488,0,365,522,248,386,371,372],
[317,526,0,591,267,436,331,424],
[309,369,300,0,296,373,401,204],
[512,643,624,595,0,554,378,424],
[486,505,455,518,337,0,541,487],
[460,520,560,490,513,350,0,354],
[526,519,467,687,467,404,537,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,470,437,460,459,491,435],
[392,0,419,396,421,421,446,387],
[421,472,0,396,456,432,460,451],
[454,495,495,0,440,447,474,433],
[431,470,435,451,0,455,495,399],
[432,470,459,444,436,0,505,433],
[400,445,431,417,396,386,0,403],
[456,504,440,458,492,458,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,342,204,308,515,379,558,471],
[549,0,607,468,450,340,567,670],
[687,284,0,272,370,371,588,508],
[583,423,619,0,468,369,578,427],
[376,441,521,423,0,366,635,476],
[512,551,520,522,525,0,333,500],
[333,324,303,313,256,558,0,521],
[420,221,383,464,415,391,370,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,419,425,418,420,430,426],
[467,0,456,455,447,425,456,451],
[472,435,0,404,437,417,437,441],
[466,436,487,0,432,460,395,461],
[473,444,454,459,0,428,455,427],
[471,466,474,431,463,0,436,431],
[461,435,454,496,436,455,0,463],
[465,440,450,430,464,460,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,459,435,429,447,425,420],
[452,0,429,432,430,448,434,421],
[432,462,0,434,446,451,433,443],
[456,459,457,0,451,460,438,427],
[462,461,445,440,0,452,464,425],
[444,443,440,431,439,0,438,434],
[466,457,458,453,427,453,0,447],
[471,470,448,464,466,457,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,374,353,450,421,484,557,437],
[517,0,409,471,465,453,493,527],
[538,482,0,431,596,552,518,531],
[441,420,460,0,456,544,528,615],
[470,426,295,435,0,512,469,446],
[407,438,339,347,379,0,547,429],
[334,398,373,363,422,344,0,394],
[454,364,360,276,445,462,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,423,467,428,490,475,449],
[444,0,479,468,421,467,494,433],
[468,412,0,484,443,472,469,444],
[424,423,407,0,369,435,482,425],
[463,470,448,522,0,495,512,427],
[401,424,419,456,396,0,459,396],
[416,397,422,409,379,432,0,384],
[442,458,447,466,464,495,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,402,380,491,483,466,490],
[471,0,428,506,537,517,468,577],
[489,463,0,464,487,476,417,529],
[511,385,427,0,483,517,409,513],
[400,354,404,408,0,475,430,448],
[408,374,415,374,416,0,374,497],
[425,423,474,482,461,517,0,553],
[401,314,362,378,443,394,338,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,442,454,447,462,541,439],
[452,0,435,408,418,447,493,448],
[449,456,0,444,458,451,479,452],
[437,483,447,0,463,456,498,432],
[444,473,433,428,0,442,509,451],
[429,444,440,435,449,0,499,454],
[350,398,412,393,382,392,0,389],
[452,443,439,459,440,437,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,474,446,409,475,446,450],
[483,0,505,466,449,424,476,440],
[417,386,0,433,388,415,413,414],
[445,425,458,0,429,417,414,400],
[482,442,503,462,0,459,470,440],
[416,467,476,474,432,0,484,450],
[445,415,478,477,421,407,0,418],
[441,451,477,491,451,441,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,407,429,505,404,417,383],
[458,0,413,461,475,382,443,442],
[484,478,0,482,478,409,430,449],
[462,430,409,0,531,378,436,421],
[386,416,413,360,0,351,354,399],
[487,509,482,513,540,0,481,438],
[474,448,461,455,537,410,0,441],
[508,449,442,470,492,453,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,438,496,418,503,467,529],
[401,0,474,445,408,515,481,456],
[453,417,0,421,359,413,440,466],
[395,446,470,0,378,409,466,457],
[473,483,532,513,0,515,423,485],
[388,376,478,482,376,0,421,440],
[424,410,451,425,468,470,0,471],
[362,435,425,434,406,451,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,488,387,628,666,450,399],
[405,0,423,304,475,532,346,413],
[403,468,0,317,484,430,367,306],
[504,587,574,0,612,549,440,450],
[263,416,407,279,0,344,219,281],
[225,359,461,342,547,0,399,338],
[441,545,524,451,672,492,0,559],
[492,478,585,441,610,553,332,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,449,445,464,435,451,462],
[454,0,462,453,448,458,439,438],
[442,429,0,460,485,453,455,456],
[446,438,431,0,458,461,436,466],
[427,443,406,433,0,410,418,454],
[456,433,438,430,481,0,429,483],
[440,452,436,455,473,462,0,443],
[429,453,435,425,437,408,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,458,470,454,421,449,469],
[427,0,411,412,420,394,398,434],
[433,480,0,443,435,422,382,482],
[421,479,448,0,446,417,429,449],
[437,471,456,445,0,418,419,468],
[470,497,469,474,473,0,433,475],
[442,493,509,462,472,458,0,479],
[422,457,409,442,423,416,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,438,453,452,457,455,435],
[447,0,443,477,470,449,459,464],
[453,448,0,472,463,457,456,443],
[438,414,419,0,436,413,434,429],
[439,421,428,455,0,423,471,430],
[434,442,434,478,468,0,465,441],
[436,432,435,457,420,426,0,439],
[456,427,448,462,461,450,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,427,422,423,438,414,427],
[462,0,437,449,425,463,428,426],
[464,454,0,445,457,450,435,448],
[469,442,446,0,427,454,438,424],
[468,466,434,464,0,467,451,462],
[453,428,441,437,424,0,424,430],
[477,463,456,453,440,467,0,437],
[464,465,443,467,429,461,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,459,436,439,472,417,428],
[438,0,457,412,462,460,434,455],
[432,434,0,425,452,448,452,420],
[455,479,466,0,466,486,455,441],
[452,429,439,425,0,445,447,425],
[419,431,443,405,446,0,426,428],
[474,457,439,436,444,465,0,434],
[463,436,471,450,466,463,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,434,486,454,463,467,506],
[433,0,403,464,451,392,468,451],
[457,488,0,488,471,430,485,496],
[405,427,403,0,411,372,407,436],
[437,440,420,480,0,424,459,480],
[428,499,461,519,467,0,459,481],
[424,423,406,484,432,432,0,455],
[385,440,395,455,411,410,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,459,438,479,436,434,448],
[416,0,507,411,464,503,451,446],
[432,384,0,378,426,427,400,398],
[453,480,513,0,483,470,480,434],
[412,427,465,408,0,460,478,461],
[455,388,464,421,431,0,443,438],
[457,440,491,411,413,448,0,454],
[443,445,493,457,430,453,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,415,449,423,422,437,424],
[465,0,444,482,439,434,414,441],
[476,447,0,475,450,438,447,456],
[442,409,416,0,432,419,425,437],
[468,452,441,459,0,436,442,444],
[469,457,453,472,455,0,437,468],
[454,477,444,466,449,454,0,446],
[467,450,435,454,447,423,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,448,443,430,444,446,426],
[434,0,444,414,477,440,438,449],
[443,447,0,447,464,441,440,434],
[448,477,444,0,468,458,456,434],
[461,414,427,423,0,435,460,444],
[447,451,450,433,456,0,479,448],
[445,453,451,435,431,412,0,417],
[465,442,457,457,447,443,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,451,450,438,438,450,470],
[453,0,442,436,447,446,443,455],
[440,449,0,433,424,445,445,460],
[441,455,458,0,461,463,455,458],
[453,444,467,430,0,434,453,457],
[453,445,446,428,457,0,437,464],
[441,448,446,436,438,454,0,447],
[421,436,431,433,434,427,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,433,428,451,441,437,425],
[474,0,475,445,469,452,466,452],
[458,416,0,425,459,446,445,444],
[463,446,466,0,475,430,427,456],
[440,422,432,416,0,440,450,449],
[450,439,445,461,451,0,441,449],
[454,425,446,464,441,450,0,437],
[466,439,447,435,442,442,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,419,425,440,432,460,424],
[474,0,440,448,455,451,473,460],
[472,451,0,445,467,454,467,472],
[466,443,446,0,475,452,459,446],
[451,436,424,416,0,427,462,427],
[459,440,437,439,464,0,454,436],
[431,418,424,432,429,437,0,424],
[467,431,419,445,464,455,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,411,467,464,493,459,449],
[448,0,393,381,432,497,494,473],
[480,498,0,414,469,465,493,557],
[424,510,477,0,486,483,488,498],
[427,459,422,405,0,454,473,459],
[398,394,426,408,437,0,442,434],
[432,397,398,403,418,449,0,456],
[442,418,334,393,432,457,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,449,454,453,459,458,444],
[429,0,431,450,450,450,436,443],
[442,460,0,450,439,485,455,448],
[437,441,441,0,447,456,450,421],
[438,441,452,444,0,452,437,439],
[432,441,406,435,439,0,452,423],
[433,455,436,441,454,439,0,446],
[447,448,443,470,452,468,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,413,446,451,419,418,441],
[449,0,384,428,445,428,420,444],
[478,507,0,455,458,445,449,470],
[445,463,436,0,441,453,429,440],
[440,446,433,450,0,432,416,432],
[472,463,446,438,459,0,458,474],
[473,471,442,462,475,433,0,477],
[450,447,421,451,459,417,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,422,412,403,428,416,408],
[493,0,468,488,406,456,438,444],
[469,423,0,437,447,446,441,359],
[479,403,454,0,440,476,466,452],
[488,485,444,451,0,466,412,411],
[463,435,445,415,425,0,467,394],
[475,453,450,425,479,424,0,407],
[483,447,532,439,480,497,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,467,424,416,478,451,473],
[479,0,480,436,458,511,471,455],
[424,411,0,439,394,505,443,448],
[467,455,452,0,455,494,426,471],
[475,433,497,436,0,498,492,477],
[413,380,386,397,393,0,416,402],
[440,420,448,465,399,475,0,455],
[418,436,443,420,414,489,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,455,476,425,419,472,436],
[442,0,449,455,442,420,474,439],
[436,442,0,442,430,410,440,414],
[415,436,449,0,419,425,469,415],
[466,449,461,472,0,442,476,450],
[472,471,481,466,449,0,483,445],
[419,417,451,422,415,408,0,421],
[455,452,477,476,441,446,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,439,474,428,429,428,447],
[468,0,451,489,464,435,471,443],
[452,440,0,470,471,461,461,446],
[417,402,421,0,428,422,435,402],
[463,427,420,463,0,428,462,427],
[462,456,430,469,463,0,474,448],
[463,420,430,456,429,417,0,425],
[444,448,445,489,464,443,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,451,469,460,449,449,440],
[442,0,453,469,453,431,456,438],
[440,438,0,479,438,438,441,447],
[422,422,412,0,417,437,430,425],
[431,438,453,474,0,412,460,442],
[442,460,453,454,479,0,462,430],
[442,435,450,461,431,429,0,429],
[451,453,444,466,449,461,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,451,437,449,434,450,446],
[454,0,436,450,456,432,432,459],
[440,455,0,455,451,456,420,441],
[454,441,436,0,442,432,457,460],
[442,435,440,449,0,457,437,441],
[457,459,435,459,434,0,462,469],
[441,459,471,434,454,429,0,451],
[445,432,450,431,450,422,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,461,437,467,444,431,473],
[393,0,448,466,454,486,476,481],
[430,443,0,404,471,450,417,468],
[454,425,487,0,462,448,423,466],
[424,437,420,429,0,420,418,467],
[447,405,441,443,471,0,420,458],
[460,415,474,468,473,471,0,479],
[418,410,423,425,424,433,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,426,434,377,374,428,421],
[461,0,414,457,406,443,417,433],
[465,477,0,464,420,442,451,465],
[457,434,427,0,426,434,427,462],
[514,485,471,465,0,447,441,500],
[517,448,449,457,444,0,442,501],
[463,474,440,464,450,449,0,475],
[470,458,426,429,391,390,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,417,422,432,429,422,444],
[436,0,445,418,463,428,428,429],
[474,446,0,436,464,452,441,466],
[469,473,455,0,471,463,467,440],
[459,428,427,420,0,445,439,440],
[462,463,439,428,446,0,444,430],
[469,463,450,424,452,447,0,447],
[447,462,425,451,451,461,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,452,494,449,452,458,443],
[423,0,410,436,423,421,422,406],
[439,481,0,481,445,458,469,445],
[397,455,410,0,437,422,440,429],
[442,468,446,454,0,420,426,440],
[439,470,433,469,471,0,451,460],
[433,469,422,451,465,440,0,422],
[448,485,446,462,451,431,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,467,436,445,461,458,467],
[438,0,502,454,444,454,472,448],
[424,389,0,429,424,419,435,428],
[455,437,462,0,476,467,470,445],
[446,447,467,415,0,462,451,433],
[430,437,472,424,429,0,460,434],
[433,419,456,421,440,431,0,424],
[424,443,463,446,458,457,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,534,506,496,446,438,418,335],
[357,0,465,435,467,406,487,448],
[385,426,0,412,395,405,340,358],
[395,456,479,0,492,458,438,447],
[445,424,496,399,0,395,435,402],
[453,485,486,433,496,0,447,493],
[473,404,551,453,456,444,0,415],
[556,443,533,444,489,398,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,475,477,443,428,445,449],
[424,0,445,427,392,425,422,410],
[416,446,0,431,407,446,422,411],
[414,464,460,0,410,435,420,417],
[448,499,484,481,0,483,463,442],
[463,466,445,456,408,0,455,410],
[446,469,469,471,428,436,0,421],
[442,481,480,474,449,481,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,432,495,481,481,459,477],
[381,0,447,467,433,408,435,391],
[459,444,0,438,453,426,409,442],
[396,424,453,0,428,432,449,390],
[410,458,438,463,0,425,467,434],
[410,483,465,459,466,0,457,392],
[432,456,482,442,424,434,0,409],
[414,500,449,501,457,499,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,440,437,447,466,451,415],
[444,0,459,447,455,473,434,451],
[451,432,0,448,455,457,452,453],
[454,444,443,0,455,477,457,456],
[444,436,436,436,0,451,439,433],
[425,418,434,414,440,0,451,429],
[440,457,439,434,452,440,0,448],
[476,440,438,435,458,462,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,490,443,527,508,436,414],
[410,0,512,504,464,460,449,404],
[401,379,0,342,337,314,358,330],
[448,387,549,0,434,481,396,416],
[364,427,554,457,0,519,396,406],
[383,431,577,410,372,0,379,375],
[455,442,533,495,495,512,0,466],
[477,487,561,475,485,516,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,454,449,434,444,430,440],
[449,0,437,441,427,449,421,438],
[437,454,0,432,438,427,429,430],
[442,450,459,0,435,449,431,442],
[457,464,453,456,0,450,436,453],
[447,442,464,442,441,0,450,456],
[461,470,462,460,455,441,0,448],
[451,453,461,449,438,435,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,424,450,428,478,411,466],
[478,0,442,448,445,483,442,450],
[467,449,0,454,449,440,436,467],
[441,443,437,0,435,462,443,477],
[463,446,442,456,0,467,461,482],
[413,408,451,429,424,0,398,454],
[480,449,455,448,430,493,0,468],
[425,441,424,414,409,437,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,466,490,481,454,426,458],
[447,0,492,487,484,474,447,444],
[425,399,0,451,436,440,460,412],
[401,404,440,0,426,425,411,394],
[410,407,455,465,0,433,444,412],
[437,417,451,466,458,0,446,442],
[465,444,431,480,447,445,0,436],
[433,447,479,497,479,449,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,440,445,425,425,424,430],
[477,0,448,467,430,446,440,453],
[451,443,0,452,432,406,442,435],
[446,424,439,0,423,438,433,449],
[466,461,459,468,0,440,454,459],
[466,445,485,453,451,0,445,451],
[467,451,449,458,437,446,0,455],
[461,438,456,442,432,440,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,444,447,447,466,446,472],
[440,0,445,433,444,464,448,450],
[447,446,0,435,427,460,444,446],
[444,458,456,0,450,481,454,452],
[444,447,464,441,0,463,455,469],
[425,427,431,410,428,0,451,440],
[445,443,447,437,436,440,0,439],
[419,441,445,439,422,451,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,477,463,450,473,464,427],
[405,0,452,441,430,456,446,426],
[414,439,0,438,427,467,471,421],
[428,450,453,0,418,438,429,410],
[441,461,464,473,0,457,486,460],
[418,435,424,453,434,0,434,415],
[427,445,420,462,405,457,0,418],
[464,465,470,481,431,476,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,449,433,433,435,463,469],
[449,0,436,447,440,422,447,438],
[442,455,0,453,437,442,461,457],
[458,444,438,0,465,450,429,452],
[458,451,454,426,0,475,460,457],
[456,469,449,441,416,0,459,452],
[428,444,430,462,431,432,0,457],
[422,453,434,439,434,439,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,434,465,455,429,446,436],
[443,0,429,457,414,416,473,424],
[457,462,0,435,456,469,490,451],
[426,434,456,0,427,428,485,446],
[436,477,435,464,0,434,481,426],
[462,475,422,463,457,0,483,450],
[445,418,401,406,410,408,0,432],
[455,467,440,445,465,441,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,445,419,436,438,438,459],
[454,0,424,423,427,432,432,467],
[446,467,0,425,432,466,430,466],
[472,468,466,0,430,471,431,449],
[455,464,459,461,0,500,449,432],
[453,459,425,420,391,0,431,453],
[453,459,461,460,442,460,0,458],
[432,424,425,442,459,438,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,509,458,473,468,420,497],
[460,0,495,444,416,431,417,471],
[382,396,0,431,357,408,361,394],
[433,447,460,0,395,416,438,484],
[418,475,534,496,0,410,488,518],
[423,460,483,475,481,0,455,485],
[471,474,530,453,403,436,0,510],
[394,420,497,407,373,406,381,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,321,478,374,356,360,425,453],
[570,0,562,492,421,503,461,479],
[413,329,0,471,328,370,483,395],
[517,399,420,0,342,383,436,423],
[535,470,563,549,0,427,503,468],
[531,388,521,508,464,0,464,439],
[466,430,408,455,388,427,0,494],
[438,412,496,468,423,452,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,442,452,477,454,450,447],
[390,0,394,421,421,403,426,394],
[449,497,0,468,474,483,460,445],
[439,470,423,0,461,444,466,425],
[414,470,417,430,0,419,447,425],
[437,488,408,447,472,0,441,444],
[441,465,431,425,444,450,0,423],
[444,497,446,466,466,447,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,488,354,296,519,300,132],
[470,0,493,332,396,475,563,352],
[403,398,0,340,252,550,232,211],
[537,559,551,0,438,598,478,398],
[595,495,639,453,0,690,476,276],
[372,416,341,293,201,0,398,393],
[591,328,659,413,415,493,0,452],
[759,539,680,493,615,498,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,450,411,452,443,431,420],
[470,0,492,456,469,461,420,466],
[441,399,0,424,445,457,424,427],
[480,435,467,0,468,450,450,453],
[439,422,446,423,0,443,410,410],
[448,430,434,441,448,0,434,443],
[460,471,467,441,481,457,0,477],
[471,425,464,438,481,448,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,457,471,442,457,464,461],
[478,0,455,451,460,452,415,493],
[434,436,0,459,451,474,406,489],
[420,440,432,0,430,449,436,493],
[449,431,440,461,0,473,452,473],
[434,439,417,442,418,0,421,474],
[427,476,485,455,439,470,0,470],
[430,398,402,398,418,417,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,418,446,444,446,444,422],
[478,0,453,470,452,484,463,441],
[473,438,0,475,463,479,441,454],
[445,421,416,0,452,443,429,431],
[447,439,428,439,0,457,438,445],
[445,407,412,448,434,0,420,411],
[447,428,450,462,453,471,0,456],
[469,450,437,460,446,480,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,427,437,443,440,428,411],
[483,0,460,441,456,450,503,458],
[464,431,0,460,450,473,481,443],
[454,450,431,0,440,435,442,438],
[448,435,441,451,0,442,450,455],
[451,441,418,456,449,0,466,449],
[463,388,410,449,441,425,0,446],
[480,433,448,453,436,442,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,501,454,453,437,448,428],
[426,0,444,424,452,401,421,466],
[390,447,0,419,456,446,436,434],
[437,467,472,0,471,450,453,467],
[438,439,435,420,0,452,425,471],
[454,490,445,441,439,0,423,462],
[443,470,455,438,466,468,0,436],
[463,425,457,424,420,429,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,444,453,490,426,463,439],
[438,0,420,451,469,420,434,442],
[447,471,0,462,477,438,465,465],
[438,440,429,0,458,411,432,434],
[401,422,414,433,0,412,413,407],
[465,471,453,480,479,0,435,454],
[428,457,426,459,478,456,0,429],
[452,449,426,457,484,437,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,423,445,435,433,496,490],
[432,0,427,446,446,429,469,491],
[468,464,0,440,487,465,496,480],
[446,445,451,0,456,451,497,476],
[456,445,404,435,0,419,466,445],
[458,462,426,440,472,0,515,468],
[395,422,395,394,425,376,0,446],
[401,400,411,415,446,423,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,444,436,429,450,429,434],
[461,0,457,455,440,466,467,472],
[447,434,0,446,455,452,473,473],
[455,436,445,0,435,459,448,449],
[462,451,436,456,0,481,455,462],
[441,425,439,432,410,0,439,445],
[462,424,418,443,436,452,0,455],
[457,419,418,442,429,446,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,421,482,403,446,449,431],
[410,0,467,435,446,430,453,438],
[470,424,0,449,421,501,407,474],
[409,456,442,0,418,428,447,432],
[488,445,470,473,0,465,451,447],
[445,461,390,463,426,0,428,453],
[442,438,484,444,440,463,0,434],
[460,453,417,459,444,438,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,434,463,379,418,451,415],
[431,0,422,415,403,401,426,431],
[457,469,0,442,427,393,426,463],
[428,476,449,0,438,414,465,432],
[512,488,464,453,0,453,460,439],
[473,490,498,477,438,0,500,437],
[440,465,465,426,431,391,0,404],
[476,460,428,459,452,454,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,438,431,456,445,455,459],
[458,0,452,427,461,446,449,437],
[453,439,0,436,467,454,458,424],
[460,464,455,0,484,440,444,465],
[435,430,424,407,0,425,435,412],
[446,445,437,451,466,0,472,453],
[436,442,433,447,456,419,0,435],
[432,454,467,426,479,438,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,406,485,463,451,456,480],
[444,0,429,426,469,462,482,452],
[485,462,0,442,446,472,507,488],
[406,465,449,0,456,477,471,476],
[428,422,445,435,0,459,463,442],
[440,429,419,414,432,0,460,432],
[435,409,384,420,428,431,0,462],
[411,439,403,415,449,459,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,461,466,507,490,444,486],
[443,0,441,451,453,509,446,461],
[430,450,0,455,464,507,441,478],
[425,440,436,0,471,459,447,460],
[384,438,427,420,0,460,405,413],
[401,382,384,432,431,0,424,425],
[447,445,450,444,486,467,0,435],
[405,430,413,431,478,466,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,447,429,442,426,460,426],
[423,0,420,406,447,400,471,454],
[444,471,0,403,427,421,465,446],
[462,485,488,0,469,459,504,430],
[449,444,464,422,0,453,467,442],
[465,491,470,432,438,0,481,468],
[431,420,426,387,424,410,0,391],
[465,437,445,461,449,423,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,466,423,454,521,435,450],
[417,0,403,400,417,432,389,430],
[425,488,0,429,386,496,365,471],
[468,491,462,0,434,544,455,476],
[437,474,505,457,0,522,457,482],
[370,459,395,347,369,0,399,401],
[456,502,526,436,434,492,0,458],
[441,461,420,415,409,490,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,416,430,427,445,417,439],
[439,0,438,416,438,444,402,421],
[475,453,0,455,449,463,438,443],
[461,475,436,0,459,460,447,448],
[464,453,442,432,0,465,424,440],
[446,447,428,431,426,0,414,428],
[474,489,453,444,467,477,0,460],
[452,470,448,443,451,463,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,465,478,444,430,425,509],
[401,0,367,362,351,453,343,340],
[426,524,0,419,389,493,463,463],
[413,529,472,0,467,499,451,527],
[447,540,502,424,0,472,477,452],
[461,438,398,392,419,0,372,354],
[466,548,428,440,414,519,0,442],
[382,551,428,364,439,537,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,444,507,471,519,478,431],
[432,0,443,439,456,449,456,472],
[447,448,0,454,412,470,457,470],
[384,452,437,0,464,466,435,435],
[420,435,479,427,0,493,445,454],
[372,442,421,425,398,0,407,466],
[413,435,434,456,446,484,0,439],
[460,419,421,456,437,425,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,422,471,435,422,416,439],
[481,0,415,448,460,433,438,457],
[469,476,0,471,473,448,444,458],
[420,443,420,0,412,406,435,419],
[456,431,418,479,0,429,446,436],
[469,458,443,485,462,0,458,437],
[475,453,447,456,445,433,0,448],
[452,434,433,472,455,454,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,450,456,430,441,450,458],
[444,0,460,464,452,459,465,475],
[441,431,0,461,447,447,429,452],
[435,427,430,0,418,438,420,454],
[461,439,444,473,0,460,457,457],
[450,432,444,453,431,0,443,437],
[441,426,462,471,434,448,0,452],
[433,416,439,437,434,454,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,425,415,435,404,434,455],
[472,0,439,443,447,458,455,461],
[466,452,0,432,468,438,448,477],
[476,448,459,0,449,427,443,452],
[456,444,423,442,0,440,459,448],
[487,433,453,464,451,0,445,489],
[457,436,443,448,432,446,0,444],
[436,430,414,439,443,402,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,445,448,450,438,436,436],
[449,0,443,458,446,444,442,444],
[446,448,0,453,433,424,437,428],
[443,433,438,0,454,427,442,423],
[441,445,458,437,0,452,461,429],
[453,447,467,464,439,0,435,450],
[455,449,454,449,430,456,0,427],
[455,447,463,468,462,441,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,418,411,450,428,427,443],
[448,0,446,454,462,435,433,478],
[473,445,0,430,435,432,450,462],
[480,437,461,0,439,444,455,451],
[441,429,456,452,0,448,446,461],
[463,456,459,447,443,0,439,461],
[464,458,441,436,445,452,0,479],
[448,413,429,440,430,430,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,519,433,440,525,527,492],
[451,0,530,414,469,450,451,495],
[372,361,0,348,392,396,376,487],
[458,477,543,0,471,497,437,596],
[451,422,499,420,0,444,431,511],
[366,441,495,394,447,0,424,440],
[364,440,515,454,460,467,0,490],
[399,396,404,295,380,451,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,452,446,471,436,458,448],
[420,0,435,438,447,431,432,426],
[439,456,0,426,453,451,440,424],
[445,453,465,0,448,432,436,431],
[420,444,438,443,0,447,449,430],
[455,460,440,459,444,0,432,451],
[433,459,451,455,442,459,0,452],
[443,465,467,460,461,440,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,446,440,445,472,451,448],
[432,0,464,424,446,452,412,451],
[445,427,0,453,462,472,456,478],
[451,467,438,0,441,477,457,463],
[446,445,429,450,0,441,451,456],
[419,439,419,414,450,0,417,452],
[440,479,435,434,440,474,0,453],
[443,440,413,428,435,439,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,448,452,429,414,432,477],
[453,0,428,475,403,391,422,442],
[443,463,0,476,445,404,428,457],
[439,416,415,0,447,401,445,400],
[462,488,446,444,0,453,423,433],
[477,500,487,490,438,0,482,477],
[459,469,463,446,468,409,0,441],
[414,449,434,491,458,414,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,438,459,468,436,432,450],
[438,0,447,447,457,445,427,447],
[453,444,0,474,467,462,451,454],
[432,444,417,0,439,429,419,448],
[423,434,424,452,0,423,429,435],
[455,446,429,462,468,0,463,462],
[459,464,440,472,462,428,0,469],
[441,444,437,443,456,429,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,460,436,429,504,452,437],
[458,0,439,442,464,473,473,424],
[431,452,0,426,470,505,448,456],
[455,449,465,0,480,481,495,432],
[462,427,421,411,0,457,467,436],
[387,418,386,410,434,0,394,400],
[439,418,443,396,424,497,0,440],
[454,467,435,459,455,491,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,383,420,450,432,537,466,475],
[508,0,459,470,401,497,409,366],
[471,432,0,476,364,576,491,399],
[441,421,415,0,350,587,472,463],
[459,490,527,541,0,556,479,413],
[354,394,315,304,335,0,342,306],
[425,482,400,419,412,549,0,426],
[416,525,492,428,478,585,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,451,441,453,452,445,420],
[439,0,440,461,469,449,455,446],
[440,451,0,455,452,449,448,418],
[450,430,436,0,466,448,435,439],
[438,422,439,425,0,437,441,420],
[439,442,442,443,454,0,455,422],
[446,436,443,456,450,436,0,447],
[471,445,473,452,471,469,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,457,453,458,469,442,426],
[430,0,428,420,408,465,446,395],
[434,463,0,440,416,462,418,388],
[438,471,451,0,443,481,444,442],
[433,483,475,448,0,500,482,451],
[422,426,429,410,391,0,438,410],
[449,445,473,447,409,453,0,413],
[465,496,503,449,440,481,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,466,429,439,462,492,467],
[486,0,471,496,465,488,502,442],
[425,420,0,467,447,468,446,469],
[462,395,424,0,453,457,434,441],
[452,426,444,438,0,453,447,479],
[429,403,423,434,438,0,464,427],
[399,389,445,457,444,427,0,450],
[424,449,422,450,412,464,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,421,445,443,431,440,447],
[437,0,468,453,433,444,441,444],
[470,423,0,430,423,411,439,438],
[446,438,461,0,440,435,447,446],
[448,458,468,451,0,462,465,441],
[460,447,480,456,429,0,434,456],
[451,450,452,444,426,457,0,451],
[444,447,453,445,450,435,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,425,443,396,450,401,493],
[388,0,361,385,359,396,351,406],
[466,530,0,502,428,463,427,463],
[448,506,389,0,411,405,436,501],
[495,532,463,480,0,423,455,427],
[441,495,428,486,468,0,455,480],
[490,540,464,455,436,436,0,535],
[398,485,428,390,464,411,356,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,436,446,475,451,457,437],
[443,0,446,464,453,464,450,438],
[455,445,0,456,459,477,467,443],
[445,427,435,0,443,438,465,442],
[416,438,432,448,0,458,480,453],
[440,427,414,453,433,0,467,432],
[434,441,424,426,411,424,0,436],
[454,453,448,449,438,459,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,497,442,424,454,468,446],
[476,0,510,410,467,455,475,434],
[394,381,0,352,400,411,399,387],
[449,481,539,0,454,486,475,436],
[467,424,491,437,0,452,469,458],
[437,436,480,405,439,0,417,415],
[423,416,492,416,422,474,0,399],
[445,457,504,455,433,476,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,425,442,470,393,435,423],
[478,0,462,462,518,420,449,491],
[466,429,0,474,457,403,446,467],
[449,429,417,0,468,421,429,436],
[421,373,434,423,0,370,410,440],
[498,471,488,470,521,0,444,478],
[456,442,445,462,481,447,0,459],
[468,400,424,455,451,413,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,437,410,393,405,445,431],
[456,0,478,431,436,458,475,450],
[454,413,0,419,446,440,429,387],
[481,460,472,0,429,476,456,439],
[498,455,445,462,0,460,493,420],
[486,433,451,415,431,0,420,403],
[446,416,462,435,398,471,0,416],
[460,441,504,452,471,488,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,500,502,441,516,479,435],
[441,0,444,468,408,476,451,465],
[391,447,0,465,448,462,453,447],
[389,423,426,0,435,461,419,478],
[450,483,443,456,0,485,456,449],
[375,415,429,430,406,0,438,401],
[412,440,438,472,435,453,0,475],
[456,426,444,413,442,490,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,448,452,440,444,439,441],
[445,0,463,447,424,464,446,446],
[443,428,0,445,428,436,418,422],
[439,444,446,0,422,447,412,423],
[451,467,463,469,0,470,456,442],
[447,427,455,444,421,0,418,426],
[452,445,473,479,435,473,0,439],
[450,445,469,468,449,465,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,485,441,474,479,461,459],
[425,0,465,437,441,453,442,432],
[406,426,0,423,448,426,428,402],
[450,454,468,0,461,477,449,419],
[417,450,443,430,0,440,444,406],
[412,438,465,414,451,0,448,414],
[430,449,463,442,447,443,0,434],
[432,459,489,472,485,477,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,440,440,448,464,423,430],
[441,0,449,464,439,471,460,456],
[451,442,0,426,448,477,452,449],
[451,427,465,0,426,487,440,430],
[443,452,443,465,0,458,449,474],
[427,420,414,404,433,0,414,430],
[468,431,439,451,442,477,0,453],
[461,435,442,461,417,461,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,443,452,454,472,440,454],
[440,0,434,455,436,434,422,442],
[448,457,0,449,459,445,430,435],
[439,436,442,0,462,441,432,447],
[437,455,432,429,0,449,437,445],
[419,457,446,450,442,0,458,449],
[451,469,461,459,454,433,0,448],
[437,449,456,444,446,442,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,446,446,473,429,460,468],
[412,0,434,458,484,432,470,435],
[445,457,0,458,509,446,459,437],
[445,433,433,0,461,417,433,432],
[418,407,382,430,0,436,434,408],
[462,459,445,474,455,0,450,447],
[431,421,432,458,457,441,0,431],
[423,456,454,459,483,444,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,451,440,443,432,469,495],
[415,0,428,459,463,424,447,468],
[440,463,0,453,451,454,449,475],
[451,432,438,0,463,451,457,469],
[448,428,440,428,0,439,434,480],
[459,467,437,440,452,0,466,477],
[422,444,442,434,457,425,0,467],
[396,423,416,422,411,414,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,436,436,433,450,450,412],
[457,0,447,441,454,437,437,428],
[455,444,0,433,455,444,435,433],
[455,450,458,0,433,430,418,438],
[458,437,436,458,0,448,429,423],
[441,454,447,461,443,0,420,440],
[441,454,456,473,462,471,0,452],
[479,463,458,453,468,451,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,369,460,380,374,422,394,406],
[522,0,428,425,438,488,450,456],
[431,463,0,406,392,441,421,450],
[511,466,485,0,412,464,386,495],
[517,453,499,479,0,521,400,492],
[469,403,450,427,370,0,379,477],
[497,441,470,505,491,512,0,534],
[485,435,441,396,399,414,357,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,490,458,470,434,451,493],
[457,0,457,407,498,391,456,457],
[401,434,0,453,452,407,443,453],
[433,484,438,0,450,450,446,469],
[421,393,439,441,0,394,405,440],
[457,500,484,441,497,0,498,478],
[440,435,448,445,486,393,0,451],
[398,434,438,422,451,413,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,442,430,436,514,461,453],
[471,0,485,454,428,493,459,424],
[449,406,0,420,448,451,463,410],
[461,437,471,0,465,459,472,436],
[455,463,443,426,0,457,448,437],
[377,398,440,432,434,0,414,416],
[430,432,428,419,443,477,0,428],
[438,467,481,455,454,475,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,368,387,427,447,394,464,421],
[523,0,499,524,455,510,484,407],
[504,392,0,469,386,430,391,341],
[464,367,422,0,455,416,479,397],
[444,436,505,436,0,442,440,442],
[497,381,461,475,449,0,477,394],
[427,407,500,412,451,414,0,494],
[470,484,550,494,449,497,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,399,397,457,481,427,453],
[439,0,489,421,390,428,442,456],
[492,402,0,459,454,497,458,447],
[494,470,432,0,449,490,380,511],
[434,501,437,442,0,399,411,424],
[410,463,394,401,492,0,453,468],
[464,449,433,511,480,438,0,434],
[438,435,444,380,467,423,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,449,503,497,469,432,492],
[441,0,422,492,457,456,435,455],
[442,469,0,501,498,488,487,469],
[388,399,390,0,453,429,384,406],
[394,434,393,438,0,447,412,451],
[422,435,403,462,444,0,410,457],
[459,456,404,507,479,481,0,478],
[399,436,422,485,440,434,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,452,456,429,437,451,473],
[429,0,456,461,452,436,456,480],
[439,435,0,449,421,426,416,452],
[435,430,442,0,445,441,448,464],
[462,439,470,446,0,472,450,462],
[454,455,465,450,419,0,443,459],
[440,435,475,443,441,448,0,473],
[418,411,439,427,429,432,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,415,436,444,425,422,451],
[453,0,449,456,482,475,426,464],
[476,442,0,457,443,466,448,436],
[455,435,434,0,459,449,439,454],
[447,409,448,432,0,425,419,428],
[466,416,425,442,466,0,421,434],
[469,465,443,452,472,470,0,431],
[440,427,455,437,463,457,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,445,474,455,442,455,451],
[434,0,424,442,456,445,451,449],
[446,467,0,476,464,435,448,459],
[417,449,415,0,452,413,453,434],
[436,435,427,439,0,425,438,427],
[449,446,456,478,466,0,460,439],
[436,440,443,438,453,431,0,447],
[440,442,432,457,464,452,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,452,444,433,448,452,442],
[447,0,451,467,426,429,435,426],
[439,440,0,458,429,425,431,430],
[447,424,433,0,431,426,428,436],
[458,465,462,460,0,426,460,447],
[443,462,466,465,465,0,448,453],
[439,456,460,463,431,443,0,444],
[449,465,461,455,444,438,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,472,432,432,466,486,437],
[486,0,478,481,417,461,481,423],
[419,413,0,403,415,456,484,380],
[459,410,488,0,458,490,497,462],
[459,474,476,433,0,440,498,448],
[425,430,435,401,451,0,478,410],
[405,410,407,394,393,413,0,391],
[454,468,511,429,443,481,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,422,435,408,419,461,458],
[479,0,435,461,461,448,493,474],
[469,456,0,449,453,423,439,473],
[456,430,442,0,441,460,455,458],
[483,430,438,450,0,440,460,474],
[472,443,468,431,451,0,455,462],
[430,398,452,436,431,436,0,471],
[433,417,418,433,417,429,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,446,426,430,451,432,427],
[458,0,448,470,419,431,441,421],
[445,443,0,456,398,439,450,432],
[465,421,435,0,457,432,418,418],
[461,472,493,434,0,472,474,450],
[440,460,452,459,419,0,471,410],
[459,450,441,473,417,420,0,414],
[464,470,459,473,441,481,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,463,397,454,472,456,419],
[449,0,451,395,439,497,444,463],
[428,440,0,375,441,449,447,424],
[494,496,516,0,470,492,487,437],
[437,452,450,421,0,487,448,445],
[419,394,442,399,404,0,405,437],
[435,447,444,404,443,486,0,425],
[472,428,467,454,446,454,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,443,455,452,433,446,430],
[450,0,453,460,441,447,442,430],
[448,438,0,435,441,408,454,423],
[436,431,456,0,459,437,425,437],
[439,450,450,432,0,442,410,429],
[458,444,483,454,449,0,450,436],
[445,449,437,466,481,441,0,446],
[461,461,468,454,462,455,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,446,490,439,464,461,453],
[381,0,468,375,396,456,401,508],
[445,423,0,389,448,443,423,420],
[401,516,502,0,414,468,455,433],
[452,495,443,477,0,475,463,474],
[427,435,448,423,416,0,337,464],
[430,490,468,436,428,554,0,487],
[438,383,471,458,417,427,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,423,405,429,456,441,414],
[468,0,449,456,415,440,438,422],
[468,442,0,431,466,455,429,445],
[486,435,460,0,491,477,447,450],
[462,476,425,400,0,459,449,421],
[435,451,436,414,432,0,463,429],
[450,453,462,444,442,428,0,433],
[477,469,446,441,470,462,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,462,455,425,441,434,455],
[429,0,428,425,434,412,392,448],
[429,463,0,438,419,437,406,449],
[436,466,453,0,431,427,417,437],
[466,457,472,460,0,442,427,450],
[450,479,454,464,449,0,415,432],
[457,499,485,474,464,476,0,445],
[436,443,442,454,441,459,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,457,462,474,399,463,446],
[398,0,433,402,419,415,427,408],
[434,458,0,464,465,416,474,457],
[429,489,427,0,462,391,437,439],
[417,472,426,429,0,414,455,403],
[492,476,475,500,477,0,457,444],
[428,464,417,454,436,434,0,411],
[445,483,434,452,488,447,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,454,454,450,466,445,443],
[455,0,446,429,440,442,431,451],
[437,445,0,413,416,451,438,434],
[437,462,478,0,436,453,446,460],
[441,451,475,455,0,440,462,472],
[425,449,440,438,451,0,442,453],
[446,460,453,445,429,449,0,446],
[448,440,457,431,419,438,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,438,329,416,331,364,400],
[494,0,429,425,397,390,433,471],
[453,462,0,464,452,386,455,429],
[562,466,427,0,398,386,409,461],
[475,494,439,493,0,404,451,483],
[560,501,505,505,487,0,429,428],
[527,458,436,482,440,462,0,448],
[491,420,462,430,408,463,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,416,431,443,422,415,462],
[446,0,421,457,412,456,384,443],
[475,470,0,472,464,480,425,459],
[460,434,419,0,433,454,396,435],
[448,479,427,458,0,417,453,457],
[469,435,411,437,474,0,443,466],
[476,507,466,495,438,448,0,462],
[429,448,432,456,434,425,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,461,442,459,450,452,444],
[438,0,461,458,457,460,459,461],
[430,430,0,430,438,453,444,436],
[449,433,461,0,471,453,467,446],
[432,434,453,420,0,458,446,429],
[441,431,438,438,433,0,447,428],
[439,432,447,424,445,444,0,422],
[447,430,455,445,462,463,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,439,449,451,442,467,480],
[443,0,466,434,443,453,469,462],
[452,425,0,447,446,452,469,450],
[442,457,444,0,445,448,467,444],
[440,448,445,446,0,446,473,455],
[449,438,439,443,445,0,467,444],
[424,422,422,424,418,424,0,437],
[411,429,441,447,436,447,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,459,435,455,463,482,473],
[424,0,408,431,429,429,414,437],
[432,483,0,438,472,453,454,473],
[456,460,453,0,464,424,463,473],
[436,462,419,427,0,440,432,463],
[428,462,438,467,451,0,457,462],
[409,477,437,428,459,434,0,466],
[418,454,418,418,428,429,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,455,480,460,436,431,422],
[480,0,471,455,449,475,441,487],
[436,420,0,468,402,423,448,428],
[411,436,423,0,428,443,416,447],
[431,442,489,463,0,436,423,424],
[455,416,468,448,455,0,456,451],
[460,450,443,475,468,435,0,451],
[469,404,463,444,467,440,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,481,439,457,456,424,455],
[402,0,463,421,424,463,419,447],
[410,428,0,418,439,439,378,418],
[452,470,473,0,472,472,465,427],
[434,467,452,419,0,439,443,455],
[435,428,452,419,452,0,421,419],
[467,472,513,426,448,470,0,462],
[436,444,473,464,436,472,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,439,424,434,449,483,445],
[472,0,472,441,476,479,485,484],
[452,419,0,400,412,427,467,441],
[467,450,491,0,442,461,478,473],
[457,415,479,449,0,473,502,484],
[442,412,464,430,418,0,481,452],
[408,406,424,413,389,410,0,424],
[446,407,450,418,407,439,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,485,438,444,456,463,448],
[464,0,492,450,437,477,484,470],
[406,399,0,397,400,452,441,462],
[453,441,494,0,481,446,453,472],
[447,454,491,410,0,422,470,456],
[435,414,439,445,469,0,430,476],
[428,407,450,438,421,461,0,455],
[443,421,429,419,435,415,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,523,572,523,342,311,425,446],
[368,0,419,322,422,319,331,422],
[319,472,0,185,276,127,360,435],
[368,569,706,0,471,362,530,475],
[549,469,615,420,0,456,475,428],
[580,572,764,529,435,0,497,516],
[466,560,531,361,416,394,0,475],
[445,469,456,416,463,375,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,465,434,450,463,449,450],
[449,0,475,470,451,488,470,443],
[426,416,0,397,413,438,430,422],
[457,421,494,0,448,463,463,463],
[441,440,478,443,0,474,481,451],
[428,403,453,428,417,0,455,427],
[442,421,461,428,410,436,0,436],
[441,448,469,428,440,464,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,407,432,445,409,416,436],
[467,0,447,421,430,448,450,453],
[484,444,0,458,452,467,462,442],
[459,470,433,0,464,465,449,437],
[446,461,439,427,0,444,451,478],
[482,443,424,426,447,0,435,446],
[475,441,429,442,440,456,0,443],
[455,438,449,454,413,445,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,472,449,448,457,467,443],
[459,0,479,453,438,483,464,459],
[419,412,0,431,435,439,427,408],
[442,438,460,0,441,461,449,444],
[443,453,456,450,0,461,454,443],
[434,408,452,430,430,0,434,445],
[424,427,464,442,437,457,0,423],
[448,432,483,447,448,446,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,456,475,451,445,479,445],
[411,0,448,423,400,427,450,426],
[435,443,0,459,442,445,488,450],
[416,468,432,0,409,407,442,440],
[440,491,449,482,0,468,482,478],
[446,464,446,484,423,0,442,474],
[412,441,403,449,409,449,0,442],
[446,465,441,451,413,417,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,427,466,439,417,376,395],
[481,0,434,464,471,476,426,423],
[464,457,0,452,440,459,447,449],
[425,427,439,0,419,450,383,404],
[452,420,451,472,0,423,410,420],
[474,415,432,441,468,0,422,412],
[515,465,444,508,481,469,0,480],
[496,468,442,487,471,479,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,474,481,479,493,431,460],
[417,0,434,474,435,454,415,424],
[417,457,0,427,442,479,440,409],
[410,417,464,0,482,484,422,458],
[412,456,449,409,0,423,438,430],
[398,437,412,407,468,0,395,423],
[460,476,451,469,453,496,0,407],
[431,467,482,433,461,468,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,424,394,419,434,433,464],
[471,0,466,432,449,460,430,493],
[467,425,0,485,468,491,490,479],
[497,459,406,0,450,484,457,492],
[472,442,423,441,0,463,471,467],
[457,431,400,407,428,0,440,437],
[458,461,401,434,420,451,0,497],
[427,398,412,399,424,454,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,441,448,418,469,449,416],
[476,0,445,473,448,474,467,441],
[450,446,0,439,446,451,437,443],
[443,418,452,0,435,447,466,428],
[473,443,445,456,0,460,462,449],
[422,417,440,444,431,0,412,442],
[442,424,454,425,429,479,0,466],
[475,450,448,463,442,449,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,424,453,433,473,458,440],
[430,0,410,437,430,472,429,428],
[467,481,0,465,429,480,478,448],
[438,454,426,0,427,450,430,424],
[458,461,462,464,0,488,486,437],
[418,419,411,441,403,0,442,429],
[433,462,413,461,405,449,0,419],
[451,463,443,467,454,462,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,454,450,446,441,451,434],
[437,0,406,458,426,446,437,436],
[437,485,0,443,449,430,436,441],
[441,433,448,0,435,442,444,445],
[445,465,442,456,0,459,451,460],
[450,445,461,449,432,0,445,444],
[440,454,455,447,440,446,0,436],
[457,455,450,446,431,447,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,462,422,457,447,471,440],
[444,0,463,442,452,455,460,437],
[429,428,0,421,471,430,445,449],
[469,449,470,0,452,445,444,448],
[434,439,420,439,0,437,436,435],
[444,436,461,446,454,0,451,458],
[420,431,446,447,455,440,0,450],
[451,454,442,443,456,433,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,457,460,473,449,471,434],
[443,0,446,487,479,443,476,452],
[434,445,0,485,469,459,463,440],
[431,404,406,0,421,429,469,426],
[418,412,422,470,0,449,444,419],
[442,448,432,462,442,0,483,438],
[420,415,428,422,447,408,0,409],
[457,439,451,465,472,453,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,433,467,436,446,460,442],
[430,0,459,450,426,444,457,440],
[458,432,0,452,449,432,433,441],
[424,441,439,0,417,442,436,440],
[455,465,442,474,0,442,453,437],
[445,447,459,449,449,0,459,456],
[431,434,458,455,438,432,0,417],
[449,451,450,451,454,435,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,446,456,417,434,425,463],
[415,0,392,415,416,413,411,425],
[445,499,0,465,455,455,447,456],
[435,476,426,0,425,426,453,450],
[474,475,436,466,0,442,451,461],
[457,478,436,465,449,0,465,477],
[466,480,444,438,440,426,0,458],
[428,466,435,441,430,414,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,510,439,516,397,409,409],
[450,0,490,488,498,482,470,439],
[381,401,0,383,486,453,376,445],
[452,403,508,0,460,470,426,488],
[375,393,405,431,0,384,353,397],
[494,409,438,421,507,0,376,407],
[482,421,515,465,538,515,0,450],
[482,452,446,403,494,484,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,446,415,473,470,463,480],
[414,0,405,414,414,447,418,465],
[445,486,0,448,449,499,447,475],
[476,477,443,0,461,490,477,486],
[418,477,442,430,0,482,437,458],
[421,444,392,401,409,0,453,432],
[428,473,444,414,454,438,0,449],
[411,426,416,405,433,459,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,432,450,414,465,476,487],
[453,0,455,442,418,415,433,440],
[459,436,0,441,503,509,510,467],
[441,449,450,0,444,476,468,478],
[477,473,388,447,0,482,492,488],
[426,476,382,415,409,0,459,437],
[415,458,381,423,399,432,0,446],
[404,451,424,413,403,454,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,352,412,453,420,379,322,436],
[539,0,515,544,464,365,495,379],
[479,376,0,389,455,275,414,344],
[438,347,502,0,441,325,365,348],
[471,427,436,450,0,364,421,471],
[512,526,616,566,527,0,498,390],
[569,396,477,526,470,393,0,370],
[455,512,547,543,420,501,521,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,443,430,440,426,458,448],
[449,0,438,424,440,453,445,479],
[448,453,0,462,430,431,456,467],
[461,467,429,0,463,458,481,474],
[451,451,461,428,0,464,455,469],
[465,438,460,433,427,0,454,459],
[433,446,435,410,436,437,0,465],
[443,412,424,417,422,432,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,465,419,365,401,410,480],
[415,0,416,462,417,463,425,468],
[426,475,0,435,404,471,393,405],
[472,429,456,0,442,491,467,539],
[526,474,487,449,0,465,444,450],
[490,428,420,400,426,0,424,400],
[481,466,498,424,447,467,0,435],
[411,423,486,352,441,491,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,484,440,436,449,422,466],
[426,0,459,421,415,441,433,455],
[407,432,0,440,424,431,380,443],
[451,470,451,0,443,473,451,448],
[455,476,467,448,0,474,418,477],
[442,450,460,418,417,0,415,465],
[469,458,511,440,473,476,0,459],
[425,436,448,443,414,426,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,448,456,498,421,484,416],
[452,0,513,354,556,382,454,381],
[443,378,0,380,458,301,403,352],
[435,537,511,0,561,418,488,457],
[393,335,433,330,0,402,400,398],
[470,509,590,473,489,0,558,431],
[407,437,488,403,491,333,0,431],
[475,510,539,434,493,460,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,452,433,460,447,441,468],
[446,0,451,434,410,430,452,436],
[439,440,0,440,442,432,438,453],
[458,457,451,0,421,445,454,454],
[431,481,449,470,0,467,461,469],
[444,461,459,446,424,0,464,456],
[450,439,453,437,430,427,0,442],
[423,455,438,437,422,435,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,454,452,458,461,439,439],
[471,0,432,455,457,460,463,446],
[437,459,0,453,487,463,452,450],
[439,436,438,0,442,455,448,413],
[433,434,404,449,0,441,419,419],
[430,431,428,436,450,0,450,435],
[452,428,439,443,472,441,0,439],
[452,445,441,478,472,456,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,463,446,431,442,413,435],
[445,0,423,451,396,416,416,429],
[428,468,0,460,438,437,434,438],
[445,440,431,0,410,425,423,455],
[460,495,453,481,0,433,464,479],
[449,475,454,466,458,0,415,467],
[478,475,457,468,427,476,0,477],
[456,462,453,436,412,424,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,408,403,457,412,412,432],
[475,0,437,446,446,444,400,441],
[483,454,0,458,415,404,445,450],
[488,445,433,0,441,463,437,404],
[434,445,476,450,0,453,460,446],
[479,447,487,428,438,0,477,474],
[479,491,446,454,431,414,0,433],
[459,450,441,487,445,417,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,443,465,455,437,451,467],
[428,0,450,451,452,437,424,437],
[448,441,0,432,453,443,451,448],
[426,440,459,0,437,452,439,454],
[436,439,438,454,0,443,442,444],
[454,454,448,439,448,0,438,451],
[440,467,440,452,449,453,0,458],
[424,454,443,437,447,440,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,557,551,583,593,607,415,704],
[334,0,512,504,624,488,299,453],
[340,379,0,434,565,522,181,352],
[308,387,457,0,553,648,446,428],
[298,267,326,338,0,335,224,234],
[284,403,369,243,556,0,315,470],
[476,592,710,445,667,576,0,435],
[187,438,539,463,657,421,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,459,446,411,434,435,457],
[457,0,468,441,432,433,421,453],
[432,423,0,456,432,448,442,434],
[445,450,435,0,431,434,433,449],
[480,459,459,460,0,435,453,467],
[457,458,443,457,456,0,454,465],
[456,470,449,458,438,437,0,449],
[434,438,457,442,424,426,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,447,472,430,429,422,430],
[466,0,442,460,452,448,426,438],
[444,449,0,475,451,452,440,445],
[419,431,416,0,432,432,409,421],
[461,439,440,459,0,453,440,449],
[462,443,439,459,438,0,451,450],
[469,465,451,482,451,440,0,453],
[461,453,446,470,442,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,438,452,442,469,453,451],
[423,0,446,457,447,434,441,446],
[453,445,0,456,451,461,449,443],
[439,434,435,0,440,433,447,439],
[449,444,440,451,0,416,441,444],
[422,457,430,458,475,0,439,443],
[438,450,442,444,450,452,0,440],
[440,445,448,452,447,448,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,454,430,458,432,431,443],
[458,0,444,445,434,441,462,430],
[437,447,0,445,442,450,463,430],
[461,446,446,0,477,450,482,428],
[433,457,449,414,0,445,461,450],
[459,450,441,441,446,0,446,451],
[460,429,428,409,430,445,0,429],
[448,461,461,463,441,440,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,512,443,448,526,509,446],
[417,0,452,441,465,457,429,432],
[379,439,0,423,421,466,422,404],
[448,450,468,0,479,492,433,407],
[443,426,470,412,0,466,487,392],
[365,434,425,399,425,0,435,360],
[382,462,469,458,404,456,0,449],
[445,459,487,484,499,531,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,430,456,460,443,483,447],
[460,0,467,436,467,456,481,468],
[461,424,0,424,443,435,487,439],
[435,455,467,0,468,453,495,480],
[431,424,448,423,0,423,471,470],
[448,435,456,438,468,0,491,446],
[408,410,404,396,420,400,0,408],
[444,423,452,411,421,445,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,481,438,454,486,465,474],
[434,0,451,441,437,465,459,441],
[410,440,0,422,445,444,437,428],
[453,450,469,0,435,462,467,460],
[437,454,446,456,0,455,457,446],
[405,426,447,429,436,0,443,423],
[426,432,454,424,434,448,0,437],
[417,450,463,431,445,468,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,506,504,483,470,441,489],
[412,0,464,433,476,459,461,484],
[385,427,0,388,439,473,435,417],
[387,458,503,0,391,388,408,456],
[408,415,452,500,0,481,477,493],
[421,432,418,503,410,0,438,475],
[450,430,456,483,414,453,0,430],
[402,407,474,435,398,416,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,437,433,475,421,441,453],
[470,0,462,473,467,439,482,465],
[454,429,0,428,457,428,441,465],
[458,418,463,0,469,446,453,471],
[416,424,434,422,0,404,439,422],
[470,452,463,445,487,0,464,456],
[450,409,450,438,452,427,0,444],
[438,426,426,420,469,435,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,442,394,436,532,477,393],
[426,0,399,420,449,467,424,431],
[449,492,0,436,505,521,499,488],
[497,471,455,0,437,481,434,408],
[455,442,386,454,0,510,463,472],
[359,424,370,410,381,0,442,412],
[414,467,392,457,428,449,0,420],
[498,460,403,483,419,479,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,397,398,440,442,388,422],
[513,0,458,475,472,509,467,436],
[494,433,0,434,472,445,437,464],
[493,416,457,0,502,482,434,446],
[451,419,419,389,0,485,437,484],
[449,382,446,409,406,0,431,437],
[503,424,454,457,454,460,0,469],
[469,455,427,445,407,454,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,452,465,430,456,466,459],
[430,0,435,435,427,436,415,445],
[439,456,0,466,450,444,453,442],
[426,456,425,0,442,418,435,439],
[461,464,441,449,0,439,436,464],
[435,455,447,473,452,0,447,444],
[425,476,438,456,455,444,0,450],
[432,446,449,452,427,447,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,431,405,450,466,459,467],
[429,0,422,401,463,439,461,433],
[460,469,0,413,446,502,466,467],
[486,490,478,0,463,453,468,439],
[441,428,445,428,0,446,496,425],
[425,452,389,438,445,0,448,406],
[432,430,425,423,395,443,0,426],
[424,458,424,452,466,485,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,419,451,457,463,437,475],
[447,0,432,440,456,449,473,483],
[472,459,0,452,465,464,444,478],
[440,451,439,0,444,432,447,462],
[434,435,426,447,0,439,442,459],
[428,442,427,459,452,0,460,479],
[454,418,447,444,449,431,0,488],
[416,408,413,429,432,412,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,430,421,422,430,448,427],
[474,0,453,455,446,479,444,452],
[461,438,0,435,440,454,436,443],
[470,436,456,0,444,464,439,460],
[469,445,451,447,0,435,467,431],
[461,412,437,427,456,0,442,430],
[443,447,455,452,424,449,0,428],
[464,439,448,431,460,461,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,518,436,481,539,489,502],
[411,0,491,462,454,486,464,440],
[373,400,0,413,437,521,458,419],
[455,429,478,0,469,539,501,440],
[410,437,454,422,0,538,454,393],
[352,405,370,352,353,0,385,409],
[402,427,433,390,437,506,0,426],
[389,451,472,451,498,482,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,453,436,443,436,412,446],
[446,0,471,440,422,450,470,434],
[438,420,0,412,424,446,411,409],
[455,451,479,0,431,472,426,450],
[448,469,467,460,0,469,455,437],
[455,441,445,419,422,0,437,434],
[479,421,480,465,436,454,0,456],
[445,457,482,441,454,457,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,441,444,432,419,428,452],
[438,0,450,419,439,407,421,429],
[450,441,0,423,447,406,417,416],
[447,472,468,0,452,436,433,430],
[459,452,444,439,0,450,444,427],
[472,484,485,455,441,0,469,465],
[463,470,474,458,447,422,0,441],
[439,462,475,461,464,426,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,456,410,463,520,374,416],
[466,0,386,358,454,487,294,356],
[435,505,0,430,424,493,366,455],
[481,533,461,0,476,505,431,434],
[428,437,467,415,0,447,389,422],
[371,404,398,386,444,0,375,378],
[517,597,525,460,502,516,0,412],
[475,535,436,457,469,513,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,451,496,433,428,441,448],
[453,0,457,463,458,442,443,433],
[440,434,0,450,439,461,429,442],
[395,428,441,0,417,419,409,423],
[458,433,452,474,0,449,452,456],
[463,449,430,472,442,0,438,467],
[450,448,462,482,439,453,0,449],
[443,458,449,468,435,424,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,570,597,587,380,450,398],
[468,0,525,423,433,443,398,494],
[321,366,0,360,335,498,325,384],
[294,468,531,0,409,437,380,457],
[304,458,556,482,0,454,396,481],
[511,448,393,454,437,0,405,484],
[441,493,566,511,495,486,0,506],
[493,397,507,434,410,407,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,446,468,413,434,463,433],
[438,0,419,450,399,434,466,430],
[445,472,0,464,450,447,458,454],
[423,441,427,0,409,416,435,419],
[478,492,441,482,0,478,483,435],
[457,457,444,475,413,0,452,451],
[428,425,433,456,408,439,0,426],
[458,461,437,472,456,440,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,433,426,480,424,462,436],
[457,0,425,481,468,448,458,452],
[458,466,0,434,449,488,462,426],
[465,410,457,0,431,428,475,427],
[411,423,442,460,0,431,454,392],
[467,443,403,463,460,0,488,432],
[429,433,429,416,437,403,0,388],
[455,439,465,464,499,459,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,442,431,433,479,448,462],
[440,0,452,457,442,465,429,460],
[449,439,0,441,430,482,448,463],
[460,434,450,0,428,480,442,470],
[458,449,461,463,0,495,441,466],
[412,426,409,411,396,0,421,424],
[443,462,443,449,450,470,0,471],
[429,431,428,421,425,467,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,443,448,451,486,482,447],
[433,0,440,432,430,468,464,451],
[448,451,0,442,434,457,458,423],
[443,459,449,0,452,486,474,454],
[440,461,457,439,0,484,480,443],
[405,423,434,405,407,0,418,401],
[409,427,433,417,411,473,0,429],
[444,440,468,437,448,490,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,441,452,453,446,454,436],
[462,0,423,498,476,429,442,480],
[450,468,0,484,463,437,450,438],
[439,393,407,0,430,439,446,434],
[438,415,428,461,0,420,422,425],
[445,462,454,452,471,0,462,455],
[437,449,441,445,469,429,0,452],
[455,411,453,457,466,436,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,458,448,486,483,465,445],
[444,0,428,441,445,425,451,443],
[433,463,0,417,467,450,442,470],
[443,450,474,0,479,461,467,463],
[405,446,424,412,0,454,431,448],
[408,466,441,430,437,0,468,451],
[426,440,449,424,460,423,0,468],
[446,448,421,428,443,440,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,443,430,449,413,456,442],
[468,0,450,435,433,445,458,451],
[448,441,0,439,433,418,463,426],
[461,456,452,0,438,440,461,451],
[442,458,458,453,0,423,441,460],
[478,446,473,451,468,0,469,441],
[435,433,428,430,450,422,0,435],
[449,440,465,440,431,450,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,450,508,466,485,504,458],
[446,0,440,435,431,454,474,460],
[441,451,0,433,461,442,437,450],
[383,456,458,0,406,433,490,445],
[425,460,430,485,0,444,484,443],
[406,437,449,458,447,0,470,433],
[387,417,454,401,407,421,0,427],
[433,431,441,446,448,458,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,446,440,456,434,442,456],
[421,0,422,437,424,433,424,452],
[445,469,0,424,440,458,432,455],
[451,454,467,0,458,466,435,469],
[435,467,451,433,0,446,460,461],
[457,458,433,425,445,0,431,468],
[449,467,459,456,431,460,0,467],
[435,439,436,422,430,423,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,426,458,477,433,483,464],
[409,0,449,432,464,434,463,437],
[465,442,0,443,460,451,476,470],
[433,459,448,0,499,431,474,446],
[414,427,431,392,0,403,445,443],
[458,457,440,460,488,0,455,452],
[408,428,415,417,446,436,0,415],
[427,454,421,445,448,439,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,447,452,437,468,437,459],
[457,0,455,436,456,448,458,444],
[444,436,0,448,431,453,442,445],
[439,455,443,0,451,446,445,443],
[454,435,460,440,0,467,437,456],
[423,443,438,445,424,0,453,435],
[454,433,449,446,454,438,0,456],
[432,447,446,448,435,456,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,457,476,442,449,448,460],
[436,0,446,455,439,427,417,463],
[434,445,0,464,425,415,449,458],
[415,436,427,0,433,429,437,441],
[449,452,466,458,0,443,420,457],
[442,464,476,462,448,0,457,460],
[443,474,442,454,471,434,0,467],
[431,428,433,450,434,431,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,428,442,447,436,447,412],
[481,0,482,429,465,412,445,469],
[463,409,0,418,421,427,478,461],
[449,462,473,0,460,414,452,464],
[444,426,470,431,0,450,448,461],
[455,479,464,477,441,0,476,472],
[444,446,413,439,443,415,0,467],
[479,422,430,427,430,419,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,430,449,444,447,446,424],
[416,0,420,449,433,429,421,419],
[461,471,0,454,481,460,446,414],
[442,442,437,0,457,447,423,413],
[447,458,410,434,0,429,447,413],
[444,462,431,444,462,0,427,429],
[445,470,445,468,444,464,0,453],
[467,472,477,478,478,462,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,458,434,425,391,432,419],
[439,0,446,441,446,412,445,457],
[433,445,0,383,438,413,449,426],
[457,450,508,0,426,431,463,429],
[466,445,453,465,0,448,469,455],
[500,479,478,460,443,0,485,465],
[459,446,442,428,422,406,0,416],
[472,434,465,462,436,426,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,461,460,431,456,471,464],
[444,0,454,443,453,443,471,447],
[430,437,0,412,405,425,444,435],
[431,448,479,0,466,459,457,483],
[460,438,486,425,0,458,450,488],
[435,448,466,432,433,0,453,453],
[420,420,447,434,441,438,0,469],
[427,444,456,408,403,438,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,428,440,459,451,456,442],
[438,0,430,439,441,444,455,449],
[463,461,0,443,453,428,466,457],
[451,452,448,0,452,442,443,462],
[432,450,438,439,0,432,447,439],
[440,447,463,449,459,0,470,452],
[435,436,425,448,444,421,0,440],
[449,442,434,429,452,439,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,439,440,446,431,441,416],
[436,0,455,431,413,429,427,436],
[452,436,0,413,423,419,435,444],
[451,460,478,0,436,438,453,439],
[445,478,468,455,0,449,451,449],
[460,462,472,453,442,0,440,452],
[450,464,456,438,440,451,0,447],
[475,455,447,452,442,439,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,455,456,458,444,440,491],
[452,0,460,471,437,448,432,454],
[436,431,0,451,437,435,433,447],
[435,420,440,0,431,430,414,479],
[433,454,454,460,0,427,450,450],
[447,443,456,461,464,0,434,457],
[451,459,458,477,441,457,0,484],
[400,437,444,412,441,434,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,446,436,453,451,445,446],
[433,0,443,431,477,448,463,430],
[445,448,0,449,448,437,456,430],
[455,460,442,0,480,473,454,434],
[438,414,443,411,0,462,423,415],
[440,443,454,418,429,0,450,418],
[446,428,435,437,468,441,0,430],
[445,461,461,457,476,473,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,252,240,329,310,599,231,410],
[639,0,417,588,517,646,541,517],
[651,474,0,304,322,637,527,454],
[562,303,587,0,360,637,421,502],
[581,374,569,531,0,698,440,493],
[292,245,254,254,193,0,264,227],
[660,350,364,470,451,627,0,475],
[481,374,437,389,398,664,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,411,428,437,434,491,489],
[465,0,455,454,441,432,498,429],
[480,436,0,425,456,483,515,473],
[463,437,466,0,500,456,499,454],
[454,450,435,391,0,450,482,466],
[457,459,408,435,441,0,434,449],
[400,393,376,392,409,457,0,478],
[402,462,418,437,425,442,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,449,494,416,453,444,461],
[394,0,408,444,386,427,471,448],
[442,483,0,495,461,466,462,454],
[397,447,396,0,426,411,432,398],
[475,505,430,465,0,453,496,449],
[438,464,425,480,438,0,430,408],
[447,420,429,459,395,461,0,432],
[430,443,437,493,442,483,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,444,446,459,468,499,472],
[423,0,480,440,458,483,477,485],
[447,411,0,473,479,478,432,436],
[445,451,418,0,428,471,448,441],
[432,433,412,463,0,452,455,457],
[423,408,413,420,439,0,447,444],
[392,414,459,443,436,444,0,425],
[419,406,455,450,434,447,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,423,455,433,466,432,442],
[445,0,465,471,454,476,449,452],
[468,426,0,445,415,450,448,454],
[436,420,446,0,414,425,443,441],
[458,437,476,477,0,482,460,465],
[425,415,441,466,409,0,455,458],
[459,442,443,448,431,436,0,437],
[449,439,437,450,426,433,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,440,427,435,425,451,461],
[444,0,438,434,429,425,425,451],
[451,453,0,444,447,441,435,442],
[464,457,447,0,435,446,455,440],
[456,462,444,456,0,457,465,462],
[466,466,450,445,434,0,435,453],
[440,466,456,436,426,456,0,454],
[430,440,449,451,429,438,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,447,428,459,431,439,447],
[458,0,441,453,449,452,438,445],
[444,450,0,438,432,456,433,455],
[463,438,453,0,441,450,442,449],
[432,442,459,450,0,434,453,445],
[460,439,435,441,457,0,457,453],
[452,453,458,449,438,434,0,472],
[444,446,436,442,446,438,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,395,449,448,457,427,485],
[392,0,428,416,370,407,371,424],
[496,463,0,389,442,410,399,471],
[442,475,502,0,490,448,419,431],
[443,521,449,401,0,464,458,490],
[434,484,481,443,427,0,390,480],
[464,520,492,472,433,501,0,480],
[406,467,420,460,401,411,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,444,449,434,444,451,447],
[458,0,463,432,455,423,455,453],
[447,428,0,461,443,448,449,443],
[442,459,430,0,447,429,444,441],
[457,436,448,444,0,438,463,461],
[447,468,443,462,453,0,449,441],
[440,436,442,447,428,442,0,475],
[444,438,448,450,430,450,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,427,477,463,461,468,424],
[472,0,473,433,492,489,489,500],
[464,418,0,443,430,434,456,435],
[414,458,448,0,431,492,448,429],
[428,399,461,460,0,480,504,429],
[430,402,457,399,411,0,433,426],
[423,402,435,443,387,458,0,443],
[467,391,456,462,462,465,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,431,443,468,444,473,437],
[443,0,449,459,449,464,474,444],
[460,442,0,462,480,466,458,452],
[448,432,429,0,458,460,460,436],
[423,442,411,433,0,450,464,403],
[447,427,425,431,441,0,479,426],
[418,417,433,431,427,412,0,430],
[454,447,439,455,488,465,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,440,433,444,439,408,482],
[433,0,433,445,435,448,412,453],
[451,458,0,446,454,451,433,444],
[458,446,445,0,434,448,456,459],
[447,456,437,457,0,461,430,457],
[452,443,440,443,430,0,409,472],
[483,479,458,435,461,482,0,478],
[409,438,447,432,434,419,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,443,468,428,465,444,455],
[469,0,448,471,460,460,438,468],
[448,443,0,458,440,478,443,469],
[423,420,433,0,397,455,412,420],
[463,431,451,494,0,478,477,488],
[426,431,413,436,413,0,440,433],
[447,453,448,479,414,451,0,466],
[436,423,422,471,403,458,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,475,458,483,445,466,456],
[436,0,456,443,459,418,456,445],
[416,435,0,440,442,430,441,430],
[433,448,451,0,468,446,454,440],
[408,432,449,423,0,412,410,451],
[446,473,461,445,479,0,459,463],
[425,435,450,437,481,432,0,440],
[435,446,461,451,440,428,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,453,432,457,447,442,453],
[443,0,453,451,469,430,425,456],
[438,438,0,423,431,435,440,444],
[459,440,468,0,454,445,443,456],
[434,422,460,437,0,440,433,471],
[444,461,456,446,451,0,458,448],
[449,466,451,448,458,433,0,458],
[438,435,447,435,420,443,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,456,426,451,445,419,439],
[435,0,446,436,414,433,418,428],
[435,445,0,424,425,445,446,448],
[465,455,467,0,443,465,456,460],
[440,477,466,448,0,453,462,446],
[446,458,446,426,438,0,432,427],
[472,473,445,435,429,459,0,444],
[452,463,443,431,445,464,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,419,434,439,445,449,416],
[458,0,447,428,421,450,438,422],
[472,444,0,456,429,445,442,445],
[457,463,435,0,456,461,442,453],
[452,470,462,435,0,444,445,447],
[446,441,446,430,447,0,451,430],
[442,453,449,449,446,440,0,428],
[475,469,446,438,444,461,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,572,415,468,484,498,391],
[414,0,523,477,406,374,504,416],
[319,368,0,322,406,400,414,442],
[476,414,569,0,432,434,471,488],
[423,485,485,459,0,408,448,473],
[407,517,491,457,483,0,561,543],
[393,387,477,420,443,330,0,485],
[500,475,449,403,418,348,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,439,464,465,446,392,410],
[410,0,407,443,417,443,429,413],
[452,484,0,478,484,460,430,470],
[427,448,413,0,449,482,404,435],
[426,474,407,442,0,463,426,434],
[445,448,431,409,428,0,398,433],
[499,462,461,487,465,493,0,442],
[481,478,421,456,457,458,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,442,451,457,458,456,465],
[450,0,439,446,450,450,417,466],
[449,452,0,445,458,454,443,455],
[440,445,446,0,427,454,416,464],
[434,441,433,464,0,449,451,474],
[433,441,437,437,442,0,422,453],
[435,474,448,475,440,469,0,485],
[426,425,436,427,417,438,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,369,367,356,504,408,403],
[430,0,311,509,498,481,381,373],
[522,580,0,427,509,535,489,481],
[524,382,464,0,327,445,389,426],
[535,393,382,564,0,408,381,491],
[387,410,356,446,483,0,392,505],
[483,510,402,502,510,499,0,452],
[488,518,410,465,400,386,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,423,409,383,521,446,420],
[397,0,383,346,357,509,370,358],
[468,508,0,430,405,549,497,450],
[482,545,461,0,444,588,521,480],
[508,534,486,447,0,623,486,442],
[370,382,342,303,268,0,351,355],
[445,521,394,370,405,540,0,445],
[471,533,441,411,449,536,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,455,462,450,466,437,435],
[440,0,454,443,430,424,443,470],
[436,437,0,448,457,428,447,459],
[429,448,443,0,454,426,434,455],
[441,461,434,437,0,416,452,442],
[425,467,463,465,475,0,431,462],
[454,448,444,457,439,460,0,451],
[456,421,432,436,449,429,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,413,388,401,447,393,453],
[445,0,415,409,460,441,319,443],
[478,476,0,460,439,469,470,435],
[503,482,431,0,417,452,395,476],
[490,431,452,474,0,457,399,486],
[444,450,422,439,434,0,440,458],
[498,572,421,496,492,451,0,510],
[438,448,456,415,405,433,381,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,439,485,489,484,458,443],
[444,0,417,481,446,443,448,453],
[452,474,0,474,478,428,460,441],
[406,410,417,0,447,423,415,443],
[402,445,413,444,0,406,441,425],
[407,448,463,468,485,0,448,462],
[433,443,431,476,450,443,0,420],
[448,438,450,448,466,429,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,280,540,498,598,229,349,288],
[611,0,499,524,596,485,408,490],
[351,392,0,497,522,352,410,381],
[393,367,394,0,579,366,416,417],
[293,295,369,312,0,234,327,336],
[662,406,539,525,657,0,462,415],
[542,483,481,475,564,429,0,445],
[603,401,510,474,555,476,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,443,453,443,438,426,448],
[425,0,436,431,428,428,410,410],
[448,455,0,452,441,458,437,429],
[438,460,439,0,419,426,423,424],
[448,463,450,472,0,434,431,435],
[453,463,433,465,457,0,449,451],
[465,481,454,468,460,442,0,431],
[443,481,462,467,456,440,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,438,456,430,458,480,444],
[422,0,401,439,427,404,435,413],
[453,490,0,471,445,420,469,460],
[435,452,420,0,447,437,459,430],
[461,464,446,444,0,454,471,464],
[433,487,471,454,437,0,467,464],
[411,456,422,432,420,424,0,431],
[447,478,431,461,427,427,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,465,490,432,472,472,483],
[429,0,446,469,441,486,451,433],
[426,445,0,464,451,456,448,436],
[401,422,427,0,454,469,445,437],
[459,450,440,437,0,488,454,479],
[419,405,435,422,403,0,414,435],
[419,440,443,446,437,477,0,447],
[408,458,455,454,412,456,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,438,443,430,418,468,432],
[448,0,434,436,457,421,454,426],
[453,457,0,440,424,436,454,435],
[448,455,451,0,436,426,453,440],
[461,434,467,455,0,404,456,446],
[473,470,455,465,487,0,475,435],
[423,437,437,438,435,416,0,435],
[459,465,456,451,445,456,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,439,407,463,366,449,448],
[439,0,438,433,403,464,414,511],
[452,453,0,397,443,387,397,430],
[484,458,494,0,492,459,436,456],
[428,488,448,399,0,387,383,462],
[525,427,504,432,504,0,461,492],
[442,477,494,455,508,430,0,450],
[443,380,461,435,429,399,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,643,403,710,477,582,168,377],
[248,0,227,383,415,501,193,361],
[488,664,0,653,547,582,488,361],
[181,508,238,0,603,557,126,294],
[414,476,344,288,0,262,263,476],
[309,390,309,334,629,0,309,345],
[723,698,403,765,628,582,0,422],
[514,530,530,597,415,546,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,435,432,439,459,454,419],
[433,0,434,438,413,426,440,453],
[456,457,0,476,447,445,463,436],
[459,453,415,0,393,442,449,451],
[452,478,444,498,0,429,488,453],
[432,465,446,449,462,0,481,441],
[437,451,428,442,403,410,0,439],
[472,438,455,440,438,450,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,408,420,473,507,496,444],
[442,0,462,461,485,558,473,505],
[483,429,0,417,512,521,452,497],
[471,430,474,0,473,487,462,482],
[418,406,379,418,0,459,443,443],
[384,333,370,404,432,0,406,439],
[395,418,439,429,448,485,0,491],
[447,386,394,409,448,452,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,433,418,437,431,438,432],
[467,0,439,416,433,426,436,430],
[458,452,0,424,434,440,435,433],
[473,475,467,0,471,454,443,465],
[454,458,457,420,0,426,462,429],
[460,465,451,437,465,0,444,450],
[453,455,456,448,429,447,0,474],
[459,461,458,426,462,441,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,632,445,540,428,548,531,453],
[259,0,354,472,415,414,368,430],
[446,537,0,465,255,513,457,417],
[351,419,426,0,387,483,337,365],
[463,476,636,504,0,496,369,536],
[343,477,378,408,395,0,306,371],
[360,523,434,554,522,585,0,537],
[438,461,474,526,355,520,354,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,469,449,447,441,437,437],
[441,0,474,442,450,455,446,460],
[422,417,0,431,430,434,422,435],
[442,449,460,0,437,462,430,450],
[444,441,461,454,0,463,442,455],
[450,436,457,429,428,0,433,443],
[454,445,469,461,449,458,0,450],
[454,431,456,441,436,448,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,429,501,493,470,480,454],
[434,0,451,447,446,442,496,434],
[462,440,0,484,489,442,501,437],
[390,444,407,0,448,410,459,419],
[398,445,402,443,0,438,451,424],
[421,449,449,481,453,0,431,439],
[411,395,390,432,440,460,0,455],
[437,457,454,472,467,452,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,428,484,463,448,428,459],
[444,0,430,485,458,448,445,443],
[463,461,0,506,464,463,461,426],
[407,406,385,0,414,389,415,388],
[428,433,427,477,0,429,411,456],
[443,443,428,502,462,0,461,448],
[463,446,430,476,480,430,0,440],
[432,448,465,503,435,443,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,433,458,469,466,452,447],
[430,0,427,434,451,456,436,445],
[458,464,0,466,445,442,457,462],
[433,457,425,0,446,459,440,422],
[422,440,446,445,0,463,452,437],
[425,435,449,432,428,0,418,439],
[439,455,434,451,439,473,0,424],
[444,446,429,469,454,452,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,453,436,458,463,455,420],
[421,0,418,442,447,457,448,462],
[438,473,0,473,442,438,433,398],
[455,449,418,0,438,424,441,414],
[433,444,449,453,0,441,475,439],
[428,434,453,467,450,0,470,439],
[436,443,458,450,416,421,0,409],
[471,429,493,477,452,452,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,439,477,524,370,389,485],
[490,0,449,532,463,325,397,476],
[452,442,0,516,526,466,490,613],
[414,359,375,0,463,325,410,489],
[367,428,365,428,0,379,339,355],
[521,566,425,566,512,0,490,627],
[502,494,401,481,552,401,0,624],
[406,415,278,402,536,264,267,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,464,461,495,457,450,444],
[437,0,444,432,467,464,453,459],
[427,447,0,456,478,436,461,444],
[430,459,435,0,476,465,461,447],
[396,424,413,415,0,420,436,413],
[434,427,455,426,471,0,445,427],
[441,438,430,430,455,446,0,439],
[447,432,447,444,478,464,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,446,439,458,429,449,418],
[457,0,457,437,444,458,435,443],
[445,434,0,437,439,447,432,434],
[452,454,454,0,440,479,468,462],
[433,447,452,451,0,436,465,437],
[462,433,444,412,455,0,470,458],
[442,456,459,423,426,421,0,445],
[473,448,457,429,454,433,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,441,450,442,431,441,446],
[444,0,448,462,429,440,445,433],
[450,443,0,460,447,448,430,422],
[441,429,431,0,450,453,444,438],
[449,462,444,441,0,417,430,445],
[460,451,443,438,474,0,420,418],
[450,446,461,447,461,471,0,442],
[445,458,469,453,446,473,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,432,442,436,448,449,438],
[443,0,440,421,434,428,447,416],
[459,451,0,439,449,444,464,440],
[449,470,452,0,432,463,462,467],
[455,457,442,459,0,453,442,457],
[443,463,447,428,438,0,436,430],
[442,444,427,429,449,455,0,436],
[453,475,451,424,434,461,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,520,485,387,361,422,478,430],
[371,0,468,318,383,381,456,384],
[406,423,0,400,430,423,483,404],
[504,573,491,0,452,444,507,481],
[530,508,461,439,0,503,467,458],
[469,510,468,447,388,0,412,431],
[413,435,408,384,424,479,0,393],
[461,507,487,410,433,460,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,459,459,471,477,484,445],
[412,0,433,412,451,427,468,431],
[432,458,0,418,451,437,480,420],
[432,479,473,0,466,459,506,453],
[420,440,440,425,0,424,453,412],
[414,464,454,432,467,0,481,410],
[407,423,411,385,438,410,0,417],
[446,460,471,438,479,481,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,458,424,461,424,457,411],
[463,0,441,416,451,445,478,409],
[433,450,0,448,448,383,439,437],
[467,475,443,0,492,428,458,424],
[430,440,443,399,0,430,441,396],
[467,446,508,463,461,0,443,468],
[434,413,452,433,450,448,0,433],
[480,482,454,467,495,423,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,514,333,437,343,437,354],
[424,0,418,427,541,485,517,377],
[377,473,0,349,378,451,470,359],
[558,464,542,0,390,479,581,380],
[454,350,513,501,0,555,493,511],
[548,406,440,412,336,0,454,380],
[454,374,421,310,398,437,0,335],
[537,514,532,511,380,511,556,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,444,464,421,458,446,454],
[432,0,448,438,463,471,449,472],
[447,443,0,435,432,439,427,434],
[427,453,456,0,431,457,427,437],
[470,428,459,460,0,486,461,448],
[433,420,452,434,405,0,426,428],
[445,442,464,464,430,465,0,438],
[437,419,457,454,443,463,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,472,486,508,479,527,560],
[460,0,416,482,448,429,436,479],
[419,475,0,442,481,440,456,509],
[405,409,449,0,446,414,455,504],
[383,443,410,445,0,429,478,487],
[412,462,451,477,462,0,450,530],
[364,455,435,436,413,441,0,481],
[331,412,382,387,404,361,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,437,449,408,464,446,463],
[457,0,466,444,442,449,453,501],
[454,425,0,426,453,470,439,467],
[442,447,465,0,449,452,444,434],
[483,449,438,442,0,499,467,470],
[427,442,421,439,392,0,455,410],
[445,438,452,447,424,436,0,453],
[428,390,424,457,421,481,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,423,433,438,466,440,429],
[463,0,422,458,439,471,449,446],
[468,469,0,459,439,486,436,459],
[458,433,432,0,438,465,445,453],
[453,452,452,453,0,477,433,447],
[425,420,405,426,414,0,407,424],
[451,442,455,446,458,484,0,477],
[462,445,432,438,444,467,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,451,439,460,437,427,453],
[446,0,470,471,447,413,445,433],
[440,421,0,444,432,429,420,458],
[452,420,447,0,446,422,433,427],
[431,444,459,445,0,447,445,463],
[454,478,462,469,444,0,448,435],
[464,446,471,458,446,443,0,444],
[438,458,433,464,428,456,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,508,467,508,431,512,506],
[397,0,473,376,394,380,505,492],
[383,418,0,421,370,401,479,417],
[424,515,470,0,475,488,510,498],
[383,497,521,416,0,431,494,490],
[460,511,490,403,460,0,524,477],
[379,386,412,381,397,367,0,439],
[385,399,474,393,401,414,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,364,379,330,371,319,342],
[456,0,315,366,460,401,406,511],
[527,576,0,457,438,381,424,554],
[512,525,434,0,491,337,460,582],
[561,431,453,400,0,429,347,449],
[520,490,510,554,462,0,419,540],
[572,485,467,431,544,472,0,561],
[549,380,337,309,442,351,330,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,342,396,359,396,367,404],
[459,0,413,434,429,374,398,470],
[549,478,0,448,546,407,459,457],
[495,457,443,0,458,418,419,453],
[532,462,345,433,0,422,427,466],
[495,517,484,473,469,0,424,484],
[524,493,432,472,464,467,0,534],
[487,421,434,438,425,407,357,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,435,442,464,441,436,429],
[430,0,437,434,437,424,438,423],
[456,454,0,429,447,451,439,437],
[449,457,462,0,467,449,465,427],
[427,454,444,424,0,433,457,431],
[450,467,440,442,458,0,458,451],
[455,453,452,426,434,433,0,425],
[462,468,454,464,460,440,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,435,428,434,442,433,423],
[483,0,478,467,471,456,459,445],
[456,413,0,433,437,443,459,425],
[463,424,458,0,444,466,471,457],
[457,420,454,447,0,442,454,441],
[449,435,448,425,449,0,436,450],
[458,432,432,420,437,455,0,468],
[468,446,466,434,450,441,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,428,471,489,470,478,446],
[399,0,419,469,450,426,438,429],
[463,472,0,496,492,485,477,439],
[420,422,395,0,461,440,427,421],
[402,441,399,430,0,440,426,404],
[421,465,406,451,451,0,460,440],
[413,453,414,464,465,431,0,430],
[445,462,452,470,487,451,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,437,437,418,425,422,421],
[458,0,454,471,447,460,419,439],
[454,437,0,435,451,442,424,420],
[454,420,456,0,449,423,431,408],
[473,444,440,442,0,447,450,446],
[466,431,449,468,444,0,443,432],
[469,472,467,460,441,448,0,444],
[470,452,471,483,445,459,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,432,454,529,501,431,459],
[428,0,420,413,456,491,394,432],
[459,471,0,442,535,519,460,476],
[437,478,449,0,488,494,471,427],
[362,435,356,403,0,429,387,406],
[390,400,372,397,462,0,379,425],
[460,497,431,420,504,512,0,459],
[432,459,415,464,485,466,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,387,389,434,412,417,444],
[467,0,428,401,451,422,440,439],
[504,463,0,437,455,444,470,460],
[502,490,454,0,494,488,445,479],
[457,440,436,397,0,411,446,426],
[479,469,447,403,480,0,442,471],
[474,451,421,446,445,449,0,452],
[447,452,431,412,465,420,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,417,400,410,363,473,440],
[394,0,350,317,338,394,408,336],
[474,541,0,463,466,505,462,402],
[491,574,428,0,466,487,477,450],
[481,553,425,425,0,451,489,425],
[528,497,386,404,440,0,477,436],
[418,483,429,414,402,414,0,432],
[451,555,489,441,466,455,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,423,424,495,421,442,470],
[478,0,437,429,465,435,447,404],
[468,454,0,452,487,426,466,451],
[467,462,439,0,488,450,471,432],
[396,426,404,403,0,418,401,414],
[470,456,465,441,473,0,458,466],
[449,444,425,420,490,433,0,426],
[421,487,440,459,477,425,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,440,482,401,480,547,448],
[499,0,433,441,412,417,486,474],
[451,458,0,460,411,377,472,412],
[409,450,431,0,460,397,516,419],
[490,479,480,431,0,420,511,445],
[411,474,514,494,471,0,526,485],
[344,405,419,375,380,365,0,352],
[443,417,479,472,446,406,539,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,465,455,444,454,461,477],
[439,0,460,436,449,424,444,458],
[426,431,0,408,413,417,428,449],
[436,455,483,0,449,443,453,478],
[447,442,478,442,0,466,469,462],
[437,467,474,448,425,0,456,436],
[430,447,463,438,422,435,0,438],
[414,433,442,413,429,455,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,456,468,461,441,421,428],
[448,0,417,430,437,424,452,447],
[435,474,0,455,440,464,416,439],
[423,461,436,0,461,460,428,462],
[430,454,451,430,0,476,433,444],
[450,467,427,431,415,0,421,431],
[470,439,475,463,458,470,0,444],
[463,444,452,429,447,460,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,414,447,476,443,505,458],
[446,0,446,426,445,455,470,423],
[477,445,0,443,459,440,475,485],
[444,465,448,0,495,431,490,444],
[415,446,432,396,0,434,442,427],
[448,436,451,460,457,0,457,453],
[386,421,416,401,449,434,0,434],
[433,468,406,447,464,438,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,502,418,467,488,428,439,514],
[389,0,462,454,415,388,385,519],
[473,429,0,491,480,512,477,550],
[424,437,400,0,397,411,398,514],
[403,476,411,494,0,437,404,521],
[463,503,379,480,454,0,441,502],
[452,506,414,493,487,450,0,465],
[377,372,341,377,370,389,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,455,434,427,458,461,464],
[445,0,450,456,431,439,443,438],
[436,441,0,475,463,458,465,454],
[457,435,416,0,419,428,446,415],
[464,460,428,472,0,470,473,462],
[433,452,433,463,421,0,444,431],
[430,448,426,445,418,447,0,436],
[427,453,437,476,429,460,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,404,406,435,471,500,441],
[481,0,460,438,427,454,490,467],
[487,431,0,422,430,457,520,422],
[485,453,469,0,407,504,522,458],
[456,464,461,484,0,459,508,439],
[420,437,434,387,432,0,520,414],
[391,401,371,369,383,371,0,424],
[450,424,469,433,452,477,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,474,448,435,452,470,437],
[416,0,457,427,421,453,429,407],
[417,434,0,407,424,443,400,401],
[443,464,484,0,464,441,428,459],
[456,470,467,427,0,456,417,426],
[439,438,448,450,435,0,438,423],
[421,462,491,463,474,453,0,438],
[454,484,490,432,465,468,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,445,437,460,446,440,434],
[436,0,436,448,435,445,434,436],
[446,455,0,444,460,452,444,448],
[454,443,447,0,445,452,440,474],
[431,456,431,446,0,452,433,441],
[445,446,439,439,439,0,455,453],
[451,457,447,451,458,436,0,451],
[457,455,443,417,450,438,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,450,441,452,454,440,445],
[440,0,448,440,442,443,440,424],
[441,443,0,444,455,464,463,460],
[450,451,447,0,466,445,451,449],
[439,449,436,425,0,452,436,438],
[437,448,427,446,439,0,455,450],
[451,451,428,440,455,436,0,452],
[446,467,431,442,453,441,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,491,477,508,504,462,499],
[455,0,437,469,444,483,467,475],
[400,454,0,439,436,461,454,423],
[414,422,452,0,454,428,467,438],
[383,447,455,437,0,459,456,411],
[387,408,430,463,432,0,436,471],
[429,424,437,424,435,455,0,409],
[392,416,468,453,480,420,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,464,448,474,457,445,473],
[409,0,488,423,470,457,484,488],
[427,403,0,401,427,490,374,409],
[443,468,490,0,461,479,494,461],
[417,421,464,430,0,459,418,461],
[434,434,401,412,432,0,438,465],
[446,407,517,397,473,453,0,476],
[418,403,482,430,430,426,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,458,453,450,438,451,464],
[451,0,449,483,466,434,464,448],
[433,442,0,452,436,446,443,473],
[438,408,439,0,447,411,416,432],
[441,425,455,444,0,445,426,459],
[453,457,445,480,446,0,480,464],
[440,427,448,475,465,411,0,474],
[427,443,418,459,432,427,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,468,437,430,466,412,472],
[462,0,504,465,420,515,455,492],
[423,387,0,439,412,444,427,445],
[454,426,452,0,450,465,428,447],
[461,471,479,441,0,477,454,501],
[425,376,447,426,414,0,431,461],
[479,436,464,463,437,460,0,473],
[419,399,446,444,390,430,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,443,472,456,452,448,444],
[437,0,464,441,445,434,445,441],
[448,427,0,465,415,443,453,449],
[419,450,426,0,451,452,430,442],
[435,446,476,440,0,447,438,465],
[439,457,448,439,444,0,444,441],
[443,446,438,461,453,447,0,456],
[447,450,442,449,426,450,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,456,450,455,440,447,421],
[419,0,460,447,440,383,438,433],
[435,431,0,435,452,398,426,414],
[441,444,456,0,454,421,462,475],
[436,451,439,437,0,392,444,435],
[451,508,493,470,499,0,471,436],
[444,453,465,429,447,420,0,420],
[470,458,477,416,456,455,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,473,475,459,534,483,455],
[449,0,467,442,465,496,469,474],
[418,424,0,453,437,458,458,445],
[416,449,438,0,419,482,442,476],
[432,426,454,472,0,475,457,478],
[357,395,433,409,416,0,422,445],
[408,422,433,449,434,469,0,452],
[436,417,446,415,413,446,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,472,458,464,455,448,482],
[449,0,480,454,469,450,440,482],
[419,411,0,439,462,428,427,435],
[433,437,452,0,465,449,406,442],
[427,422,429,426,0,447,418,445],
[436,441,463,442,444,0,430,442],
[443,451,464,485,473,461,0,456],
[409,409,456,449,446,449,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,369,448,446,483,404,448],
[481,0,257,397,422,479,368,419],
[522,634,0,432,410,514,411,564],
[443,494,459,0,468,390,463,450],
[445,469,481,423,0,468,448,503],
[408,412,377,501,423,0,383,418],
[487,523,480,428,443,508,0,519],
[443,472,327,441,388,473,372,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,431,447,447,453,495,478],
[442,0,437,447,464,464,485,455],
[460,454,0,440,470,469,465,484],
[444,444,451,0,435,466,462,460],
[444,427,421,456,0,466,478,460],
[438,427,422,425,425,0,457,460],
[396,406,426,429,413,434,0,437],
[413,436,407,431,431,431,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,448,450,429,440,434,430],
[440,0,451,441,437,442,429,450],
[443,440,0,454,435,455,456,450],
[441,450,437,0,421,441,430,445],
[462,454,456,470,0,464,456,441],
[451,449,436,450,427,0,437,439],
[457,462,435,461,435,454,0,428],
[461,441,441,446,450,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,444,452,447,471,466,450],
[422,0,411,419,415,420,407,439],
[447,480,0,449,462,465,469,440],
[439,472,442,0,439,456,453,439],
[444,476,429,452,0,462,462,448],
[420,471,426,435,429,0,426,448],
[425,484,422,438,429,465,0,433],
[441,452,451,452,443,443,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,433,424,469,448,463,422],
[417,0,440,418,483,435,421,410],
[458,451,0,445,443,449,441,424],
[467,473,446,0,487,429,438,423],
[422,408,448,404,0,408,428,411],
[443,456,442,462,483,0,420,446],
[428,470,450,453,463,471,0,427],
[469,481,467,468,480,445,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,424,425,424,399,445,362],
[467,0,442,446,466,436,483,452],
[467,449,0,435,440,456,517,422],
[466,445,456,0,427,461,450,412],
[467,425,451,464,0,450,520,433],
[492,455,435,430,441,0,455,409],
[446,408,374,441,371,436,0,382],
[529,439,469,479,458,482,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,462,439,464,487,443,485],
[421,0,458,437,410,416,444,445],
[429,433,0,436,393,446,433,437],
[452,454,455,0,417,439,449,443],
[427,481,498,474,0,462,483,453],
[404,475,445,452,429,0,445,438],
[448,447,458,442,408,446,0,439],
[406,446,454,448,438,453,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,515,480,478,483,468,460],
[446,0,484,404,393,425,417,412],
[376,407,0,412,404,442,452,420],
[411,487,479,0,474,423,465,410],
[413,498,487,417,0,497,435,462],
[408,466,449,468,394,0,461,457],
[423,474,439,426,456,430,0,394],
[431,479,471,481,429,434,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,468,505,443,427,454,459],
[425,0,408,458,433,463,433,470],
[423,483,0,480,432,449,405,468],
[386,433,411,0,433,419,425,460],
[448,458,459,458,0,469,374,488],
[464,428,442,472,422,0,390,475],
[437,458,486,466,517,501,0,522],
[432,421,423,431,403,416,369,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,518,435,563,427,486,418,445],
[373,0,462,466,391,353,333,506],
[456,429,0,521,365,421,373,497],
[328,425,370,0,322,316,326,426],
[464,500,526,569,0,469,423,500],
[405,538,470,575,422,0,453,444],
[473,558,518,565,468,438,0,485],
[446,385,394,465,391,447,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,417,452,427,385,382,394],
[454,0,432,471,461,445,446,456],
[474,459,0,431,437,435,425,429],
[439,420,460,0,466,419,439,458],
[464,430,454,425,0,436,434,436],
[506,446,456,472,455,0,426,459],
[509,445,466,452,457,465,0,456],
[497,435,462,433,455,432,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,419,426,418,436,396,443],
[471,0,479,432,421,444,433,484],
[472,412,0,421,438,449,411,427],
[465,459,470,0,463,465,442,477],
[473,470,453,428,0,466,468,474],
[455,447,442,426,425,0,417,451],
[495,458,480,449,423,474,0,462],
[448,407,464,414,417,440,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,463,446,460,452,457,459],
[453,0,434,432,440,436,429,430],
[428,457,0,431,438,457,449,439],
[445,459,460,0,447,451,458,459],
[431,451,453,444,0,446,453,442],
[439,455,434,440,445,0,437,428],
[434,462,442,433,438,454,0,432],
[432,461,452,432,449,463,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,431,432,443,424,477,432],
[446,0,479,457,445,453,467,449],
[460,412,0,438,433,418,446,413],
[459,434,453,0,439,416,458,433],
[448,446,458,452,0,449,454,417],
[467,438,473,475,442,0,473,430],
[414,424,445,433,437,418,0,427],
[459,442,478,458,474,461,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,452,422,442,450,455,425],
[463,0,421,403,424,428,470,443],
[439,470,0,431,450,445,455,444],
[469,488,460,0,435,479,466,436],
[449,467,441,456,0,456,488,439],
[441,463,446,412,435,0,476,454],
[436,421,436,425,403,415,0,454],
[466,448,447,455,452,437,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,461,452,432,417,439,453],
[462,0,457,457,469,433,422,443],
[430,434,0,443,436,416,448,458],
[439,434,448,0,437,442,430,437],
[459,422,455,454,0,432,428,460],
[474,458,475,449,459,0,439,444],
[452,469,443,461,463,452,0,454],
[438,448,433,454,431,447,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,407,421,402,446,411,462],
[453,0,431,447,438,448,457,442],
[484,460,0,445,457,455,463,502],
[470,444,446,0,442,430,435,459],
[489,453,434,449,0,453,417,460],
[445,443,436,461,438,0,443,462],
[480,434,428,456,474,448,0,497],
[429,449,389,432,431,429,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,459,448,444,468,453,447],
[414,0,456,450,450,443,415,447],
[432,435,0,441,442,439,436,443],
[443,441,450,0,450,462,431,448],
[447,441,449,441,0,455,436,448],
[423,448,452,429,436,0,420,445],
[438,476,455,460,455,471,0,456],
[444,444,448,443,443,446,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,504,410,492,474,436,471],
[401,0,443,410,455,452,445,402],
[387,448,0,414,439,423,419,405],
[481,481,477,0,481,476,463,437],
[399,436,452,410,0,419,401,414],
[417,439,468,415,472,0,427,428],
[455,446,472,428,490,464,0,409],
[420,489,486,454,477,463,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,441,444,457,427,449,445],
[445,0,449,446,433,446,462,424],
[450,442,0,439,441,441,440,451],
[447,445,452,0,448,456,447,452],
[434,458,450,443,0,430,438,459],
[464,445,450,435,461,0,448,457],
[442,429,451,444,453,443,0,454],
[446,467,440,439,432,434,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,398,448,425,436,443,448],
[464,0,462,459,443,459,486,480],
[493,429,0,450,450,457,444,461],
[443,432,441,0,431,433,445,463],
[466,448,441,460,0,438,435,461],
[455,432,434,458,453,0,445,451],
[448,405,447,446,456,446,0,462],
[443,411,430,428,430,440,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,433,433,402,456,438,456],
[457,0,411,422,471,436,453,425],
[458,480,0,450,423,455,463,414],
[458,469,441,0,416,476,493,468],
[489,420,468,475,0,467,469,482],
[435,455,436,415,424,0,469,436],
[453,438,428,398,422,422,0,448],
[435,466,477,423,409,455,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,424,455,465,451,436,423],
[466,0,479,464,469,443,448,445],
[467,412,0,419,455,479,416,434],
[436,427,472,0,488,472,454,455],
[426,422,436,403,0,449,428,438],
[440,448,412,419,442,0,437,437],
[455,443,475,437,463,454,0,427],
[468,446,457,436,453,454,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,450,474,434,448,429,441],
[436,0,474,443,471,456,435,437],
[441,417,0,430,436,449,437,457],
[417,448,461,0,456,449,438,452],
[457,420,455,435,0,446,429,441],
[443,435,442,442,445,0,443,470],
[462,456,454,453,462,448,0,440],
[450,454,434,439,450,421,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,449,456,451,451,450,457],
[457,0,429,427,442,441,445,438],
[442,462,0,448,475,447,458,466],
[435,464,443,0,465,448,474,467],
[440,449,416,426,0,441,432,447],
[440,450,444,443,450,0,443,450],
[441,446,433,417,459,448,0,475],
[434,453,425,424,444,441,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,440,414,440,434,443,433],
[460,0,449,447,452,459,434,437],
[451,442,0,450,434,450,471,458],
[477,444,441,0,455,447,482,466],
[451,439,457,436,0,440,454,457],
[457,432,441,444,451,0,439,448],
[448,457,420,409,437,452,0,445],
[458,454,433,425,434,443,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,412,475,369,452,412,435],
[457,0,553,528,466,491,541,424],
[479,338,0,432,340,470,392,367],
[416,363,459,0,349,382,476,427],
[522,425,551,542,0,420,594,452],
[439,400,421,509,471,0,516,404],
[479,350,499,415,297,375,0,403],
[456,467,524,464,439,487,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,439,451,422,445,444,448],
[427,0,447,432,531,446,499,416],
[452,444,0,460,440,436,442,453],
[440,459,431,0,511,471,465,499],
[469,360,451,380,0,438,352,456],
[446,445,455,420,453,0,502,408],
[447,392,449,426,539,389,0,383],
[443,475,438,392,435,483,508,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,420,491,482,508,450,536],
[467,0,385,474,468,458,432,517],
[471,506,0,489,509,474,442,509],
[400,417,402,0,391,390,371,467],
[409,423,382,500,0,461,397,478],
[383,433,417,501,430,0,389,463],
[441,459,449,520,494,502,0,527],
[355,374,382,424,413,428,364,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,338,392,467,455,414,472,463],
[553,0,376,483,544,439,534,551],
[499,515,0,504,539,436,561,573],
[424,408,387,0,500,442,320,449],
[436,347,352,391,0,411,416,423],
[477,452,455,449,480,0,452,433],
[419,357,330,571,475,439,0,474],
[428,340,318,442,468,458,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,450,464,420,451,463,420],
[430,0,439,431,421,409,476,446],
[441,452,0,435,436,449,468,433],
[427,460,456,0,446,397,447,417],
[471,470,455,445,0,450,474,459],
[440,482,442,494,441,0,484,391],
[428,415,423,444,417,407,0,406],
[471,445,458,474,432,500,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,410,474,437,382,416,458],
[473,0,431,434,501,437,416,493],
[481,460,0,545,467,459,433,459],
[417,457,346,0,432,355,414,439],
[454,390,424,459,0,397,395,423],
[509,454,432,536,494,0,458,503],
[475,475,458,477,496,433,0,476],
[433,398,432,452,468,388,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,443,447,470,465,456,429],
[406,0,436,478,475,471,439,441],
[448,455,0,425,451,448,436,434],
[444,413,466,0,425,464,431,411],
[421,416,440,466,0,447,446,415],
[426,420,443,427,444,0,411,367],
[435,452,455,460,445,480,0,455],
[462,450,457,480,476,524,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,445,436,458,418,432,452],
[439,0,436,443,448,419,418,438],
[446,455,0,427,457,428,434,447],
[455,448,464,0,452,418,450,460],
[433,443,434,439,0,430,423,448],
[473,472,463,473,461,0,436,481],
[459,473,457,441,468,455,0,468],
[439,453,444,431,443,410,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,457,417,467,448,446,428],
[479,0,467,433,486,450,438,458],
[434,424,0,436,461,427,426,418],
[474,458,455,0,468,437,445,431],
[424,405,430,423,0,442,411,422],
[443,441,464,454,449,0,479,447],
[445,453,465,446,480,412,0,449],
[463,433,473,460,469,444,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,467,453,468,469,451,447],
[449,0,432,428,471,454,431,456],
[424,459,0,455,475,442,424,448],
[438,463,436,0,493,468,443,457],
[423,420,416,398,0,433,406,405],
[422,437,449,423,458,0,408,425],
[440,460,467,448,485,483,0,449],
[444,435,443,434,486,466,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,441,446,439,445,428,454],
[456,0,436,441,421,440,421,455],
[450,455,0,441,423,430,419,456],
[445,450,450,0,433,420,446,451],
[452,470,468,458,0,451,444,463],
[446,451,461,471,440,0,410,426],
[463,470,472,445,447,481,0,472],
[437,436,435,440,428,465,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,466,421,467,429,486,452],
[383,0,457,405,415,377,407,391],
[425,434,0,448,482,427,475,454],
[470,486,443,0,462,414,437,415],
[424,476,409,429,0,446,425,433],
[462,514,464,477,445,0,452,443],
[405,484,416,454,466,439,0,442],
[439,500,437,476,458,448,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,441,428,447,439,441,435],
[432,0,439,433,437,428,431,455],
[450,452,0,440,473,462,469,463],
[463,458,451,0,438,453,458,432],
[444,454,418,453,0,461,447,428],
[452,463,429,438,430,0,422,427],
[450,460,422,433,444,469,0,448],
[456,436,428,459,463,464,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,429,449,457,466,458,456],
[451,0,443,448,451,454,429,466],
[462,448,0,429,455,469,441,440],
[442,443,462,0,454,453,441,440],
[434,440,436,437,0,447,435,431],
[425,437,422,438,444,0,448,428],
[433,462,450,450,456,443,0,460],
[435,425,451,451,460,463,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,426,473,438,439,467,465],
[463,0,452,470,453,412,451,456],
[465,439,0,463,481,448,438,488],
[418,421,428,0,453,413,441,458],
[453,438,410,438,0,434,417,441],
[452,479,443,478,457,0,442,465],
[424,440,453,450,474,449,0,448],
[426,435,403,433,450,426,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,413,451,451,438,470,425],
[469,0,407,438,446,451,496,457],
[478,484,0,482,495,437,487,476],
[440,453,409,0,433,417,481,484],
[440,445,396,458,0,433,452,462],
[453,440,454,474,458,0,499,486],
[421,395,404,410,439,392,0,473],
[466,434,415,407,429,405,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,418,409,420,427,428,426],
[424,0,528,472,478,397,437,486],
[473,363,0,348,414,357,321,394],
[482,419,543,0,426,442,397,418],
[471,413,477,465,0,344,382,298],
[464,494,534,449,547,0,459,427],
[463,454,570,494,509,432,0,444],
[465,405,497,473,593,464,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,524,495,421,452,456,421],
[448,0,525,448,441,432,437,423],
[367,366,0,324,389,388,390,339],
[396,443,567,0,508,470,488,391],
[470,450,502,383,0,458,505,481],
[439,459,503,421,433,0,431,400],
[435,454,501,403,386,460,0,412],
[470,468,552,500,410,491,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,462,428,434,475,399,464],
[442,0,489,483,441,460,446,463],
[429,402,0,423,405,482,402,407],
[463,408,468,0,392,447,406,447],
[457,450,486,499,0,493,438,485],
[416,431,409,444,398,0,398,424],
[492,445,489,485,453,493,0,501],
[427,428,484,444,406,467,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,451,441,480,455,457,433],
[446,0,435,442,442,422,446,445],
[440,456,0,440,430,442,475,448],
[450,449,451,0,455,436,474,440],
[411,449,461,436,0,425,476,427],
[436,469,449,455,466,0,465,436],
[434,445,416,417,415,426,0,451],
[458,446,443,451,464,455,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,429,445,449,446,446,442],
[466,0,452,436,439,467,435,464],
[462,439,0,422,438,445,473,455],
[446,455,469,0,436,463,447,458],
[442,452,453,455,0,445,430,466],
[445,424,446,428,446,0,437,453],
[445,456,418,444,461,454,0,441],
[449,427,436,433,425,438,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,444,460,457,453,454,431],
[438,0,465,456,455,447,445,440],
[447,426,0,448,432,440,438,427],
[431,435,443,0,446,435,445,436],
[434,436,459,445,0,440,443,439],
[438,444,451,456,451,0,444,428],
[437,446,453,446,448,447,0,454],
[460,451,464,455,452,463,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,470,468,443,459,482,446],
[440,0,486,457,465,451,480,454],
[421,405,0,453,418,427,432,390],
[423,434,438,0,412,444,444,436],
[448,426,473,479,0,455,460,463],
[432,440,464,447,436,0,443,443],
[409,411,459,447,431,448,0,435],
[445,437,501,455,428,448,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,442,412,423,364,387,418],
[472,0,374,449,461,421,466,431],
[449,517,0,457,454,446,410,418],
[479,442,434,0,524,448,469,447],
[468,430,437,367,0,322,381,442],
[527,470,445,443,569,0,481,508],
[504,425,481,422,510,410,0,467],
[473,460,473,444,449,383,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,451,422,432,464,426,442],
[431,0,448,446,446,467,422,421],
[440,443,0,432,450,466,458,450],
[469,445,459,0,450,492,438,455],
[459,445,441,441,0,440,428,439],
[427,424,425,399,451,0,407,444],
[465,469,433,453,463,484,0,444],
[449,470,441,436,452,447,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,409,420,427,414,438,433],
[479,0,431,479,461,481,488,444],
[482,460,0,455,467,459,534,441],
[471,412,436,0,441,420,447,439],
[464,430,424,450,0,465,489,421],
[477,410,432,471,426,0,484,448],
[453,403,357,444,402,407,0,421],
[458,447,450,452,470,443,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,393,427,372,416,398,417],
[465,0,462,439,425,436,394,419],
[498,429,0,475,409,462,442,427],
[464,452,416,0,454,496,418,451],
[519,466,482,437,0,477,438,452],
[475,455,429,395,414,0,451,439],
[493,497,449,473,453,440,0,430],
[474,472,464,440,439,452,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,444,439,430,462,440,446],
[437,0,441,424,447,438,429,445],
[447,450,0,436,441,453,447,468],
[452,467,455,0,442,456,458,447],
[461,444,450,449,0,469,448,499],
[429,453,438,435,422,0,447,443],
[451,462,444,433,443,444,0,438],
[445,446,423,444,392,448,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,446,465,448,442,428,480],
[459,0,437,468,454,436,447,473],
[445,454,0,465,484,458,451,474],
[426,423,426,0,419,440,419,429],
[443,437,407,472,0,456,443,467],
[449,455,433,451,435,0,451,463],
[463,444,440,472,448,440,0,471],
[411,418,417,462,424,428,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,438,459,445,448,452,464],
[441,0,455,466,446,457,452,447],
[453,436,0,460,437,435,443,440],
[432,425,431,0,420,432,450,413],
[446,445,454,471,0,471,451,453],
[443,434,456,459,420,0,461,422],
[439,439,448,441,440,430,0,443],
[427,444,451,478,438,469,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,440,447,453,432,445,433],
[445,0,457,411,445,449,433,441],
[451,434,0,423,436,417,421,419],
[444,480,468,0,454,460,460,446],
[438,446,455,437,0,435,443,439],
[459,442,474,431,456,0,452,435],
[446,458,470,431,448,439,0,440],
[458,450,472,445,452,456,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,476,432,470,424,431,481],
[404,0,436,409,400,407,400,428],
[415,455,0,420,401,418,425,440],
[459,482,471,0,433,474,434,433],
[421,491,490,458,0,431,438,468],
[467,484,473,417,460,0,461,450],
[460,491,466,457,453,430,0,476],
[410,463,451,458,423,441,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,512,433,482,507,455,491],
[403,0,444,419,435,436,442,428],
[379,447,0,427,435,468,403,410],
[458,472,464,0,484,488,441,491],
[409,456,456,407,0,446,426,458],
[384,455,423,403,445,0,422,463],
[436,449,488,450,465,469,0,451],
[400,463,481,400,433,428,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,432,438,435,464,502,441],
[476,0,451,460,411,460,458,442],
[459,440,0,470,455,453,496,458],
[453,431,421,0,441,444,489,431],
[456,480,436,450,0,454,521,470],
[427,431,438,447,437,0,489,447],
[389,433,395,402,370,402,0,411],
[450,449,433,460,421,444,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,468,443,444,451,433,459],
[432,0,443,429,442,421,431,421],
[423,448,0,444,432,439,420,439],
[448,462,447,0,439,451,451,441],
[447,449,459,452,0,451,433,436],
[440,470,452,440,440,0,438,446],
[458,460,471,440,458,453,0,469],
[432,470,452,450,455,445,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,448,481,432,478,440,446],
[407,0,447,407,384,419,416,389],
[443,444,0,429,396,420,451,434],
[410,484,462,0,411,465,418,404],
[459,507,495,480,0,493,457,422],
[413,472,471,426,398,0,414,442],
[451,475,440,473,434,477,0,450],
[445,502,457,487,469,449,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,450,458,430,458,428,446],
[422,0,390,403,444,407,395,416],
[441,501,0,470,484,444,442,389],
[433,488,421,0,409,420,401,369],
[461,447,407,482,0,425,397,423],
[433,484,447,471,466,0,415,412],
[463,496,449,490,494,476,0,441],
[445,475,502,522,468,479,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,465,432,455,469,451,477],
[428,0,448,435,420,468,449,437],
[426,443,0,427,464,454,435,453],
[459,456,464,0,447,468,438,456],
[436,471,427,444,0,476,451,468],
[422,423,437,423,415,0,454,439],
[440,442,456,453,440,437,0,479],
[414,454,438,435,423,452,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,459,483,433,467,448,443],
[441,0,454,477,471,445,481,469],
[432,437,0,469,435,418,478,430],
[408,414,422,0,420,442,410,426],
[458,420,456,471,0,450,465,426],
[424,446,473,449,441,0,449,455],
[443,410,413,481,426,442,0,426],
[448,422,461,465,465,436,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,531,474,511,392,414,483],
[423,0,460,571,495,344,464,500],
[360,431,0,476,477,254,431,433],
[417,320,415,0,501,362,359,371],
[380,396,414,390,0,284,305,262],
[499,547,637,529,607,0,390,601],
[477,427,460,532,586,501,0,580],
[408,391,458,520,629,290,311,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,430,466,416,428,428,442],
[492,0,452,500,465,463,485,418],
[461,439,0,525,457,446,458,468],
[425,391,366,0,352,401,384,388],
[475,426,434,539,0,430,446,439],
[463,428,445,490,461,0,448,469],
[463,406,433,507,445,443,0,432],
[449,473,423,503,452,422,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,444,434,450,449,487,436],
[427,0,466,464,493,448,489,456],
[447,425,0,435,460,437,451,448],
[457,427,456,0,439,461,480,456],
[441,398,431,452,0,416,421,398],
[442,443,454,430,475,0,466,414],
[404,402,440,411,470,425,0,425],
[455,435,443,435,493,477,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,439,451,456,431,454,437],
[422,0,449,464,440,417,427,462],
[452,442,0,446,448,438,436,449],
[440,427,445,0,436,435,439,425],
[435,451,443,455,0,447,452,455],
[460,474,453,456,444,0,462,459],
[437,464,455,452,439,429,0,461],
[454,429,442,466,436,432,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,411,458,470,478,454,456],
[444,0,429,436,459,463,465,425],
[480,462,0,465,455,502,474,440],
[433,455,426,0,439,459,448,441],
[421,432,436,452,0,496,453,429],
[413,428,389,432,395,0,444,384],
[437,426,417,443,438,447,0,413],
[435,466,451,450,462,507,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,441,455,483,467,456,458],
[433,0,449,468,471,454,466,434],
[450,442,0,452,493,453,471,446],
[436,423,439,0,479,442,452,459],
[408,420,398,412,0,417,425,409],
[424,437,438,449,474,0,460,465],
[435,425,420,439,466,431,0,413],
[433,457,445,432,482,426,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,473,461,444,467,452,463],
[419,0,440,432,410,444,441,451],
[418,451,0,411,423,436,427,445],
[430,459,480,0,453,433,462,450],
[447,481,468,438,0,467,482,465],
[424,447,455,458,424,0,441,446],
[439,450,464,429,409,450,0,459],
[428,440,446,441,426,445,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,417,396,419,440,408,428],
[464,0,444,402,430,431,425,423],
[474,447,0,441,419,436,426,445],
[495,489,450,0,460,443,484,466],
[472,461,472,431,0,439,454,474],
[451,460,455,448,452,0,445,454],
[483,466,465,407,437,446,0,450],
[463,468,446,425,417,437,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,451,422,437,421,460,440],
[427,0,467,440,461,447,450,443],
[440,424,0,424,434,424,431,412],
[469,451,467,0,436,442,453,438],
[454,430,457,455,0,446,450,465],
[470,444,467,449,445,0,455,450],
[431,441,460,438,441,436,0,402],
[451,448,479,453,426,441,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,441,447,436,446,435,447],
[457,0,444,450,447,452,420,447],
[450,447,0,429,454,464,453,443],
[444,441,462,0,461,444,456,464],
[455,444,437,430,0,458,448,428],
[445,439,427,447,433,0,431,433],
[456,471,438,435,443,460,0,452],
[444,444,448,427,463,458,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,465,441,451,456,431,443],
[440,0,447,459,422,461,431,434],
[426,444,0,418,424,453,422,419],
[450,432,473,0,429,464,433,475],
[440,469,467,462,0,457,449,452],
[435,430,438,427,434,0,420,430],
[460,460,469,458,442,471,0,473],
[448,457,472,416,439,461,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,452,457,455,474,424,452],
[466,0,441,443,494,417,448,459],
[439,450,0,454,490,447,430,474],
[434,448,437,0,455,417,428,460],
[436,397,401,436,0,424,425,432],
[417,474,444,474,467,0,451,434],
[467,443,461,463,466,440,0,473],
[439,432,417,431,459,457,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,482,495,456,481,466,471],
[452,0,466,439,441,439,464,455],
[409,425,0,442,436,436,426,453],
[396,452,449,0,427,460,439,414],
[435,450,455,464,0,461,455,447],
[410,452,455,431,430,0,452,408],
[425,427,465,452,436,439,0,463],
[420,436,438,477,444,483,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,423,443,445,445,404,451],
[441,0,424,459,480,433,424,465],
[468,467,0,482,479,442,460,478],
[448,432,409,0,440,426,433,427],
[446,411,412,451,0,411,429,441],
[446,458,449,465,480,0,444,455],
[487,467,431,458,462,447,0,467],
[440,426,413,464,450,436,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,457,435,442,438,464,422],
[421,0,424,424,440,406,451,427],
[434,467,0,447,432,433,481,420],
[456,467,444,0,450,452,476,440],
[449,451,459,441,0,431,472,431],
[453,485,458,439,460,0,459,469],
[427,440,410,415,419,432,0,422],
[469,464,471,451,460,422,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,451,462,458,445,451,462],
[426,0,454,478,408,448,427,424],
[440,437,0,457,411,446,428,427],
[429,413,434,0,415,416,425,403],
[433,483,480,476,0,461,455,457],
[446,443,445,475,430,0,453,445],
[440,464,463,466,436,438,0,433],
[429,467,464,488,434,446,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,406,407,471,412,419,398],
[416,0,417,400,432,377,351,414],
[485,474,0,509,501,404,394,467],
[484,491,382,0,495,477,473,445],
[420,459,390,396,0,389,358,410],
[479,514,487,414,502,0,400,466],
[472,540,497,418,533,491,0,479],
[493,477,424,446,481,425,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,468,483,473,439,449,451],
[408,0,449,424,439,409,402,395],
[423,442,0,428,433,447,434,418],
[408,467,463,0,448,426,416,441],
[418,452,458,443,0,447,433,434],
[452,482,444,465,444,0,429,436],
[442,489,457,475,458,462,0,442],
[440,496,473,450,457,455,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,487,429,439,387,426,439],
[451,0,439,389,410,409,412,429],
[404,452,0,408,426,395,406,395],
[462,502,483,0,378,434,469,450],
[452,481,465,513,0,425,451,443],
[504,482,496,457,466,0,428,465],
[465,479,485,422,440,463,0,459],
[452,462,496,441,448,426,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,421,449,433,463,468,424],
[456,0,443,465,410,450,457,465],
[470,448,0,451,447,429,483,463],
[442,426,440,0,436,428,473,444],
[458,481,444,455,0,444,469,442],
[428,441,462,463,447,0,460,450],
[423,434,408,418,422,431,0,422],
[467,426,428,447,449,441,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,451,481,450,399,431,417],
[412,0,422,438,427,413,411,413],
[440,469,0,462,438,430,461,447],
[410,453,429,0,384,428,396,435],
[441,464,453,507,0,446,456,455],
[492,478,461,463,445,0,476,482],
[460,480,430,495,435,415,0,437],
[474,478,444,456,436,409,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,436,447,438,443,445,465],
[417,0,424,407,430,423,424,428],
[455,467,0,445,443,434,449,466],
[444,484,446,0,459,449,436,463],
[453,461,448,432,0,454,439,459],
[448,468,457,442,437,0,445,456],
[446,467,442,455,452,446,0,450],
[426,463,425,428,432,435,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,453,493,440,442,435,438],
[414,0,439,452,430,422,419,417],
[438,452,0,472,444,439,413,441],
[398,439,419,0,411,398,413,418],
[451,461,447,480,0,437,419,434],
[449,469,452,493,454,0,441,446],
[456,472,478,478,472,450,0,443],
[453,474,450,473,457,445,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,445,445,430,436,422,435],
[461,0,441,452,444,472,450,464],
[446,450,0,450,441,457,422,432],
[446,439,441,0,433,471,423,414],
[461,447,450,458,0,460,448,423],
[455,419,434,420,431,0,433,432],
[469,441,469,468,443,458,0,440],
[456,427,459,477,468,459,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,462,419,480,370,477,446],
[388,0,477,410,550,442,447,445],
[429,414,0,325,410,489,412,382],
[472,481,566,0,556,495,439,513],
[411,341,481,335,0,356,360,334],
[521,449,402,396,535,0,410,481],
[414,444,479,452,531,481,0,391],
[445,446,509,378,557,410,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,487,424,415,428,426,431],
[466,0,475,449,419,472,454,444],
[404,416,0,398,409,415,412,425],
[467,442,493,0,448,462,439,469],
[476,472,482,443,0,455,478,453],
[463,419,476,429,436,0,439,426],
[465,437,479,452,413,452,0,446],
[460,447,466,422,438,465,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,413,479,451,425,423,451],
[430,0,435,473,450,424,440,425],
[478,456,0,462,456,435,455,451],
[412,418,429,0,418,410,399,421],
[440,441,435,473,0,435,444,445],
[466,467,456,481,456,0,428,424],
[468,451,436,492,447,463,0,432],
[440,466,440,470,446,467,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,458,437,454,440,451,451],
[427,0,430,427,434,451,442,444],
[433,461,0,442,463,444,439,466],
[454,464,449,0,477,454,442,458],
[437,457,428,414,0,445,414,432],
[451,440,447,437,446,0,437,438],
[440,449,452,449,477,454,0,470],
[440,447,425,433,459,453,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,461,459,430,455,429,435],
[418,0,404,417,421,404,446,439],
[430,487,0,439,428,435,436,451],
[432,474,452,0,449,415,413,425],
[461,470,463,442,0,450,426,448],
[436,487,456,476,441,0,428,453],
[462,445,455,478,465,463,0,450],
[456,452,440,466,443,438,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,448,453,519,460,451,389],
[483,0,472,433,473,483,440,425],
[443,419,0,396,418,459,406,393],
[438,458,495,0,492,481,464,470],
[372,418,473,399,0,476,413,395],
[431,408,432,410,415,0,437,412],
[440,451,485,427,478,454,0,441],
[502,466,498,421,496,479,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,387,444,402,419,432,406],
[467,0,413,449,431,430,434,429],
[504,478,0,443,448,454,481,466],
[447,442,448,0,438,430,443,450],
[489,460,443,453,0,450,449,462],
[472,461,437,461,441,0,468,452],
[459,457,410,448,442,423,0,420],
[485,462,425,441,429,439,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,401,450,451,464,458,433],
[443,0,470,430,469,457,417,440],
[490,421,0,464,467,464,462,480],
[441,461,427,0,414,435,430,464],
[440,422,424,477,0,447,470,501],
[427,434,427,456,444,0,428,482],
[433,474,429,461,421,463,0,474],
[458,451,411,427,390,409,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,451,463,463,459,451,469],
[450,0,431,453,454,447,442,464],
[440,460,0,450,451,441,446,459],
[428,438,441,0,449,449,442,452],
[428,437,440,442,0,441,436,464],
[432,444,450,442,450,0,432,439],
[440,449,445,449,455,459,0,459],
[422,427,432,439,427,452,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,423,427,490,382,419,391],
[468,0,424,447,479,442,440,413],
[468,467,0,452,465,412,444,459],
[464,444,439,0,465,495,516,497],
[401,412,426,426,0,367,438,438],
[509,449,479,396,524,0,493,471],
[472,451,447,375,453,398,0,405],
[500,478,432,394,453,420,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,357,427,426,442,460,459,423],
[534,0,494,511,538,547,499,403],
[464,397,0,476,472,393,458,388],
[465,380,415,0,483,432,448,447],
[449,353,419,408,0,426,402,384],
[431,344,498,459,465,0,401,484],
[432,392,433,443,489,490,0,404],
[468,488,503,444,507,407,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,473,458,447,428,418,445],
[443,0,465,463,444,457,438,447],
[418,426,0,434,434,435,396,404],
[433,428,457,0,448,449,418,423],
[444,447,457,443,0,446,416,415],
[463,434,456,442,445,0,421,419],
[473,453,495,473,475,470,0,427],
[446,444,487,468,476,472,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,417,445,468,398,448,409],
[475,0,410,429,473,410,482,436],
[474,481,0,452,473,448,476,443],
[446,462,439,0,461,459,490,447],
[423,418,418,430,0,397,438,408],
[493,481,443,432,494,0,497,460],
[443,409,415,401,453,394,0,420],
[482,455,448,444,483,431,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,399,436,387,421,394,413],
[481,0,453,464,443,446,482,459],
[492,438,0,459,462,445,488,494],
[455,427,432,0,393,403,455,438],
[504,448,429,498,0,436,479,422],
[470,445,446,488,455,0,444,487],
[497,409,403,436,412,447,0,429],
[478,432,397,453,469,404,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,446,440,439,466,434,450],
[467,0,455,425,430,464,452,452],
[445,436,0,469,436,467,453,475],
[451,466,422,0,453,481,447,462],
[452,461,455,438,0,447,453,453],
[425,427,424,410,444,0,424,437],
[457,439,438,444,438,467,0,442],
[441,439,416,429,438,454,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,427,492,472,431,483,481],
[390,0,432,465,387,458,498,504],
[464,459,0,544,419,518,511,502],
[399,426,347,0,416,448,501,436],
[419,504,472,475,0,469,521,492],
[460,433,373,443,422,0,445,449],
[408,393,380,390,370,446,0,405],
[410,387,389,455,399,442,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,463,470,432,439,451,472],
[422,0,424,447,403,439,403,463],
[428,467,0,488,428,462,439,464],
[421,444,403,0,394,421,436,460],
[459,488,463,497,0,456,442,471],
[452,452,429,470,435,0,468,468],
[440,488,452,455,449,423,0,481],
[419,428,427,431,420,423,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,457,491,458,431,476,426],
[397,0,437,428,377,355,429,400],
[434,454,0,387,413,399,415,367],
[400,463,504,0,462,437,455,431],
[433,514,478,429,0,451,436,426],
[460,536,492,454,440,0,408,489],
[415,462,476,436,455,483,0,450],
[465,491,524,460,465,402,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,436,418,388,352,405,384],
[487,0,438,463,493,482,437,463],
[455,453,0,435,430,471,448,452],
[473,428,456,0,421,488,460,437],
[503,398,461,470,0,494,415,466],
[539,409,420,403,397,0,422,462],
[486,454,443,431,476,469,0,470],
[507,428,439,454,425,429,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,469,451,477,476,469,444],
[416,0,438,429,444,462,457,443],
[422,453,0,459,442,476,472,489],
[440,462,432,0,467,457,448,450],
[414,447,449,424,0,471,426,448],
[415,429,415,434,420,0,454,450],
[422,434,419,443,465,437,0,436],
[447,448,402,441,443,441,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,475,478,489,469,502,438],
[392,0,467,427,440,441,461,439],
[416,424,0,427,454,429,420,428],
[413,464,464,0,524,497,424,476],
[402,451,437,367,0,424,433,442],
[422,450,462,394,467,0,446,438],
[389,430,471,467,458,445,0,416],
[453,452,463,415,449,453,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,431,449,427,437,436,435],
[446,0,435,447,423,444,450,461],
[460,456,0,430,423,425,434,418],
[442,444,461,0,425,442,435,431],
[464,468,468,466,0,462,458,441],
[454,447,466,449,429,0,465,450],
[455,441,457,456,433,426,0,448],
[456,430,473,460,450,441,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,422,415,460,519,423,491],
[443,0,407,449,468,492,402,508],
[469,484,0,452,440,466,444,504],
[476,442,439,0,455,481,434,489],
[431,423,451,436,0,472,479,476],
[372,399,425,410,419,0,364,457],
[468,489,447,457,412,527,0,504],
[400,383,387,402,415,434,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,430,444,447,451,446,447],
[445,0,431,446,439,440,457,446],
[461,460,0,455,441,462,440,454],
[447,445,436,0,442,433,436,420],
[444,452,450,449,0,439,434,450],
[440,451,429,458,452,0,443,433],
[445,434,451,455,457,448,0,448],
[444,445,437,471,441,458,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,465,456,453,447,439,455],
[437,0,452,438,439,439,453,436],
[426,439,0,421,438,460,436,432],
[435,453,470,0,440,433,438,433],
[438,452,453,451,0,458,444,439],
[444,452,431,458,433,0,452,440],
[452,438,455,453,447,439,0,438],
[436,455,459,458,452,451,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,460,437,432,442,435,461],
[451,0,437,446,442,449,451,457],
[431,454,0,453,422,450,448,464],
[454,445,438,0,443,432,443,457],
[459,449,469,448,0,450,439,454],
[449,442,441,459,441,0,445,453],
[456,440,443,448,452,446,0,484],
[430,434,427,434,437,438,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,460,453,458,469,455,436],
[416,0,439,440,446,428,445,425],
[431,452,0,426,444,436,455,437],
[438,451,465,0,462,460,468,452],
[433,445,447,429,0,436,449,428],
[422,463,455,431,455,0,469,433],
[436,446,436,423,442,422,0,425],
[455,466,454,439,463,458,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,433,394,444,431,392,424],
[493,0,485,452,457,463,438,485],
[458,406,0,424,434,425,423,435],
[497,439,467,0,450,451,458,480],
[447,434,457,441,0,439,437,485],
[460,428,466,440,452,0,425,490],
[499,453,468,433,454,466,0,470],
[467,406,456,411,406,401,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,485,475,447,459,458,448],
[446,0,444,439,418,441,448,439],
[406,447,0,431,421,440,424,433],
[416,452,460,0,416,438,459,433],
[444,473,470,475,0,486,471,471],
[432,450,451,453,405,0,436,434],
[433,443,467,432,420,455,0,423],
[443,452,458,458,420,457,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,420,445,431,435,420,433],
[447,0,420,450,459,450,427,423],
[471,471,0,477,436,456,463,449],
[446,441,414,0,433,421,431,435],
[460,432,455,458,0,425,440,417],
[456,441,435,470,466,0,449,443],
[471,464,428,460,451,442,0,431],
[458,468,442,456,474,448,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,414,439,412,448,428,425],
[451,0,446,457,441,432,447,437],
[477,445,0,463,445,441,451,410],
[452,434,428,0,428,452,432,418],
[479,450,446,463,0,445,459,448],
[443,459,450,439,446,0,428,418],
[463,444,440,459,432,463,0,440],
[466,454,481,473,443,473,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,427,457,460,419,443,410],
[458,0,446,466,428,433,448,455],
[464,445,0,489,459,450,460,459],
[434,425,402,0,405,406,428,416],
[431,463,432,486,0,435,422,430],
[472,458,441,485,456,0,463,442],
[448,443,431,463,469,428,0,428],
[481,436,432,475,461,449,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,450,467,454,451,443,449],
[437,0,450,462,423,442,432,445],
[441,441,0,468,435,448,446,441],
[424,429,423,0,410,437,429,436],
[437,468,456,481,0,473,463,471],
[440,449,443,454,418,0,424,449],
[448,459,445,462,428,467,0,454],
[442,446,450,455,420,442,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,462,454,445,479,481,426],
[443,0,469,449,455,472,496,453],
[429,422,0,466,426,468,485,444],
[437,442,425,0,439,462,470,422],
[446,436,465,452,0,500,466,436],
[412,419,423,429,391,0,466,414],
[410,395,406,421,425,425,0,405],
[465,438,447,469,455,477,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,445,483,458,456,416,495],
[461,0,433,458,434,453,458,467],
[446,458,0,483,455,450,423,468],
[408,433,408,0,433,435,433,458],
[433,457,436,458,0,463,427,482],
[435,438,441,456,428,0,432,440],
[475,433,468,458,464,459,0,450],
[396,424,423,433,409,451,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,447,459,454,441,425,454],
[437,0,428,447,451,441,449,441],
[444,463,0,456,463,435,422,460],
[432,444,435,0,440,428,427,405],
[437,440,428,451,0,426,410,420],
[450,450,456,463,465,0,457,444],
[466,442,469,464,481,434,0,439],
[437,450,431,486,471,447,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,454,446,458,427,452,480],
[443,0,428,451,446,426,449,452],
[437,463,0,460,470,445,447,464],
[445,440,431,0,454,446,455,462],
[433,445,421,437,0,463,437,457],
[464,465,446,445,428,0,435,455],
[439,442,444,436,454,456,0,461],
[411,439,427,429,434,436,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,436,438,431,433,424,447],
[461,0,449,456,415,449,456,443],
[455,442,0,426,419,461,428,453],
[453,435,465,0,435,447,442,460],
[460,476,472,456,0,452,439,445],
[458,442,430,444,439,0,437,444],
[467,435,463,449,452,454,0,445],
[444,448,438,431,446,447,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,427,417,435,421,442,431],
[481,0,460,449,452,439,477,449],
[464,431,0,442,451,441,466,449],
[474,442,449,0,436,444,459,451],
[456,439,440,455,0,452,471,449],
[470,452,450,447,439,0,465,459],
[449,414,425,432,420,426,0,424],
[460,442,442,440,442,432,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,412,432,412,489,394,402],
[499,0,394,443,435,458,449,421],
[479,497,0,503,474,490,445,510],
[459,448,388,0,455,439,431,442],
[479,456,417,436,0,480,429,436],
[402,433,401,452,411,0,409,447],
[497,442,446,460,462,482,0,472],
[489,470,381,449,455,444,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,453,436,400,452,437,488],
[466,0,437,434,404,449,463,477],
[438,454,0,434,438,437,444,472],
[455,457,457,0,423,441,482,473],
[491,487,453,468,0,424,474,519],
[439,442,454,450,467,0,467,502],
[454,428,447,409,417,424,0,475],
[403,414,419,418,372,389,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,434,463,426,400,450,454],
[428,0,401,401,422,392,423,419],
[457,490,0,447,456,446,422,425],
[428,490,444,0,430,404,441,428],
[465,469,435,461,0,422,427,424],
[491,499,445,487,469,0,484,469],
[441,468,469,450,464,407,0,463],
[437,472,466,463,467,422,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,469,457,430,482,493,412],
[491,0,446,440,353,512,475,403],
[422,445,0,434,358,476,441,460],
[434,451,457,0,400,450,486,472],
[461,538,533,491,0,512,562,404],
[409,379,415,441,379,0,492,472],
[398,416,450,405,329,399,0,351],
[479,488,431,419,487,419,540,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,410,399,442,377,434,429],
[451,0,408,415,440,416,447,454],
[481,483,0,439,479,462,499,468],
[492,476,452,0,485,431,487,467],
[449,451,412,406,0,386,440,452],
[514,475,429,460,505,0,487,486],
[457,444,392,404,451,404,0,431],
[462,437,423,424,439,405,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,464,460,422,441,443,462],
[465,0,463,423,477,476,491,487],
[427,428,0,433,439,483,506,471],
[431,468,458,0,446,457,474,461],
[469,414,452,445,0,468,508,479],
[450,415,408,434,423,0,477,469],
[448,400,385,417,383,414,0,413],
[429,404,420,430,412,422,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,563,518,561,512,568,399,507],
[328,0,535,440,637,563,397,411],
[373,356,0,367,375,373,244,373],
[330,451,524,0,554,564,469,439],
[379,254,516,337,0,523,362,351],
[323,328,518,327,368,0,295,371],
[492,494,647,422,529,596,0,502],
[384,480,518,452,540,520,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,437,447,467,450,455,439],
[458,0,437,458,449,465,470,437],
[454,454,0,467,472,474,472,438],
[444,433,424,0,444,430,450,446],
[424,442,419,447,0,439,468,440],
[441,426,417,461,452,0,480,462],
[436,421,419,441,423,411,0,460],
[452,454,453,445,451,429,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,175,374,319,347,618,474],
[455,0,175,482,319,347,491,347],
[716,716,0,647,417,503,666,774],
[517,409,244,0,553,244,474,474],
[572,572,474,338,0,338,357,465],
[544,544,388,647,553,0,501,618],
[273,400,225,417,534,390,0,390],
[417,544,117,417,426,273,501,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,474,462,414,470,458,472],
[424,0,447,409,494,510,490,514],
[417,444,0,376,418,414,464,431],
[429,482,515,0,464,443,454,465],
[477,397,473,427,0,471,510,496],
[421,381,477,448,420,0,450,393],
[433,401,427,437,381,441,0,439],
[419,377,460,426,395,498,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,420,418,458,398,453,455],
[444,0,408,423,454,437,414,439],
[471,483,0,477,518,433,445,466],
[473,468,414,0,490,463,445,451],
[433,437,373,401,0,408,418,444],
[493,454,458,428,483,0,423,441],
[438,477,446,446,473,468,0,471],
[436,452,425,440,447,450,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,468,516,452,420,409,413],
[489,0,487,551,529,523,566,427],
[423,404,0,422,464,358,531,414],
[375,340,469,0,442,387,507,340],
[439,362,427,449,0,407,540,399],
[471,368,533,504,484,0,535,451],
[482,325,360,384,351,356,0,296],
[478,464,477,551,492,440,595,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,252,601,499,521,389,680,352],
[639,0,595,561,600,555,701,438],
[290,296,0,343,491,189,426,342],
[392,330,548,0,553,343,479,356],
[370,291,400,338,0,337,403,299],
[502,336,702,548,554,0,665,449],
[211,190,465,412,488,226,0,202],
[539,453,549,535,592,442,689,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,439,433,438,425,419,442],
[471,0,457,441,449,461,438,441],
[452,434,0,435,427,447,425,462],
[458,450,456,0,447,448,432,449],
[453,442,464,444,0,444,451,440],
[466,430,444,443,447,0,439,456],
[472,453,466,459,440,452,0,475],
[449,450,429,442,451,435,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,433,430,471,455,460,457],
[464,0,447,441,454,457,467,464],
[458,444,0,452,475,447,438,458],
[461,450,439,0,463,448,461,467],
[420,437,416,428,0,460,455,445],
[436,434,444,443,431,0,445,460],
[431,424,453,430,436,446,0,446],
[434,427,433,424,446,431,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,466,415,447,463,466,509],
[454,0,444,435,447,431,403,464],
[425,447,0,452,414,479,419,451],
[476,456,439,0,468,427,438,458],
[444,444,477,423,0,435,430,476],
[428,460,412,464,456,0,414,467],
[425,488,472,453,461,477,0,463],
[382,427,440,433,415,424,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,447,445,450,467,444,462],
[432,0,421,429,430,450,464,453],
[444,470,0,456,464,478,465,474],
[446,462,435,0,484,473,486,449],
[441,461,427,407,0,444,445,443],
[424,441,413,418,447,0,432,435],
[447,427,426,405,446,459,0,440],
[429,438,417,442,448,456,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,446,471,466,461,450,437],
[429,0,450,471,456,440,424,436],
[445,441,0,448,438,441,414,440],
[420,420,443,0,453,459,433,434],
[425,435,453,438,0,440,423,418],
[430,451,450,432,451,0,428,443],
[441,467,477,458,468,463,0,458],
[454,455,451,457,473,448,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,469,397,438,350,392,444],
[484,0,500,417,472,447,386,437],
[422,391,0,337,352,368,441,390],
[494,474,554,0,466,433,471,437],
[453,419,539,425,0,404,461,488],
[541,444,523,458,487,0,467,474],
[499,505,450,420,430,424,0,489],
[447,454,501,454,403,417,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,351,472,460,412,422,379,441],
[540,0,441,486,452,446,436,417],
[419,450,0,459,368,477,418,419],
[431,405,432,0,362,408,405,484],
[479,439,523,529,0,401,446,455],
[469,445,414,483,490,0,431,435],
[512,455,473,486,445,460,0,499],
[450,474,472,407,436,456,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,456,465,433,439,435,444],
[462,0,457,478,446,436,429,457],
[435,434,0,460,418,435,425,435],
[426,413,431,0,426,434,422,427],
[458,445,473,465,0,436,453,453],
[452,455,456,457,455,0,411,443],
[456,462,466,469,438,480,0,469],
[447,434,456,464,438,448,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,478,467,462,428,470,470],
[435,0,457,450,438,432,442,446],
[413,434,0,456,455,417,437,450],
[424,441,435,0,419,415,421,439],
[429,453,436,472,0,447,425,471],
[463,459,474,476,444,0,454,465],
[421,449,454,470,466,437,0,460],
[421,445,441,452,420,426,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,454,447,436,405,418,426],
[437,0,393,449,465,377,396,433],
[437,498,0,432,438,455,432,439],
[444,442,459,0,439,409,432,455],
[455,426,453,452,0,463,434,452],
[486,514,436,482,428,0,484,467],
[473,495,459,459,457,407,0,457],
[465,458,452,436,439,424,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,423,441,510,537,462,473],
[415,0,397,448,465,474,390,439],
[468,494,0,444,400,490,479,426],
[450,443,447,0,489,486,419,424],
[381,426,491,402,0,503,406,383],
[354,417,401,405,388,0,401,364],
[429,501,412,472,485,490,0,480],
[418,452,465,467,508,527,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,447,464,449,453,420,461],
[425,0,462,454,453,476,433,494],
[444,429,0,443,455,471,415,469],
[427,437,448,0,434,448,415,451],
[442,438,436,457,0,470,431,495],
[438,415,420,443,421,0,454,436],
[471,458,476,476,460,437,0,482],
[430,397,422,440,396,455,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,433,460,452,457,435,433],
[422,0,437,443,437,471,456,437],
[458,454,0,437,445,446,438,455],
[431,448,454,0,453,465,449,454],
[439,454,446,438,0,446,478,437],
[434,420,445,426,445,0,441,433],
[456,435,453,442,413,450,0,447],
[458,454,436,437,454,458,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,431,416,416,453,441,443],
[465,0,451,434,434,458,461,446],
[460,440,0,464,436,452,449,441],
[475,457,427,0,446,451,457,458],
[475,457,455,445,0,450,459,460],
[438,433,439,440,441,0,418,442],
[450,430,442,434,432,473,0,433],
[448,445,450,433,431,449,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,461,441,442,447,458,447],
[423,0,429,437,424,439,434,439],
[430,462,0,465,447,445,443,454],
[450,454,426,0,433,440,439,447],
[449,467,444,458,0,448,438,445],
[444,452,446,451,443,0,440,444],
[433,457,448,452,453,451,0,442],
[444,452,437,444,446,447,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,432,412,436,425,440,446],
[431,0,443,389,415,396,431,401],
[459,448,0,403,423,413,458,420],
[479,502,488,0,461,462,457,443],
[455,476,468,430,0,410,455,445],
[466,495,478,429,481,0,464,457],
[451,460,433,434,436,427,0,427],
[445,490,471,448,446,434,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,450,443,459,462,472,469],
[417,0,455,437,460,450,464,473],
[441,436,0,425,463,431,437,465],
[448,454,466,0,467,453,433,466],
[432,431,428,424,0,425,429,443],
[429,441,460,438,466,0,436,480],
[419,427,454,458,462,455,0,469],
[422,418,426,425,448,411,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,450,392,406,421,444,435],
[481,0,438,424,425,442,426,445],
[441,453,0,420,441,418,425,442],
[499,467,471,0,442,468,463,465],
[485,466,450,449,0,425,437,468],
[470,449,473,423,466,0,402,437],
[447,465,466,428,454,489,0,444],
[456,446,449,426,423,454,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,437,481,426,451,463,453],
[460,0,459,471,436,452,485,465],
[454,432,0,486,460,466,474,464],
[410,420,405,0,413,422,459,434],
[465,455,431,478,0,439,462,467],
[440,439,425,469,452,0,469,450],
[428,406,417,432,429,422,0,447],
[438,426,427,457,424,441,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,436,460,442,448,434,441],
[436,0,419,431,428,409,419,412],
[455,472,0,454,468,416,444,445],
[431,460,437,0,441,421,422,465],
[449,463,423,450,0,430,440,461],
[443,482,475,470,461,0,458,455],
[457,472,447,469,451,433,0,462],
[450,479,446,426,430,436,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,430,482,436,453,465,401],
[434,0,419,485,474,430,450,391],
[461,472,0,431,461,463,411,466],
[409,406,460,0,453,441,441,404],
[455,417,430,438,0,439,453,410],
[438,461,428,450,452,0,398,412],
[426,441,480,450,438,493,0,389],
[490,500,425,487,481,479,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,431,400,430,424,452,393],
[461,0,470,465,506,452,479,428],
[460,421,0,432,445,429,445,425],
[491,426,459,0,477,430,455,433],
[461,385,446,414,0,392,418,424],
[467,439,462,461,499,0,497,452],
[439,412,446,436,473,394,0,401],
[498,463,466,458,467,439,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,449,469,424,468,455,451],
[460,0,448,447,447,439,444,451],
[442,443,0,454,456,444,449,469],
[422,444,437,0,427,438,430,453],
[467,444,435,464,0,452,454,456],
[423,452,447,453,439,0,459,469],
[436,447,442,461,437,432,0,462],
[440,440,422,438,435,422,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,408,430,445,446,421,451],
[463,0,447,468,436,494,439,481],
[483,444,0,493,465,483,424,461],
[461,423,398,0,433,457,410,472],
[446,455,426,458,0,478,452,463],
[445,397,408,434,413,0,395,441],
[470,452,467,481,439,496,0,521],
[440,410,430,419,428,450,370,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,483,475,469,519,416,461],
[417,0,473,503,435,512,444,474],
[408,418,0,410,397,458,420,443],
[416,388,481,0,472,507,475,482],
[422,456,494,419,0,493,402,447],
[372,379,433,384,398,0,416,395],
[475,447,471,416,489,475,0,432],
[430,417,448,409,444,496,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,442,498,443,490,466,462],
[409,0,419,495,388,393,450,418],
[449,472,0,493,411,470,453,478],
[393,396,398,0,375,434,404,415],
[448,503,480,516,0,458,451,444],
[401,498,421,457,433,0,434,418],
[425,441,438,487,440,457,0,491],
[429,473,413,476,447,473,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,449,430,456,445,427,454],
[467,0,427,453,422,429,434,426],
[442,464,0,449,477,443,454,423],
[461,438,442,0,410,428,447,421],
[435,469,414,481,0,454,469,452],
[446,462,448,463,437,0,478,456],
[464,457,437,444,422,413,0,426],
[437,465,468,470,439,435,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,453,447,433,466,465,466],
[441,0,464,457,446,447,452,468],
[438,427,0,457,422,443,432,445],
[444,434,434,0,444,454,462,448],
[458,445,469,447,0,467,469,464],
[425,444,448,437,424,0,441,442],
[426,439,459,429,422,450,0,447],
[425,423,446,443,427,449,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,476,431,419,469,427,513],
[409,0,436,390,437,465,420,459],
[415,455,0,452,436,442,434,515],
[460,501,439,0,432,443,466,468],
[472,454,455,459,0,433,444,457],
[422,426,449,448,458,0,457,458],
[464,471,457,425,447,434,0,481],
[378,432,376,423,434,433,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,449,403,421,441,457,440],
[463,0,480,446,430,455,474,474],
[442,411,0,423,417,420,470,452],
[488,445,468,0,469,457,469,478],
[470,461,474,422,0,449,454,486],
[450,436,471,434,442,0,452,458],
[434,417,421,422,437,439,0,434],
[451,417,439,413,405,433,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,461,469,488,439,458,466],
[420,0,459,461,458,426,449,446],
[430,432,0,438,444,421,415,430],
[422,430,453,0,492,437,441,421],
[403,433,447,399,0,421,411,421],
[452,465,470,454,470,0,445,492],
[433,442,476,450,480,446,0,457],
[425,445,461,470,470,399,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,441,447,436,440,451,448],
[435,0,411,433,444,423,418,426],
[450,480,0,459,462,458,443,457],
[444,458,432,0,428,440,436,435],
[455,447,429,463,0,439,431,438],
[451,468,433,451,452,0,454,455],
[440,473,448,455,460,437,0,438],
[443,465,434,456,453,436,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,474,451,466,435,452,465],
[418,0,458,459,439,415,442,438],
[417,433,0,440,435,428,414,425],
[440,432,451,0,456,442,434,449],
[425,452,456,435,0,422,426,464],
[456,476,463,449,469,0,439,480],
[439,449,477,457,465,452,0,468],
[426,453,466,442,427,411,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,482,470,422,471,445,431],
[390,0,411,433,404,411,419,417],
[409,480,0,466,408,440,446,431],
[421,458,425,0,410,453,452,444],
[469,487,483,481,0,455,436,434],
[420,480,451,438,436,0,449,443],
[446,472,445,439,455,442,0,457],
[460,474,460,447,457,448,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,459,429,444,429,448,432],
[444,0,475,443,430,446,449,443],
[432,416,0,405,425,429,431,417],
[462,448,486,0,469,461,440,451],
[447,461,466,422,0,430,446,450],
[462,445,462,430,461,0,440,427],
[443,442,460,451,445,451,0,431],
[459,448,474,440,441,464,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,581,479,546,435,408,578,370],
[310,0,396,377,371,494,362,270],
[412,495,0,557,262,568,415,318],
[345,514,334,0,384,565,399,252],
[456,520,629,507,0,482,406,477],
[483,397,323,326,409,0,375,318],
[313,529,476,492,485,516,0,503],
[521,621,573,639,414,573,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,459,444,453,493,497,476],
[469,0,469,474,440,495,454,445],
[432,422,0,469,450,516,415,467],
[447,417,422,0,438,478,471,477],
[438,451,441,453,0,530,448,478],
[398,396,375,413,361,0,384,374],
[394,437,476,420,443,507,0,456],
[415,446,424,414,413,517,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,445,454,441,446,421,469],
[443,0,429,446,465,442,421,450],
[446,462,0,444,454,439,441,466],
[437,445,447,0,466,425,415,450],
[450,426,437,425,0,426,433,450],
[445,449,452,466,465,0,446,470],
[470,470,450,476,458,445,0,479],
[422,441,425,441,441,421,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,452,440,437,454,454,419],
[446,0,434,445,400,435,437,422],
[439,457,0,456,431,419,457,435],
[451,446,435,0,423,439,433,447],
[454,491,460,468,0,430,460,450],
[437,456,472,452,461,0,465,435],
[437,454,434,458,431,426,0,433],
[472,469,456,444,441,456,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,439,443,427,438,436,452],
[446,0,431,442,427,461,451,463],
[452,460,0,455,433,465,451,458],
[448,449,436,0,412,455,442,447],
[464,464,458,479,0,467,445,446],
[453,430,426,436,424,0,441,442],
[455,440,440,449,446,450,0,442],
[439,428,433,444,445,449,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,436,461,418,433,447,430],
[469,0,451,466,446,467,440,451],
[455,440,0,456,430,418,436,444],
[430,425,435,0,432,441,435,431],
[473,445,461,459,0,437,456,451],
[458,424,473,450,454,0,430,442],
[444,451,455,456,435,461,0,458],
[461,440,447,460,440,449,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,426,456,396,469,411,414],
[417,0,413,525,426,423,504,455],
[465,478,0,492,452,447,455,398],
[435,366,399,0,347,371,428,391],
[495,465,439,544,0,460,485,436],
[422,468,444,520,431,0,465,457],
[480,387,436,463,406,426,0,409],
[477,436,493,500,455,434,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,335,420,416,377,471,426],
[479,0,375,414,445,363,404,437],
[556,516,0,490,465,455,499,424],
[471,477,401,0,476,470,483,489],
[475,446,426,415,0,403,471,396],
[514,528,436,421,488,0,414,431],
[420,487,392,408,420,477,0,344],
[465,454,467,402,495,460,547,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,410,417,428,442,451,458],
[408,0,396,425,419,422,446,406],
[481,495,0,462,446,440,474,463],
[474,466,429,0,432,435,454,465],
[463,472,445,459,0,448,471,505],
[449,469,451,456,443,0,446,470],
[440,445,417,437,420,445,0,469],
[433,485,428,426,386,421,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,477,470,445,439,468,439],
[438,0,455,474,420,437,455,457],
[414,436,0,462,425,398,437,423],
[421,417,429,0,417,404,422,378],
[446,471,466,474,0,449,434,453],
[452,454,493,487,442,0,461,444],
[423,436,454,469,457,430,0,435],
[452,434,468,513,438,447,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,451,448,453,448,443,452],
[438,0,461,447,473,435,434,463],
[440,430,0,442,455,427,437,449],
[443,444,449,0,474,446,448,434],
[438,418,436,417,0,411,426,447],
[443,456,464,445,480,0,439,478],
[448,457,454,443,465,452,0,457],
[439,428,442,457,444,413,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,449,431,452,422,421,421],
[477,0,461,461,487,440,435,446],
[442,430,0,465,454,447,433,400],
[460,430,426,0,440,417,435,414],
[439,404,437,451,0,418,450,415],
[469,451,444,474,473,0,419,427],
[470,456,458,456,441,472,0,401],
[470,445,491,477,476,464,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,419,439,427,437,452,465],
[462,0,415,469,436,454,464,451],
[472,476,0,453,465,421,460,447],
[452,422,438,0,441,414,451,424],
[464,455,426,450,0,413,452,458],
[454,437,470,477,478,0,488,453],
[439,427,431,440,439,403,0,421],
[426,440,444,467,433,438,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,395,413,490,476,447,429],
[418,0,433,456,438,481,425,421],
[496,458,0,478,492,469,460,434],
[478,435,413,0,460,482,464,437],
[401,453,399,431,0,439,429,446],
[415,410,422,409,452,0,426,429],
[444,466,431,427,462,465,0,434],
[462,470,457,454,445,462,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,468,439,461,440,441,447],
[464,0,452,462,428,439,437,424],
[423,439,0,434,436,416,415,379],
[452,429,457,0,416,402,417,422],
[430,463,455,475,0,432,421,427],
[451,452,475,489,459,0,417,448],
[450,454,476,474,470,474,0,439],
[444,467,512,469,464,443,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,564,444,575,527,477,516,471],
[327,0,459,462,436,387,408,373],
[447,432,0,563,441,490,445,378],
[316,429,328,0,372,348,354,367],
[364,455,450,519,0,438,362,411],
[414,504,401,543,453,0,451,400],
[375,483,446,537,529,440,0,401],
[420,518,513,524,480,491,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,481,448,460,449,441,436],
[438,0,464,467,457,455,446,446],
[410,427,0,417,453,412,433,415],
[443,424,474,0,442,453,450,414],
[431,434,438,449,0,427,428,398],
[442,436,479,438,464,0,436,412],
[450,445,458,441,463,455,0,429],
[455,445,476,477,493,479,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,429,425,428,446,436,423],
[432,0,431,418,427,437,426,424],
[462,460,0,433,433,446,461,436],
[466,473,458,0,441,462,443,446],
[463,464,458,450,0,445,451,447],
[445,454,445,429,446,0,470,428],
[455,465,430,448,440,421,0,442],
[468,467,455,445,444,463,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,350,374,466,408,458,463],
[479,0,454,397,571,518,461,690],
[541,437,0,556,529,529,465,524],
[517,494,335,0,659,518,524,530],
[425,320,362,232,0,212,440,489],
[483,373,362,373,679,0,537,522],
[433,430,426,367,451,354,0,524],
[428,201,367,361,402,369,367,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,554,434,461,490,434,537],
[431,0,467,369,434,650,453,472],
[337,424,0,369,405,444,439,429],
[457,522,522,0,398,493,482,475],
[430,457,486,493,0,448,509,454],
[401,241,447,398,443,0,389,405],
[457,438,452,409,382,502,0,381],
[354,419,462,416,437,486,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,482,420,412,441,419,465],
[441,0,433,403,418,458,435,420],
[409,458,0,374,392,453,425,406],
[471,488,517,0,434,466,442,489],
[479,473,499,457,0,472,476,442],
[450,433,438,425,419,0,430,407],
[472,456,466,449,415,461,0,456],
[426,471,485,402,449,484,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,457,437,434,446,451,456],
[457,0,475,452,450,470,445,480],
[434,416,0,432,412,436,428,437],
[454,439,459,0,436,448,435,440],
[457,441,479,455,0,464,467,454],
[445,421,455,443,427,0,445,463],
[440,446,463,456,424,446,0,447],
[435,411,454,451,437,428,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,431,459,424,432,445,437],
[464,0,427,455,437,425,452,434],
[460,464,0,474,446,434,457,467],
[432,436,417,0,446,423,441,443],
[467,454,445,445,0,456,464,433],
[459,466,457,468,435,0,468,457],
[446,439,434,450,427,423,0,427],
[454,457,424,448,458,434,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,358,457,398,392,440,394],
[421,0,393,386,461,388,406,391],
[533,498,0,429,517,554,495,502],
[434,505,462,0,443,409,486,444],
[493,430,374,448,0,425,406,386],
[499,503,337,482,466,0,473,453],
[451,485,396,405,485,418,0,452],
[497,500,389,447,505,438,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,465,455,467,453,427,441],
[428,0,423,435,437,418,407,434],
[426,468,0,447,444,435,439,441],
[436,456,444,0,452,451,430,438],
[424,454,447,439,0,428,419,452],
[438,473,456,440,463,0,447,461],
[464,484,452,461,472,444,0,448],
[450,457,450,453,439,430,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,469,449,448,457,459,430],
[411,0,431,444,395,435,438,430],
[422,460,0,438,436,439,461,432],
[442,447,453,0,457,483,454,430],
[443,496,455,434,0,480,455,430],
[434,456,452,408,411,0,443,456],
[432,453,430,437,436,448,0,409],
[461,461,459,461,461,435,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,468,445,452,468,428,470],
[416,0,434,421,422,424,430,437],
[423,457,0,437,458,434,456,454],
[446,470,454,0,445,428,452,470],
[439,469,433,446,0,442,438,474],
[423,467,457,463,449,0,473,493],
[463,461,435,439,453,418,0,451],
[421,454,437,421,417,398,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,454,453,463,446,437,489],
[417,0,422,441,431,390,442,450],
[437,469,0,432,456,417,437,450],
[438,450,459,0,459,418,452,485],
[428,460,435,432,0,428,416,454],
[445,501,474,473,463,0,452,452],
[454,449,454,439,475,439,0,463],
[402,441,441,406,437,439,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,448,462,439,456,472,446],
[440,0,450,462,442,450,463,457],
[443,441,0,451,431,458,447,435],
[429,429,440,0,433,435,436,444],
[452,449,460,458,0,473,458,444],
[435,441,433,456,418,0,432,449],
[419,428,444,455,433,459,0,436],
[445,434,456,447,447,442,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,438,432,449,453,440,446],
[455,0,470,439,452,461,442,458],
[453,421,0,449,453,483,450,444],
[459,452,442,0,468,467,469,447],
[442,439,438,423,0,449,447,436],
[438,430,408,424,442,0,438,427],
[451,449,441,422,444,453,0,434],
[445,433,447,444,455,464,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,461,493,454,450,460,433],
[421,0,433,463,447,432,432,444],
[430,458,0,467,438,434,442,438],
[398,428,424,0,429,425,428,440],
[437,444,453,462,0,446,436,429],
[441,459,457,466,445,0,449,445],
[431,459,449,463,455,442,0,457],
[458,447,453,451,462,446,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,455,449,433,488,447,435],
[453,0,446,452,472,469,451,443],
[436,445,0,449,444,455,424,426],
[442,439,442,0,448,475,426,437],
[458,419,447,443,0,449,402,445],
[403,422,436,416,442,0,406,408],
[444,440,467,465,489,485,0,460],
[456,448,465,454,446,483,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,368,394,423,461,393,411],
[438,0,384,435,395,424,411,426],
[523,507,0,466,469,481,444,493],
[497,456,425,0,438,442,415,423],
[468,496,422,453,0,442,376,412],
[430,467,410,449,449,0,435,456],
[498,480,447,476,515,456,0,442],
[480,465,398,468,479,435,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,412,439,430,460,423,434],
[489,0,458,474,443,484,484,449],
[479,433,0,435,446,468,430,446],
[452,417,456,0,426,454,421,470],
[461,448,445,465,0,471,446,463],
[431,407,423,437,420,0,445,465],
[468,407,461,470,445,446,0,457],
[457,442,445,421,428,426,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,420,462,461,421,472,459],
[459,0,457,507,455,465,445,427],
[471,434,0,487,448,441,432,425],
[429,384,404,0,462,448,411,419],
[430,436,443,429,0,452,396,424],
[470,426,450,443,439,0,429,440],
[419,446,459,480,495,462,0,418],
[432,464,466,472,467,451,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,439,452,430,415,436,441],
[475,0,456,451,440,441,433,436],
[452,435,0,451,423,411,412,428],
[439,440,440,0,432,425,424,447],
[461,451,468,459,0,448,428,439],
[476,450,480,466,443,0,457,463],
[455,458,479,467,463,434,0,444],
[450,455,463,444,452,428,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,447,445,433,426,429,439],
[439,0,446,441,445,437,435,453],
[444,445,0,474,432,418,436,432],
[446,450,417,0,417,413,411,439],
[458,446,459,474,0,433,447,442],
[465,454,473,478,458,0,440,469],
[462,456,455,480,444,451,0,481],
[452,438,459,452,449,422,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,445,456,447,464,459,462],
[444,0,446,458,439,456,447,456],
[446,445,0,444,407,441,435,434],
[435,433,447,0,433,442,434,430],
[444,452,484,458,0,465,456,451],
[427,435,450,449,426,0,446,436],
[432,444,456,457,435,445,0,448],
[429,435,457,461,440,455,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,437,439,437,412,425,395],
[458,0,442,453,463,457,452,460],
[454,449,0,431,468,424,414,420],
[452,438,460,0,464,444,460,425],
[454,428,423,427,0,413,423,410],
[479,434,467,447,478,0,467,433],
[466,439,477,431,468,424,0,424],
[496,431,471,466,481,458,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,439,427,461,427,452,438],
[429,0,413,428,433,428,437,433],
[452,478,0,457,463,434,445,440],
[464,463,434,0,465,449,463,456],
[430,458,428,426,0,427,440,424],
[464,463,457,442,464,0,438,455],
[439,454,446,428,451,453,0,433],
[453,458,451,435,467,436,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,460,475,456,456,462,425],
[435,0,465,473,459,449,415,430],
[431,426,0,470,449,468,440,420],
[416,418,421,0,432,439,415,410],
[435,432,442,459,0,447,442,432],
[435,442,423,452,444,0,449,446],
[429,476,451,476,449,442,0,434],
[466,461,471,481,459,445,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,449,425,443,462,390,480],
[436,0,437,390,388,424,384,457],
[442,454,0,426,393,429,420,468],
[466,501,465,0,443,438,469,497],
[448,503,498,448,0,485,414,454],
[429,467,462,453,406,0,414,477],
[501,507,471,422,477,477,0,440],
[411,434,423,394,437,414,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,456,423,449,439,437,466],
[460,0,482,467,465,468,439,459],
[435,409,0,423,440,423,426,431],
[468,424,468,0,460,462,449,466],
[442,426,451,431,0,441,437,444],
[452,423,468,429,450,0,443,433],
[454,452,465,442,454,448,0,459],
[425,432,460,425,447,458,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,458,453,464,439,464,469],
[410,0,429,429,463,401,440,428],
[433,462,0,439,469,441,468,414],
[438,462,452,0,450,439,417,431],
[427,428,422,441,0,411,425,437],
[452,490,450,452,480,0,450,442],
[427,451,423,474,466,441,0,441],
[422,463,477,460,454,449,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,368,461,439,458,417,433],
[392,0,396,358,401,398,341,414],
[523,495,0,403,455,446,412,467],
[430,533,488,0,433,477,488,441],
[452,490,436,458,0,453,459,440],
[433,493,445,414,438,0,433,408],
[474,550,479,403,432,458,0,403],
[458,477,424,450,451,483,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,462,423,447,475,422,438],
[452,0,456,459,435,468,446,460],
[429,435,0,430,418,456,404,444],
[468,432,461,0,423,471,420,465],
[444,456,473,468,0,470,410,467],
[416,423,435,420,421,0,425,435],
[469,445,487,471,481,466,0,472],
[453,431,447,426,424,456,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,475,430,451,475,456,466],
[415,0,452,414,431,431,428,414],
[416,439,0,452,434,471,462,458],
[461,477,439,0,445,438,450,421],
[440,460,457,446,0,471,459,463],
[416,460,420,453,420,0,441,448],
[435,463,429,441,432,450,0,423],
[425,477,433,470,428,443,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,460,445,435,445,455,435],
[427,0,430,414,426,444,440,453],
[431,461,0,449,456,479,447,477],
[446,477,442,0,461,440,435,450],
[456,465,435,430,0,464,463,447],
[446,447,412,451,427,0,447,448],
[436,451,444,456,428,444,0,454],
[456,438,414,441,444,443,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,433,423,426,421,468,461],
[451,0,434,430,442,429,433,481],
[458,457,0,435,465,459,471,500],
[468,461,456,0,427,451,436,495],
[465,449,426,464,0,439,448,479],
[470,462,432,440,452,0,453,486],
[423,458,420,455,443,438,0,461],
[430,410,391,396,412,405,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,469,448,493,458,444,460],
[448,0,461,426,458,439,440,457],
[422,430,0,463,469,461,450,460],
[443,465,428,0,497,494,460,478],
[398,433,422,394,0,442,430,455],
[433,452,430,397,449,0,459,465],
[447,451,441,431,461,432,0,456],
[431,434,431,413,436,426,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,424,484,457,433,413,391],
[468,0,426,470,455,472,427,449],
[467,465,0,523,431,463,430,416],
[407,421,368,0,406,382,406,375],
[434,436,460,485,0,425,395,400],
[458,419,428,509,466,0,404,435],
[478,464,461,485,496,487,0,422],
[500,442,475,516,491,456,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,425,436,414,428,428,435],
[470,0,433,459,428,482,447,476],
[466,458,0,472,437,452,443,458],
[455,432,419,0,421,442,414,439],
[477,463,454,470,0,472,434,467],
[463,409,439,449,419,0,407,428],
[463,444,448,477,457,484,0,481],
[456,415,433,452,424,463,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,370,382,531,511,562,394],
[454,0,435,468,647,579,508,534],
[521,456,0,457,511,406,539,402],
[509,423,434,0,535,482,480,472],
[360,244,380,356,0,354,469,302],
[380,312,485,409,537,0,464,451],
[329,383,352,411,422,427,0,362],
[497,357,489,419,589,440,529,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,483,457,422,481,467,478],
[443,0,547,436,486,418,414,560],
[408,344,0,417,374,460,522,534],
[434,455,474,0,511,475,523,477],
[469,405,517,380,0,513,454,508],
[410,473,431,416,378,0,334,442],
[424,477,369,368,437,557,0,482],
[413,331,357,414,383,449,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,493,444,448,438,452,457],
[460,0,469,445,445,429,443,443],
[398,422,0,419,409,418,413,418],
[447,446,472,0,423,443,444,463],
[443,446,482,468,0,461,450,451],
[453,462,473,448,430,0,446,439],
[439,448,478,447,441,445,0,473],
[434,448,473,428,440,452,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,498,439,471,478,486,482],
[431,0,479,467,440,473,446,459],
[393,412,0,414,422,469,441,449],
[452,424,477,0,431,459,456,446],
[420,451,469,460,0,454,452,453],
[413,418,422,432,437,0,444,443],
[405,445,450,435,439,447,0,435],
[409,432,442,445,438,448,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,486,470,443,437,431,459],
[457,0,448,456,476,446,438,460],
[405,443,0,427,417,433,409,451],
[421,435,464,0,440,439,443,440],
[448,415,474,451,0,439,433,431],
[454,445,458,452,452,0,461,472],
[460,453,482,448,458,430,0,453],
[432,431,440,451,460,419,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,453,434,451,475,469,438],
[431,0,433,445,442,450,448,437],
[438,458,0,446,454,454,463,442],
[457,446,445,0,458,463,443,449],
[440,449,437,433,0,444,433,433],
[416,441,437,428,447,0,427,428],
[422,443,428,448,458,464,0,445],
[453,454,449,442,458,463,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,427,445,429,420,420,422],
[471,0,445,425,449,432,423,419],
[464,446,0,469,428,451,423,427],
[446,466,422,0,432,436,441,423],
[462,442,463,459,0,463,447,451],
[471,459,440,455,428,0,442,421],
[471,468,468,450,444,449,0,429],
[469,472,464,468,440,470,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,473,449,439,477,453,462],
[424,0,445,447,467,474,454,410],
[418,446,0,476,449,429,439,430],
[442,444,415,0,436,456,442,401],
[452,424,442,455,0,421,432,426],
[414,417,462,435,470,0,440,410],
[438,437,452,449,459,451,0,412],
[429,481,461,490,465,481,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,460,472,444,436,422,459],
[459,0,468,441,458,449,432,473],
[431,423,0,434,423,402,431,439],
[419,450,457,0,431,430,435,436],
[447,433,468,460,0,421,424,456],
[455,442,489,461,470,0,447,470],
[469,459,460,456,467,444,0,458],
[432,418,452,455,435,421,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,359,435,367,341,345,412],
[518,0,451,480,409,438,357,393],
[532,440,0,449,427,425,477,457],
[456,411,442,0,400,358,396,356],
[524,482,464,491,0,450,436,466],
[550,453,466,533,441,0,502,406],
[546,534,414,495,455,389,0,483],
[479,498,434,535,425,485,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,465,454,450,487,441,450],
[456,0,452,427,471,479,445,479],
[426,439,0,423,446,480,468,447],
[437,464,468,0,458,462,434,447],
[441,420,445,433,0,483,429,427],
[404,412,411,429,408,0,411,421],
[450,446,423,457,462,480,0,456],
[441,412,444,444,464,470,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,398,392,399,433,403,445],
[483,0,473,453,471,522,437,442],
[493,418,0,481,456,546,480,481],
[499,438,410,0,443,502,456,463],
[492,420,435,448,0,487,458,467],
[458,369,345,389,404,0,443,436],
[488,454,411,435,433,448,0,463],
[446,449,410,428,424,455,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,466,448,450,453,456,440],
[427,0,428,431,445,421,449,428],
[425,463,0,438,451,437,450,435],
[443,460,453,0,465,442,463,466],
[441,446,440,426,0,450,439,440],
[438,470,454,449,441,0,447,459],
[435,442,441,428,452,444,0,436],
[451,463,456,425,451,432,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,434,490,447,406,433,419],
[440,0,388,453,407,367,357,313],
[457,503,0,471,521,415,484,405],
[401,438,420,0,435,438,345,395],
[444,484,370,456,0,381,406,385],
[485,524,476,453,510,0,422,457],
[458,534,407,546,485,469,0,420],
[472,578,486,496,506,434,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,422,453,498,457,467,424],
[498,0,442,474,593,459,449,481],
[469,449,0,510,475,497,449,441],
[438,417,381,0,531,482,408,471],
[393,298,416,360,0,402,421,406],
[434,432,394,409,489,0,466,440],
[424,442,442,483,470,425,0,443],
[467,410,450,420,485,451,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,453,464,453,476,434,465],
[447,0,450,471,469,469,431,486],
[438,441,0,470,429,419,412,441],
[427,420,421,0,431,436,416,441],
[438,422,462,460,0,483,447,444],
[415,422,472,455,408,0,442,449],
[457,460,479,475,444,449,0,501],
[426,405,450,450,447,442,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,451,439,462,467,485,453],
[461,0,451,457,439,431,440,436],
[440,440,0,452,443,476,447,427],
[452,434,439,0,424,438,454,422],
[429,452,448,467,0,466,470,478],
[424,460,415,453,425,0,460,452],
[406,451,444,437,421,431,0,433],
[438,455,464,469,413,439,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,442,430,461,390,394,410],
[481,0,485,498,494,404,411,433],
[449,406,0,460,516,421,455,454],
[461,393,431,0,426,378,398,416],
[430,397,375,465,0,450,482,432],
[501,487,470,513,441,0,476,468],
[497,480,436,493,409,415,0,430],
[481,458,437,475,459,423,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,431,447,422,441,488,437],
[475,0,436,444,450,464,489,460],
[460,455,0,440,427,435,477,459],
[444,447,451,0,437,443,456,444],
[469,441,464,454,0,464,470,456],
[450,427,456,448,427,0,489,453],
[403,402,414,435,421,402,0,412],
[454,431,432,447,435,438,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,443,441,453,452,429,449],
[471,0,454,477,462,486,469,438],
[448,437,0,464,462,476,456,449],
[450,414,427,0,429,475,433,423],
[438,429,429,462,0,457,441,438],
[439,405,415,416,434,0,423,415],
[462,422,435,458,450,468,0,430],
[442,453,442,468,453,476,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,437,449,462,446,456,461],
[448,0,440,451,462,472,463,422],
[454,451,0,455,463,442,456,431],
[442,440,436,0,454,451,463,435],
[429,429,428,437,0,417,454,446],
[445,419,449,440,474,0,460,456],
[435,428,435,428,437,431,0,415],
[430,469,460,456,445,435,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,347,413,403,414,382,418],
[496,0,375,485,421,412,449,441],
[544,516,0,509,510,529,477,379],
[478,406,382,0,371,390,438,452],
[488,470,381,520,0,383,443,481],
[477,479,362,501,508,0,421,468],
[509,442,414,453,448,470,0,465],
[473,450,512,439,410,423,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,210,483,210,210,210,300,483],
[681,0,593,271,195,195,410,556],
[408,298,0,298,317,317,498,298],
[681,620,593,0,197,498,410,556],
[681,696,574,694,0,391,303,784],
[681,696,574,393,500,0,391,483],
[591,481,393,481,588,500,0,481],
[408,335,593,335,107,408,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,432,432,442,463,450,441],
[446,0,422,421,416,429,435,425],
[459,469,0,442,464,469,453,460],
[459,470,449,0,449,451,444,454],
[449,475,427,442,0,451,443,450],
[428,462,422,440,440,0,431,416],
[441,456,438,447,448,460,0,453],
[450,466,431,437,441,475,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,432,438,444,478,439,464],
[456,0,469,441,451,510,433,482],
[459,422,0,442,441,462,427,458],
[453,450,449,0,445,490,453,455],
[447,440,450,446,0,494,458,450],
[413,381,429,401,397,0,422,428],
[452,458,464,438,433,469,0,460],
[427,409,433,436,441,463,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,360,476,514,456,338,469,397],
[531,0,600,613,477,540,499,441],
[415,291,0,330,443,403,372,267],
[377,278,561,0,378,379,542,315],
[435,414,448,513,0,357,451,365],
[553,351,488,512,534,0,532,470],
[422,392,519,349,440,359,0,323],
[494,450,624,576,526,421,568,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,469,442,451,454,457,456],
[419,0,417,443,426,424,436,433],
[422,474,0,448,437,460,456,431],
[449,448,443,0,428,460,444,428],
[440,465,454,463,0,445,465,430],
[437,467,431,431,446,0,449,447],
[434,455,435,447,426,442,0,426],
[435,458,460,463,461,444,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,443,425,436,450,447,454],
[450,0,424,427,456,443,434,417],
[448,467,0,453,438,469,452,439],
[466,464,438,0,432,472,431,461],
[455,435,453,459,0,479,444,449],
[441,448,422,419,412,0,445,443],
[444,457,439,460,447,446,0,445],
[437,474,452,430,442,448,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,448,454,469,433,437,462],
[445,0,454,440,464,441,455,461],
[443,437,0,441,468,437,441,442],
[437,451,450,0,454,431,439,443],
[422,427,423,437,0,426,418,427],
[458,450,454,460,465,0,435,445],
[454,436,450,452,473,456,0,463],
[429,430,449,448,464,446,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,434,456,410,403,450,445],
[423,0,427,475,414,422,448,420],
[457,464,0,463,441,465,449,454],
[435,416,428,0,456,432,410,430],
[481,477,450,435,0,445,464,453],
[488,469,426,459,446,0,454,431],
[441,443,442,481,427,437,0,444],
[446,471,437,461,438,460,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,431,438,459,411,415,417],
[466,0,460,473,488,459,442,502],
[460,431,0,457,445,431,441,426],
[453,418,434,0,472,432,406,392],
[432,403,446,419,0,378,380,407],
[480,432,460,459,513,0,460,425],
[476,449,450,485,511,431,0,460],
[474,389,465,499,484,466,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,442,454,519,446,510,458],
[435,0,432,416,476,382,478,430],
[449,459,0,439,476,478,488,438],
[437,475,452,0,483,473,556,421],
[372,415,415,408,0,413,454,358],
[445,509,413,418,478,0,538,413],
[381,413,403,335,437,353,0,408],
[433,461,453,470,533,478,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,408,468,442,458,448,454],
[455,0,451,466,459,427,464,460],
[483,440,0,469,470,459,442,455],
[423,425,422,0,415,413,443,434],
[449,432,421,476,0,433,471,434],
[433,464,432,478,458,0,480,456],
[443,427,449,448,420,411,0,448],
[437,431,436,457,457,435,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,481,437,418,463,420,488],
[469,0,498,494,463,418,426,513],
[410,393,0,407,434,438,409,450],
[454,397,484,0,496,457,470,503],
[473,428,457,395,0,427,448,427],
[428,473,453,434,464,0,457,469],
[471,465,482,421,443,434,0,469],
[403,378,441,388,464,422,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,373,181,318,417,397,447],
[513,0,516,482,539,511,432,415],
[518,375,0,448,463,550,379,494],
[710,409,443,0,466,521,560,398],
[573,352,428,425,0,479,452,402],
[474,380,341,370,412,0,439,383],
[494,459,512,331,439,452,0,407],
[444,476,397,493,489,508,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,419,486,482,483,488,466],
[441,0,402,437,426,449,445,440],
[472,489,0,488,435,508,512,502],
[405,454,403,0,418,420,433,438],
[409,465,456,473,0,437,473,456],
[408,442,383,471,454,0,443,476],
[403,446,379,458,418,448,0,433],
[425,451,389,453,435,415,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,561,403,487,429,526,468,503],
[330,0,345,428,345,418,400,421],
[488,546,0,512,509,442,497,524],
[404,463,379,0,346,440,381,412],
[462,546,382,545,0,479,444,435],
[365,473,449,451,412,0,472,441],
[423,491,394,510,447,419,0,472],
[388,470,367,479,456,450,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,452,445,451,445,452,445],
[413,0,431,438,416,436,434,442],
[439,460,0,443,453,444,448,454],
[446,453,448,0,435,439,447,445],
[440,475,438,456,0,446,466,446],
[446,455,447,452,445,0,468,444],
[439,457,443,444,425,423,0,437],
[446,449,437,446,445,447,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,449,470,459,456,465,490],
[450,0,469,458,447,421,451,458],
[442,422,0,455,469,457,478,473],
[421,433,436,0,463,435,469,470],
[432,444,422,428,0,424,459,439],
[435,470,434,456,467,0,498,459],
[426,440,413,422,432,393,0,444],
[401,433,418,421,452,432,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,434,466,442,417,474],
[441,0,454,435,431,449,440,454],
[446,437,0,434,430,451,477,478],
[457,456,457,0,442,436,439,470],
[425,460,461,449,0,450,455,462],
[449,442,440,455,441,0,439,500],
[474,451,414,452,436,452,0,451],
[417,437,413,421,429,391,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,425,423,426,458,436,423],
[484,0,448,436,458,463,462,454],
[466,443,0,444,435,457,466,442],
[468,455,447,0,435,496,463,454],
[465,433,456,456,0,461,469,447],
[433,428,434,395,430,0,430,430],
[455,429,425,428,422,461,0,436],
[468,437,449,437,444,461,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,443,431,377,419,387,427],
[463,0,435,504,453,451,451,461],
[448,456,0,474,433,497,391,462],
[460,387,417,0,406,467,417,411],
[514,438,458,485,0,469,403,449],
[472,440,394,424,422,0,378,477],
[504,440,500,474,488,513,0,520],
[464,430,429,480,442,414,371,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,437,426,414,429,435,452],
[477,0,456,419,432,474,459,452],
[454,435,0,436,447,458,475,451],
[465,472,455,0,431,461,446,497],
[477,459,444,460,0,486,456,449],
[462,417,433,430,405,0,428,472],
[456,432,416,445,435,463,0,460],
[439,439,440,394,442,419,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,511,575,396,503,511,575,393],
[380,0,621,666,773,784,380,773],
[316,270,0,380,602,388,334,377],
[495,225,511,0,393,495,495,225],
[388,118,289,498,0,388,452,225],
[380,107,503,396,503,0,334,393],
[316,511,557,396,439,557,0,439],
[498,118,514,666,666,498,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,450,447,460,428,453,466],
[437,0,429,448,446,431,441,435],
[441,462,0,461,451,450,452,460],
[444,443,430,0,429,423,435,446],
[431,445,440,462,0,427,449,439],
[463,460,441,468,464,0,444,475],
[438,450,439,456,442,447,0,439],
[425,456,431,445,452,416,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,418,454,470,459,486,535],
[436,0,505,530,428,495,489,496],
[473,386,0,461,459,429,409,456],
[437,361,430,0,389,402,439,411],
[421,463,432,502,0,486,433,427],
[432,396,462,489,405,0,431,447],
[405,402,482,452,458,460,0,401],
[356,395,435,480,464,444,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,426,435,480,444,480,437],
[464,0,449,479,495,462,482,440],
[465,442,0,407,490,481,491,468],
[456,412,484,0,463,462,479,478],
[411,396,401,428,0,443,447,454],
[447,429,410,429,448,0,438,463],
[411,409,400,412,444,453,0,432],
[454,451,423,413,437,428,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,420,453,450,444,453,452],
[459,0,445,455,463,465,455,477],
[471,446,0,438,466,457,460,449],
[438,436,453,0,462,457,466,481],
[441,428,425,429,0,460,471,435],
[447,426,434,434,431,0,461,461],
[438,436,431,425,420,430,0,465],
[439,414,442,410,456,430,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,457,462,429,472,445,440],
[458,0,460,454,438,460,453,463],
[434,431,0,424,424,419,435,432],
[429,437,467,0,413,449,447,463],
[462,453,467,478,0,428,432,470],
[419,431,472,442,463,0,449,458],
[446,438,456,444,459,442,0,432],
[451,428,459,428,421,433,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,482,515,456,477,448,414],
[424,0,425,452,511,403,418,387],
[409,466,0,495,423,501,443,458],
[376,439,396,0,425,429,351,390],
[435,380,468,466,0,389,397,396],
[414,488,390,462,502,0,382,425],
[443,473,448,540,494,509,0,454],
[477,504,433,501,495,466,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,457,407,420,400,436,398],
[435,0,461,420,434,442,448,442],
[434,430,0,452,426,447,428,434],
[484,471,439,0,432,437,450,443],
[471,457,465,459,0,419,449,436],
[491,449,444,454,472,0,440,455],
[455,443,463,441,442,451,0,456],
[493,449,457,448,455,436,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,416,462,452,482,404,449],
[469,0,448,427,463,446,398,459],
[475,443,0,436,478,479,407,475],
[429,464,455,0,501,475,455,464],
[439,428,413,390,0,504,443,434],
[409,445,412,416,387,0,418,422],
[487,493,484,436,448,473,0,468],
[442,432,416,427,457,469,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,447,386,439,453,438,430],
[453,0,461,433,463,467,394,439],
[444,430,0,400,427,458,425,419],
[505,458,491,0,443,426,470,479],
[452,428,464,448,0,450,429,461],
[438,424,433,465,441,0,418,396],
[453,497,466,421,462,473,0,447],
[461,452,472,412,430,495,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,435,456,418,432,432,423],
[478,0,432,475,454,453,450,444],
[456,459,0,471,445,437,438,453],
[435,416,420,0,425,409,439,432],
[473,437,446,466,0,450,444,446],
[459,438,454,482,441,0,444,442],
[459,441,453,452,447,447,0,459],
[468,447,438,459,445,449,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,433,451,443,455,478,404],
[456,0,447,493,475,478,475,443],
[458,444,0,458,467,456,492,461],
[440,398,433,0,409,423,458,448],
[448,416,424,482,0,444,487,431],
[436,413,435,468,447,0,464,445],
[413,416,399,433,404,427,0,425],
[487,448,430,443,460,446,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,505,450,500,500,419,500],
[432,0,487,449,491,426,443,466],
[386,404,0,421,387,444,384,400],
[441,442,470,0,470,459,435,414],
[391,400,504,421,0,455,448,445],
[391,465,447,432,436,0,440,417],
[472,448,507,456,443,451,0,403],
[391,425,491,477,446,474,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,439,444,477,460,488,466],
[441,0,450,476,480,430,482,466],
[452,441,0,465,475,454,483,464],
[447,415,426,0,459,428,449,481],
[414,411,416,432,0,455,450,452],
[431,461,437,463,436,0,477,472],
[403,409,408,442,441,414,0,431],
[425,425,427,410,439,419,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,453,458,480,492,464,465],
[459,0,419,459,449,473,448,440],
[438,472,0,453,466,456,480,475],
[433,432,438,0,469,458,482,448],
[411,442,425,422,0,448,463,438],
[399,418,435,433,443,0,451,424],
[427,443,411,409,428,440,0,415],
[426,451,416,443,453,467,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,391,407,389,433,412,442],
[484,0,460,437,467,460,468,445],
[500,431,0,438,449,484,445,463],
[484,454,453,0,451,469,425,458],
[502,424,442,440,0,449,429,453],
[458,431,407,422,442,0,419,435],
[479,423,446,466,462,472,0,458],
[449,446,428,433,438,456,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,434,439,447,442,440,467],
[438,0,411,433,419,436,430,449],
[457,480,0,462,478,456,443,478],
[452,458,429,0,439,452,430,460],
[444,472,413,452,0,441,432,467],
[449,455,435,439,450,0,463,464],
[451,461,448,461,459,428,0,464],
[424,442,413,431,424,427,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,384,444,399,394,399,393,450],
[507,0,451,458,435,482,443,488],
[447,440,0,475,452,445,431,446],
[492,433,416,0,428,473,434,445],
[497,456,439,463,0,503,462,468],
[492,409,446,418,388,0,412,445],
[498,448,460,457,429,479,0,467],
[441,403,445,446,423,446,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,430,520,502,497,477,451],
[434,0,463,470,470,468,453,486],
[461,428,0,450,470,476,449,465],
[371,421,441,0,454,449,448,421],
[389,421,421,437,0,453,423,419],
[394,423,415,442,438,0,458,418],
[414,438,442,443,468,433,0,426],
[440,405,426,470,472,473,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,454,456,441,438,465,447],
[413,0,436,434,443,455,444,438],
[437,455,0,442,447,453,474,452],
[435,457,449,0,411,448,441,445],
[450,448,444,480,0,451,451,415],
[453,436,438,443,440,0,465,455],
[426,447,417,450,440,426,0,438],
[444,453,439,446,476,436,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,364,265,221,396,400,330,285],
[527,0,369,390,512,527,398,360],
[626,522,0,502,473,536,438,436],
[670,501,389,0,467,560,441,416],
[495,379,418,424,0,423,427,378],
[491,364,355,331,468,0,434,452],
[561,493,453,450,464,457,0,328],
[606,531,455,475,513,439,563,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,438,450,432,440,431,468],
[437,0,440,438,416,415,428,461],
[453,451,0,434,413,426,466,471],
[441,453,457,0,454,446,452,472],
[459,475,478,437,0,484,489,504],
[451,476,465,445,407,0,451,467],
[460,463,425,439,402,440,0,487],
[423,430,420,419,387,424,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,464,427,457,471,429,508],
[395,0,391,455,437,474,401,416],
[427,500,0,455,437,470,450,461],
[464,436,436,0,464,473,384,424],
[434,454,454,427,0,483,432,427],
[420,417,421,418,408,0,388,438],
[462,490,441,507,459,503,0,472],
[383,475,430,467,464,453,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,434,451,446,460,467,462],
[403,0,431,436,426,417,476,454],
[457,460,0,457,440,447,483,459],
[440,455,434,0,425,449,456,483],
[445,465,451,466,0,451,490,488],
[431,474,444,442,440,0,468,454],
[424,415,408,435,401,423,0,428],
[429,437,432,408,403,437,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,407,304,369,318,463,411],
[497,0,463,493,408,419,421,457],
[484,428,0,513,524,520,516,444],
[587,398,378,0,457,409,514,433],
[522,483,367,434,0,474,492,481],
[573,472,371,482,417,0,428,369],
[428,470,375,377,399,463,0,409],
[480,434,447,458,410,522,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,411,408,415,381,398,374],
[452,0,424,458,487,446,461,415],
[480,467,0,483,397,371,464,384],
[483,433,408,0,458,338,408,434],
[476,404,494,433,0,406,386,405],
[510,445,520,553,485,0,434,450],
[493,430,427,483,505,457,0,422],
[517,476,507,457,486,441,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,456,472,442,466,461,463],
[426,0,469,453,421,445,437,454],
[435,422,0,446,417,452,419,426],
[419,438,445,0,415,420,412,428],
[449,470,474,476,0,459,457,444],
[425,446,439,471,432,0,439,442],
[430,454,472,479,434,452,0,453],
[428,437,465,463,447,449,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,445,385,367,469,480,372],
[419,0,495,341,405,496,489,362],
[446,396,0,294,370,474,491,294],
[506,550,597,0,443,574,609,566],
[524,486,521,448,0,502,451,443],
[422,395,417,317,389,0,480,353],
[411,402,400,282,440,411,0,265],
[519,529,597,325,448,538,626,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,448,452,461,464,433,419],
[448,0,439,424,437,449,434,440],
[443,452,0,447,468,465,450,448],
[439,467,444,0,465,460,451,438],
[430,454,423,426,0,463,415,449],
[427,442,426,431,428,0,435,441],
[458,457,441,440,476,456,0,438],
[472,451,443,453,442,450,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,486,422,445,447,455,436],
[431,0,452,397,408,408,418,433],
[405,439,0,431,392,428,391,414],
[469,494,460,0,416,459,432,452],
[446,483,499,475,0,449,422,486],
[444,483,463,432,442,0,459,446],
[436,473,500,459,469,432,0,412],
[455,458,477,439,405,445,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,427,446,443,449,469,425],
[441,0,442,419,410,420,460,425],
[464,449,0,440,426,451,465,423],
[445,472,451,0,439,453,457,431],
[448,481,465,452,0,433,463,448],
[442,471,440,438,458,0,453,426],
[422,431,426,434,428,438,0,425],
[466,466,468,460,443,465,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,427,441,434,425,461,454],
[503,0,467,432,454,468,501,493],
[464,424,0,449,457,438,464,471],
[450,459,442,0,470,432,471,432],
[457,437,434,421,0,440,495,438],
[466,423,453,459,451,0,477,440],
[430,390,427,420,396,414,0,418],
[437,398,420,459,453,451,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,503,429,472,474,517,492],
[410,0,440,497,494,463,460,456],
[388,451,0,465,432,426,504,396],
[462,394,426,0,473,344,474,446],
[419,397,459,418,0,421,490,426],
[417,428,465,547,470,0,533,505],
[374,431,387,417,401,358,0,388],
[399,435,495,445,465,386,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,397,397,393,364,396,385],
[447,0,418,439,474,425,454,458],
[494,473,0,454,478,458,430,482],
[494,452,437,0,429,478,451,452],
[498,417,413,462,0,399,402,441],
[527,466,433,413,492,0,456,495],
[495,437,461,440,489,435,0,429],
[506,433,409,439,450,396,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,423,475,455,399,429,452],
[409,0,424,450,440,417,430,443],
[468,467,0,470,474,469,431,433],
[416,441,421,0,421,377,416,425],
[436,451,417,470,0,445,428,447],
[492,474,422,514,446,0,448,500],
[462,461,460,475,463,443,0,425],
[439,448,458,466,444,391,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,466,430,446,451,465,488],
[442,0,444,436,432,460,459,473],
[425,447,0,448,433,425,437,455],
[461,455,443,0,444,444,445,466],
[445,459,458,447,0,463,467,475],
[440,431,466,447,428,0,444,464],
[426,432,454,446,424,447,0,455],
[403,418,436,425,416,427,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,426,451,451,449,438,463],
[429,0,426,436,438,434,412,442],
[465,465,0,435,451,476,453,477],
[440,455,456,0,467,475,449,454],
[440,453,440,424,0,446,424,440],
[442,457,415,416,445,0,432,428],
[453,479,438,442,467,459,0,471],
[428,449,414,437,451,463,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,457,399,518,457,415,409],
[462,0,429,393,454,439,356,464],
[434,462,0,393,504,378,385,427],
[492,498,498,0,566,474,436,435],
[373,437,387,325,0,393,362,347],
[434,452,513,417,498,0,405,446],
[476,535,506,455,529,486,0,441],
[482,427,464,456,544,445,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,470,466,463,448,489,439],
[451,0,435,447,451,419,449,430],
[421,456,0,459,458,461,473,454],
[425,444,432,0,445,447,481,441],
[428,440,433,446,0,431,441,408],
[443,472,430,444,460,0,461,432],
[402,442,418,410,450,430,0,440],
[452,461,437,450,483,459,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,444,411,454,451,414,441],
[402,0,436,432,432,413,402,448],
[447,455,0,420,442,426,423,439],
[480,459,471,0,468,440,427,491],
[437,459,449,423,0,457,427,444],
[440,478,465,451,434,0,446,462],
[477,489,468,464,464,445,0,463],
[450,443,452,400,447,429,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,459,457,425,408,437,442],
[447,0,452,439,458,426,438,447],
[432,439,0,459,429,445,446,471],
[434,452,432,0,437,445,423,420],
[466,433,462,454,0,440,443,419],
[483,465,446,446,451,0,445,452],
[454,453,445,468,448,446,0,457],
[449,444,420,471,472,439,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,451,449,440,432,432,443],
[470,0,455,429,458,421,433,445],
[440,436,0,409,435,414,441,442],
[442,462,482,0,456,455,449,463],
[451,433,456,435,0,432,428,446],
[459,470,477,436,459,0,447,447],
[459,458,450,442,463,444,0,455],
[448,446,449,428,445,444,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,461,456,438,434,411,437],
[439,0,458,428,443,416,432,438],
[430,433,0,422,439,403,401,433],
[435,463,469,0,425,429,436,407],
[453,448,452,466,0,452,420,462],
[457,475,488,462,439,0,447,468],
[480,459,490,455,471,444,0,466],
[454,453,458,484,429,423,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,425,423,410,413,416,418],
[474,0,450,453,409,441,449,440],
[466,441,0,440,450,424,459,467],
[468,438,451,0,465,458,472,470],
[481,482,441,426,0,412,475,412],
[478,450,467,433,479,0,431,420],
[475,442,432,419,416,460,0,485],
[473,451,424,421,479,471,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,470,444,447,445,460,437],
[443,0,460,437,458,446,469,447],
[421,431,0,412,442,423,438,425],
[447,454,479,0,459,453,483,433],
[444,433,449,432,0,456,477,451],
[446,445,468,438,435,0,462,436],
[431,422,453,408,414,429,0,424],
[454,444,466,458,440,455,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,462,466,456,444,438,444],
[432,0,451,430,448,418,402,459],
[429,440,0,434,432,420,452,450],
[425,461,457,0,465,450,437,455],
[435,443,459,426,0,452,434,448],
[447,473,471,441,439,0,458,457],
[453,489,439,454,457,433,0,458],
[447,432,441,436,443,434,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,450,431,407,441,440,448],
[479,0,452,448,442,418,469,441],
[441,439,0,433,384,387,455,449],
[460,443,458,0,407,435,449,442],
[484,449,507,484,0,444,485,463],
[450,473,504,456,447,0,495,440],
[451,422,436,442,406,396,0,398],
[443,450,442,449,428,451,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,455,455,462,443,472,407],
[422,0,415,432,440,413,432,426],
[436,476,0,466,457,449,479,447],
[436,459,425,0,422,426,462,426],
[429,451,434,469,0,420,431,431],
[448,478,442,465,471,0,479,438],
[419,459,412,429,460,412,0,441],
[484,465,444,465,460,453,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,452,466,429,444,444,461],
[445,0,451,475,458,455,462,473],
[439,440,0,450,424,436,427,437],
[425,416,441,0,426,427,442,447],
[462,433,467,465,0,452,459,466],
[447,436,455,464,439,0,440,452],
[447,429,464,449,432,451,0,456],
[430,418,454,444,425,439,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,447,471,470,458,445,455],
[458,0,443,469,461,475,459,474],
[444,448,0,463,481,463,462,473],
[420,422,428,0,443,438,411,459],
[421,430,410,448,0,449,433,451],
[433,416,428,453,442,0,441,452],
[446,432,429,480,458,450,0,452],
[436,417,418,432,440,439,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,445,457,447,440,456,435],
[437,0,443,410,443,431,462,438],
[446,448,0,426,442,441,444,456],
[434,481,465,0,438,414,463,456],
[444,448,449,453,0,439,453,462],
[451,460,450,477,452,0,460,436],
[435,429,447,428,438,431,0,417],
[456,453,435,435,429,455,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,442,422,423,456,464,445],
[448,0,461,463,442,455,445,495],
[449,430,0,446,439,454,463,479],
[469,428,445,0,443,456,451,460],
[468,449,452,448,0,438,454,440],
[435,436,437,435,453,0,409,470],
[427,446,428,440,437,482,0,442],
[446,396,412,431,451,421,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,436,441,422,430,439,419],
[441,0,486,463,470,450,440,457],
[455,405,0,427,425,421,414,409],
[450,428,464,0,456,435,442,419],
[469,421,466,435,0,438,464,435],
[461,441,470,456,453,0,472,443],
[452,451,477,449,427,419,0,450],
[472,434,482,472,456,448,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,431,470,486,416,464,489],
[396,0,389,368,431,456,411,474],
[460,502,0,466,472,464,440,509],
[421,523,425,0,476,457,384,486],
[405,460,419,415,0,423,395,426],
[475,435,427,434,468,0,352,475],
[427,480,451,507,496,539,0,483],
[402,417,382,405,465,416,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,457,425,445,431,439,463],
[476,0,488,433,447,445,447,445],
[434,403,0,451,436,416,410,472],
[466,458,440,0,453,455,465,465],
[446,444,455,438,0,455,447,447],
[460,446,475,436,436,0,454,477],
[452,444,481,426,444,437,0,459],
[428,446,419,426,444,414,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,395,407,417,421,437,387],
[459,0,421,452,463,446,477,423],
[496,470,0,449,457,485,479,438],
[484,439,442,0,446,447,477,446],
[474,428,434,445,0,440,460,425],
[470,445,406,444,451,0,448,422],
[454,414,412,414,431,443,0,417],
[504,468,453,445,466,469,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,490,478,440,456,474,485],
[411,0,470,474,455,447,475,450],
[401,421,0,426,421,414,448,423],
[413,417,465,0,397,415,447,440],
[451,436,470,494,0,451,493,469],
[435,444,477,476,440,0,473,440],
[417,416,443,444,398,418,0,406],
[406,441,468,451,422,451,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,445,423,466,441,438,399],
[479,0,460,446,466,447,462,444],
[446,431,0,419,482,433,432,460],
[468,445,472,0,492,453,465,444],
[425,425,409,399,0,413,421,411],
[450,444,458,438,478,0,450,443],
[453,429,459,426,470,441,0,398],
[492,447,431,447,480,448,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,414,417,478,437,403,440],
[467,0,445,419,469,449,424,436],
[477,446,0,444,485,465,436,455],
[474,472,447,0,493,464,443,451],
[413,422,406,398,0,416,407,417],
[454,442,426,427,475,0,446,430],
[488,467,455,448,484,445,0,462],
[451,455,436,440,474,461,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,419,436,495,480,413,400],
[403,0,397,410,450,447,410,429],
[472,494,0,447,505,477,460,444],
[455,481,444,0,491,467,446,460],
[396,441,386,400,0,418,406,423],
[411,444,414,424,473,0,424,435],
[478,481,431,445,485,467,0,427],
[491,462,447,431,468,456,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,401,421,423,401,425,443],
[457,0,434,424,446,440,431,461],
[490,457,0,424,441,454,417,466],
[470,467,467,0,445,469,456,481],
[468,445,450,446,0,436,436,458],
[490,451,437,422,455,0,453,458],
[466,460,474,435,455,438,0,471],
[448,430,425,410,433,433,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,400,412,457,445,415,466],
[451,0,402,423,431,437,446,486],
[491,489,0,459,511,501,436,511],
[479,468,432,0,452,443,423,496],
[434,460,380,439,0,462,436,472],
[446,454,390,448,429,0,439,462],
[476,445,455,468,455,452,0,474],
[425,405,380,395,419,429,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,419,454,438,441,449,479],
[471,0,454,466,441,425,459,458],
[472,437,0,465,442,441,483,480],
[437,425,426,0,452,391,451,443],
[453,450,449,439,0,468,433,445],
[450,466,450,500,423,0,452,466],
[442,432,408,440,458,439,0,460],
[412,433,411,448,446,425,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,452,445,466,450,470,462],
[428,0,421,437,423,437,439,431],
[439,470,0,446,459,450,430,441],
[446,454,445,0,459,449,444,449],
[425,468,432,432,0,444,447,450],
[441,454,441,442,447,0,450,439],
[421,452,461,447,444,441,0,448],
[429,460,450,442,441,452,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,446,430,433,422,423,431],
[483,0,435,453,456,471,446,480],
[445,456,0,436,472,474,492,476],
[461,438,455,0,435,448,447,446],
[458,435,419,456,0,457,438,450],
[469,420,417,443,434,0,453,452],
[468,445,399,444,453,438,0,477],
[460,411,415,445,441,439,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,445,454,413,451,468,447],
[461,0,439,433,433,456,464,457],
[446,452,0,427,440,447,459,434],
[437,458,464,0,466,477,469,436],
[478,458,451,425,0,450,454,468],
[440,435,444,414,441,0,475,437],
[423,427,432,422,437,416,0,426],
[444,434,457,455,423,454,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,366,416,539,441,486,360,391],
[525,0,503,507,516,507,403,446],
[475,388,0,551,476,487,458,426],
[352,384,340,0,418,403,358,389],
[450,375,415,473,0,478,403,435],
[405,384,404,488,413,0,366,437],
[531,488,433,533,488,525,0,465],
[500,445,465,502,456,454,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,462,492,476,475,445,405],
[440,0,429,450,451,426,433,424],
[429,462,0,450,482,472,443,461],
[399,441,441,0,457,441,420,406],
[415,440,409,434,0,427,449,424],
[416,465,419,450,464,0,398,399],
[446,458,448,471,442,493,0,432],
[486,467,430,485,467,492,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,403,448,386,410,440,428],
[421,0,401,461,387,416,473,377],
[488,490,0,448,425,474,466,460],
[443,430,443,0,457,416,486,420],
[505,504,466,434,0,483,460,486],
[481,475,417,475,408,0,466,389],
[451,418,425,405,431,425,0,418],
[463,514,431,471,405,502,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,444,515,462,470,501,457],
[428,0,429,447,432,459,447,410],
[447,462,0,502,491,451,432,452],
[376,444,389,0,425,374,350,384],
[429,459,400,466,0,480,465,423],
[421,432,440,517,411,0,494,393],
[390,444,459,541,426,397,0,416],
[434,481,439,507,468,498,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,487,481,431,454,421,436],
[413,0,460,464,414,414,401,387],
[404,431,0,441,427,433,410,397],
[410,427,450,0,418,413,422,387],
[460,477,464,473,0,373,429,448],
[437,477,458,478,518,0,443,417],
[470,490,481,469,462,448,0,422],
[455,504,494,504,443,474,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,435,473,450,452,452,454],
[442,0,464,466,471,466,449,475],
[456,427,0,445,456,464,467,472],
[418,425,446,0,471,447,403,468],
[441,420,435,420,0,454,416,461],
[439,425,427,444,437,0,434,452],
[439,442,424,488,475,457,0,486],
[437,416,419,423,430,439,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,447,439,452,447,453,454],
[437,0,480,432,467,447,472,446],
[444,411,0,411,428,432,421,435],
[452,459,480,0,453,464,464,435],
[439,424,463,438,0,455,447,479],
[444,444,459,427,436,0,439,444],
[438,419,470,427,444,452,0,442],
[437,445,456,456,412,447,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,383,447,510,321,573,449,509],
[508,0,636,382,509,636,448,638],
[444,255,0,255,254,381,320,382],
[381,509,636,0,319,699,512,510],
[570,382,637,572,0,698,576,573],
[318,255,510,192,193,0,193,383],
[442,443,571,379,315,698,0,509],
[382,253,509,381,318,508,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,437,448,419,467,461,450],
[418,0,429,426,430,436,452,419],
[454,462,0,450,430,453,462,456],
[443,465,441,0,438,443,446,434],
[472,461,461,453,0,479,468,443],
[424,455,438,448,412,0,448,423],
[430,439,429,445,423,443,0,418],
[441,472,435,457,448,468,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,546,515,429,469,473,462],
[403,0,480,428,439,403,420,433],
[345,411,0,427,401,420,397,421],
[376,463,464,0,441,464,478,435],
[462,452,490,450,0,423,474,482],
[422,488,471,427,468,0,462,424],
[418,471,494,413,417,429,0,433],
[429,458,470,456,409,467,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,464,479,446,422,493,449],
[431,0,456,552,459,464,486,443],
[427,435,0,531,456,430,472,457],
[412,339,360,0,385,380,417,395],
[445,432,435,506,0,394,492,453],
[469,427,461,511,497,0,492,443],
[398,405,419,474,399,399,0,402],
[442,448,434,496,438,448,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,432,435,444,436,448,429],
[423,0,427,429,466,459,444,434],
[459,464,0,460,435,461,479,470],
[456,462,431,0,438,494,474,466],
[447,425,456,453,0,454,466,444],
[455,432,430,397,437,0,454,462],
[443,447,412,417,425,437,0,446],
[462,457,421,425,447,429,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,458,462,459,475,443,535],
[426,0,437,424,478,454,415,512],
[433,454,0,432,431,470,441,465],
[429,467,459,0,513,510,464,508],
[432,413,460,378,0,489,411,467],
[416,437,421,381,402,0,409,458],
[448,476,450,427,480,482,0,488],
[356,379,426,383,424,433,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,441,426,460,455,440,425],
[444,0,428,447,424,474,449,468],
[450,463,0,460,449,474,469,426],
[465,444,431,0,435,469,425,444],
[431,467,442,456,0,463,435,458],
[436,417,417,422,428,0,443,399],
[451,442,422,466,456,448,0,435],
[466,423,465,447,433,492,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,414,411,416,453,440,412],
[466,0,430,431,427,442,426,437],
[477,461,0,455,431,457,429,448],
[480,460,436,0,443,473,451,466],
[475,464,460,448,0,473,435,444],
[438,449,434,418,418,0,418,435],
[451,465,462,440,456,473,0,451],
[479,454,443,425,447,456,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,465,477,441,440,449,452],
[441,0,452,466,455,437,428,434],
[426,439,0,443,445,435,429,438],
[414,425,448,0,442,433,421,443],
[450,436,446,449,0,424,442,448],
[451,454,456,458,467,0,444,453],
[442,463,462,470,449,447,0,463],
[439,457,453,448,443,438,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,446,441,449,428,428,449],
[447,0,443,417,429,427,416,450],
[445,448,0,422,427,431,423,454],
[450,474,469,0,441,431,448,446],
[442,462,464,450,0,446,438,474],
[463,464,460,460,445,0,461,476],
[463,475,468,443,453,430,0,466],
[442,441,437,445,417,415,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,432,430,449,447,424,431],
[458,0,430,412,456,448,416,410],
[459,461,0,451,470,457,425,446],
[461,479,440,0,456,471,446,447],
[442,435,421,435,0,455,418,429],
[444,443,434,420,436,0,428,448],
[467,475,466,445,473,463,0,446],
[460,481,445,444,462,443,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,442,456,434,475,423,503],
[461,0,404,429,458,472,454,456],
[449,487,0,453,436,428,440,504],
[435,462,438,0,390,445,448,469],
[457,433,455,501,0,453,446,490],
[416,419,463,446,438,0,443,514],
[468,437,451,443,445,448,0,521],
[388,435,387,422,401,377,370,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,456,462,498,409,422,473],
[472,0,443,435,469,432,422,482],
[435,448,0,493,469,448,424,487],
[429,456,398,0,415,414,414,474],
[393,422,422,476,0,420,470,453],
[482,459,443,477,471,0,453,479],
[469,469,467,477,421,438,0,460],
[418,409,404,417,438,412,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,412,449,400,417,425,430],
[472,0,435,462,454,441,456,443],
[479,456,0,462,483,443,466,473],
[442,429,429,0,434,438,447,435],
[491,437,408,457,0,457,464,480],
[474,450,448,453,434,0,458,453],
[466,435,425,444,427,433,0,445],
[461,448,418,456,411,438,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,461,445,448,461,457,453],
[433,0,455,434,431,411,444,448],
[430,436,0,424,442,419,414,408],
[446,457,467,0,471,426,435,443],
[443,460,449,420,0,416,436,420],
[430,480,472,465,475,0,442,462],
[434,447,477,456,455,449,0,442],
[438,443,483,448,471,429,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,455,490,429,449,450,457],
[418,0,432,412,424,438,385,381],
[436,459,0,457,429,454,438,430],
[401,479,434,0,418,446,423,430],
[462,467,462,473,0,440,459,437],
[442,453,437,445,451,0,434,433],
[441,506,453,468,432,457,0,421],
[434,510,461,461,454,458,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,444,465,446,415,458,462],
[440,0,400,437,464,402,410,423],
[447,491,0,448,508,467,439,455],
[426,454,443,0,446,444,453,486],
[445,427,383,445,0,409,406,460],
[476,489,424,447,482,0,438,480],
[433,481,452,438,485,453,0,489],
[429,468,436,405,431,411,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,417,425,427,379,433,458],
[440,0,465,456,443,418,412,462],
[474,426,0,403,409,399,413,455],
[466,435,488,0,430,427,454,499],
[464,448,482,461,0,436,441,475],
[512,473,492,464,455,0,442,498],
[458,479,478,437,450,449,0,490],
[433,429,436,392,416,393,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,450,456,454,440,443,453],
[416,0,436,438,438,457,430,449],
[441,455,0,447,439,443,441,468],
[435,453,444,0,419,431,437,445],
[437,453,452,472,0,442,460,458],
[451,434,448,460,449,0,449,472],
[448,461,450,454,431,442,0,457],
[438,442,423,446,433,419,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,444,439,420,465,465,476],
[454,0,457,443,443,480,442,504],
[447,434,0,425,443,458,427,466],
[452,448,466,0,418,466,482,489],
[471,448,448,473,0,481,432,482],
[426,411,433,425,410,0,443,453],
[426,449,464,409,459,448,0,480],
[415,387,425,402,409,438,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,460,463,435,434,416,448],
[467,0,458,462,431,449,445,456],
[431,433,0,456,428,454,455,446],
[428,429,435,0,447,417,445,459],
[456,460,463,444,0,429,464,451],
[457,442,437,474,462,0,457,445],
[475,446,436,446,427,434,0,446],
[443,435,445,432,440,446,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,464,456,473,438,449,448],
[459,0,459,469,472,439,461,452],
[427,432,0,457,445,441,435,439],
[435,422,434,0,456,444,433,461],
[418,419,446,435,0,439,428,430],
[453,452,450,447,452,0,433,438],
[442,430,456,458,463,458,0,450],
[443,439,452,430,461,453,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,440,464,460,466,460,477],
[440,0,432,427,428,456,454,448],
[451,459,0,441,448,470,474,476],
[427,464,450,0,434,461,471,478],
[431,463,443,457,0,457,456,435],
[425,435,421,430,434,0,469,469],
[431,437,417,420,435,422,0,431],
[414,443,415,413,456,422,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,480,481,455,438,455,469],
[421,0,450,456,425,440,463,469],
[411,441,0,442,414,451,452,474],
[410,435,449,0,391,402,426,432],
[436,466,477,500,0,442,464,491],
[453,451,440,489,449,0,463,481],
[436,428,439,465,427,428,0,476],
[422,422,417,459,400,410,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,469,491,459,440,423,504],
[418,0,414,433,409,412,432,485],
[422,477,0,475,471,470,466,520],
[400,458,416,0,432,426,430,471],
[432,482,420,459,0,448,481,474],
[451,479,421,465,443,0,399,450],
[468,459,425,461,410,492,0,480],
[387,406,371,420,417,441,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,476,453,446,432,476,439],
[409,0,460,444,447,410,448,459],
[415,431,0,469,455,428,452,424],
[438,447,422,0,461,450,448,458],
[445,444,436,430,0,432,457,425],
[459,481,463,441,459,0,463,456],
[415,443,439,443,434,428,0,438],
[452,432,467,433,466,435,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,435,429,433,408,414,420],
[445,0,470,416,442,419,405,412],
[456,421,0,393,446,424,420,427],
[462,475,498,0,466,465,438,470],
[458,449,445,425,0,443,418,429],
[483,472,467,426,448,0,450,437],
[477,486,471,453,473,441,0,435],
[471,479,464,421,462,454,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,437,444,426,451,449,402],
[419,0,403,409,405,401,387,398],
[454,488,0,465,442,432,437,452],
[447,482,426,0,406,399,404,411],
[465,486,449,485,0,362,408,409],
[440,490,459,492,529,0,475,476],
[442,504,454,487,483,416,0,475],
[489,493,439,480,482,415,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,480,473,464,448,434,445],
[447,0,461,449,452,460,455,427],
[411,430,0,397,410,420,396,389],
[418,442,494,0,438,444,428,441],
[427,439,481,453,0,433,421,402],
[443,431,471,447,458,0,439,426],
[457,436,495,463,470,452,0,454],
[446,464,502,450,489,465,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,454,449,435,458,463,428],
[454,0,445,446,443,455,453,464],
[437,446,0,475,447,443,477,430],
[442,445,416,0,434,467,456,429],
[456,448,444,457,0,470,457,454],
[433,436,448,424,421,0,456,433],
[428,438,414,435,434,435,0,449],
[463,427,461,462,437,458,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,428,439,469,415,413,467],
[442,0,437,400,442,426,428,454],
[463,454,0,418,445,462,465,458],
[452,491,473,0,432,457,466,470],
[422,449,446,459,0,421,434,442],
[476,465,429,434,470,0,451,444],
[478,463,426,425,457,440,0,460],
[424,437,433,421,449,447,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,416,430,413,439,440,447],
[444,0,424,435,447,442,445,423],
[475,467,0,457,434,468,485,477],
[461,456,434,0,428,452,452,445],
[478,444,457,463,0,424,466,448],
[452,449,423,439,467,0,466,441],
[451,446,406,439,425,425,0,445],
[444,468,414,446,443,450,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,520,490,457,487,431,481],
[392,0,478,405,447,397,391,378],
[371,413,0,417,395,438,392,403],
[401,486,474,0,405,430,396,412],
[434,444,496,486,0,468,411,447],
[404,494,453,461,423,0,455,446],
[460,500,499,495,480,436,0,436],
[410,513,488,479,444,445,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,286,286,365,487,364,328],
[485,0,323,405,359,525,364,446],
[605,568,0,490,523,403,482,485],
[605,486,401,0,525,486,484,486],
[526,532,368,366,0,446,446,446],
[404,366,488,405,445,0,486,449],
[527,527,409,407,445,405,0,450],
[563,445,406,405,445,442,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,447,437,442,456,450,475],
[481,0,453,454,467,472,444,501],
[444,438,0,427,442,460,436,472],
[454,437,464,0,465,465,467,509],
[449,424,449,426,0,456,439,485],
[435,419,431,426,435,0,423,463],
[441,447,455,424,452,468,0,470],
[416,390,419,382,406,428,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,372,433,406,442,441,441,446],
[519,0,459,460,483,541,429,483],
[458,432,0,438,455,487,475,458],
[485,431,453,0,468,476,443,472],
[449,408,436,423,0,458,487,481],
[450,350,404,415,433,0,451,410],
[450,462,416,448,404,440,0,437],
[445,408,433,419,410,481,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,434,441,456,418,468,472],
[460,0,481,446,496,450,432,458],
[457,410,0,413,473,422,442,437],
[450,445,478,0,479,450,479,460],
[435,395,418,412,0,428,470,420],
[473,441,469,441,463,0,488,461],
[423,459,449,412,421,403,0,451],
[419,433,454,431,471,430,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,456,424,444,440,434,437],
[483,0,461,423,490,484,431,469],
[435,430,0,384,413,407,462,437],
[467,468,507,0,441,456,464,477],
[447,401,478,450,0,441,490,471],
[451,407,484,435,450,0,460,449],
[457,460,429,427,401,431,0,483],
[454,422,454,414,420,442,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,433,458,446,468,395,436],
[460,0,450,447,452,446,430,445],
[458,441,0,446,462,459,457,443],
[433,444,445,0,440,450,409,471],
[445,439,429,451,0,473,435,484],
[423,445,432,441,418,0,394,432],
[496,461,434,482,456,497,0,471],
[455,446,448,420,407,459,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,382,420,454,433,399,428],
[449,0,395,399,438,468,400,435],
[509,496,0,451,485,490,429,482],
[471,492,440,0,469,457,449,462],
[437,453,406,422,0,449,370,435],
[458,423,401,434,442,0,410,458],
[492,491,462,442,521,481,0,490],
[463,456,409,429,456,433,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,454,451,424,424,452,464],
[444,0,459,413,408,401,423,414],
[437,432,0,405,402,410,463,377],
[440,478,486,0,441,428,420,407],
[467,483,489,450,0,430,462,398],
[467,490,481,463,461,0,443,425],
[439,468,428,471,429,448,0,380],
[427,477,514,484,493,466,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,412,432,399,409,424,407],
[456,0,436,421,406,429,463,427],
[479,455,0,449,416,425,504,424],
[459,470,442,0,442,435,469,428],
[492,485,475,449,0,447,468,442],
[482,462,466,456,444,0,481,448],
[467,428,387,422,423,410,0,396],
[484,464,467,463,449,443,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,459,484,459,455,449,458],
[471,0,482,474,451,432,458,477],
[432,409,0,437,440,419,391,429],
[407,417,454,0,418,448,428,468],
[432,440,451,473,0,419,427,437],
[436,459,472,443,472,0,466,481],
[442,433,500,463,464,425,0,462],
[433,414,462,423,454,410,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,479,457,441,481,449,451],
[435,0,463,421,428,460,423,445],
[412,428,0,443,446,435,462,414],
[434,470,448,0,454,462,477,458],
[450,463,445,437,0,444,469,473],
[410,431,456,429,447,0,426,471],
[442,468,429,414,422,465,0,442],
[440,446,477,433,418,420,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,436,429,457,430,404,408],
[432,0,466,424,459,433,455,427],
[455,425,0,470,442,421,403,453],
[462,467,421,0,427,440,426,408],
[434,432,449,464,0,438,458,420],
[461,458,470,451,453,0,438,451],
[487,436,488,465,433,453,0,435],
[483,464,438,483,471,440,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,447,475,462,462,479,469],
[461,0,473,466,437,467,459,474],
[444,418,0,458,469,456,439,477],
[416,425,433,0,465,453,446,444],
[429,454,422,426,0,469,452,437],
[429,424,435,438,422,0,442,458],
[412,432,452,445,439,449,0,449],
[422,417,414,447,454,433,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,450,428,469,480,481,447],
[409,0,448,426,439,456,452,416],
[441,443,0,449,465,473,496,451],
[463,465,442,0,483,487,477,441],
[422,452,426,408,0,455,459,416],
[411,435,418,404,436,0,440,418],
[410,439,395,414,432,451,0,405],
[444,475,440,450,475,473,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,459,460,449,459,434,462],
[421,0,445,437,433,440,434,446],
[432,446,0,423,436,439,426,460],
[431,454,468,0,436,426,455,440],
[442,458,455,455,0,452,455,463],
[432,451,452,465,439,0,453,464],
[457,457,465,436,436,438,0,476],
[429,445,431,451,428,427,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,479,462,456,426,515,434],
[433,0,390,365,398,410,469,421],
[412,501,0,451,470,444,475,434],
[429,526,440,0,451,399,458,410],
[435,493,421,440,0,458,419,469],
[465,481,447,492,433,0,491,458],
[376,422,416,433,472,400,0,429],
[457,470,457,481,422,433,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,469,434,462,449,469,440],
[416,0,399,428,496,454,484,451],
[422,492,0,408,502,429,447,431],
[457,463,483,0,509,436,489,442],
[429,395,389,382,0,390,413,359],
[442,437,462,455,501,0,483,453],
[422,407,444,402,478,408,0,412],
[451,440,460,449,532,438,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,583,538,539,500,519,436,496],
[308,0,477,463,378,435,377,456],
[353,414,0,335,396,417,397,456],
[352,428,556,0,474,494,533,476],
[391,513,495,417,0,513,371,391],
[372,456,474,397,378,0,313,458],
[455,514,494,358,520,578,0,432],
[395,435,435,415,500,433,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,472,421,428,442,452,458],
[450,0,474,427,463,452,447,444],
[419,417,0,432,424,426,435,437],
[470,464,459,0,454,451,434,447],
[463,428,467,437,0,450,444,428],
[449,439,465,440,441,0,453,462],
[439,444,456,457,447,438,0,445],
[433,447,454,444,463,429,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,429,446,443,485,440,449],
[444,0,450,448,438,459,425,422],
[462,441,0,444,429,485,438,449],
[445,443,447,0,434,446,450,418],
[448,453,462,457,0,462,445,420],
[406,432,406,445,429,0,430,426],
[451,466,453,441,446,461,0,442],
[442,469,442,473,471,465,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,593,596,301,372,372,445,373],
[298,0,522,449,448,372,371,523],
[295,369,0,374,370,370,296,444],
[590,442,517,0,589,519,516,368],
[519,443,521,302,0,224,372,449],
[519,519,521,372,667,0,444,521],
[446,520,595,375,519,447,0,522],
[518,368,447,523,442,370,369,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,505,422,437,488,480,472],
[400,0,454,389,467,478,406,421],
[386,437,0,433,426,468,412,451],
[469,502,458,0,426,496,455,444],
[454,424,465,465,0,468,433,456],
[403,413,423,395,423,0,402,447],
[411,485,479,436,458,489,0,479],
[419,470,440,447,435,444,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,447,434,440,413,435,441],
[478,0,461,471,456,441,447,454],
[444,430,0,429,441,417,418,458],
[457,420,462,0,452,442,439,462],
[451,435,450,439,0,442,435,465],
[478,450,474,449,449,0,442,470],
[456,444,473,452,456,449,0,460],
[450,437,433,429,426,421,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,384,419,410,422,411,440],
[476,0,443,427,423,442,463,458],
[507,448,0,434,460,447,449,462],
[472,464,457,0,444,437,461,450],
[481,468,431,447,0,457,440,471],
[469,449,444,454,434,0,444,456],
[480,428,442,430,451,447,0,463],
[451,433,429,441,420,435,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,444,436,431,442,459,438],
[435,0,436,427,432,429,446,449],
[447,455,0,449,452,430,471,456],
[455,464,442,0,428,454,464,450],
[460,459,439,463,0,458,470,461],
[449,462,461,437,433,0,465,432],
[432,445,420,427,421,426,0,413],
[453,442,435,441,430,459,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,422,400,522,411,521,495],
[451,0,481,549,569,432,583,456],
[469,410,0,470,499,391,444,442],
[491,342,421,0,451,373,483,469],
[369,322,392,440,0,357,432,452],
[480,459,500,518,534,0,497,424],
[370,308,447,408,459,394,0,435],
[396,435,449,422,439,467,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,421,444,397,421,459,444],
[443,0,418,379,405,394,468,453],
[470,473,0,441,410,403,426,437],
[447,512,450,0,438,444,438,468],
[494,486,481,453,0,478,499,442],
[470,497,488,447,413,0,494,465],
[432,423,465,453,392,397,0,436],
[447,438,454,423,449,426,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,565,414,437,479,374,482],
[518,0,521,476,521,408,500,561],
[326,370,0,349,353,368,438,411],
[477,415,542,0,414,438,482,502],
[454,370,538,477,0,473,415,539],
[412,483,523,453,418,0,483,481],
[517,391,453,409,476,408,0,519],
[409,330,480,389,352,410,372,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,452,464,445,467,448,454],
[422,0,418,443,407,412,413,424],
[439,473,0,448,429,437,445,413],
[427,448,443,0,415,446,439,435],
[446,484,462,476,0,454,449,444],
[424,479,454,445,437,0,445,456],
[443,478,446,452,442,446,0,445],
[437,467,478,456,447,435,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,453,465,460,476,437,516],
[441,0,490,456,458,480,448,478],
[438,401,0,411,422,472,449,456],
[426,435,480,0,430,457,451,516],
[431,433,469,461,0,457,481,487],
[415,411,419,434,434,0,430,460],
[454,443,442,440,410,461,0,452],
[375,413,435,375,404,431,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,428,417,463,435,442,440],
[435,0,451,398,467,422,429,452],
[463,440,0,415,434,435,455,436],
[474,493,476,0,484,460,436,458],
[428,424,457,407,0,424,425,435],
[456,469,456,431,467,0,454,466],
[449,462,436,455,466,437,0,441],
[451,439,455,433,456,425,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,468,442,481,490,443,453],
[445,0,465,448,481,484,462,451],
[423,426,0,403,452,468,414,422],
[449,443,488,0,466,491,466,438],
[410,410,439,425,0,425,439,413],
[401,407,423,400,466,0,425,412],
[448,429,477,425,452,466,0,408],
[438,440,469,453,478,479,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,456,446,455,458,440,468],
[447,0,470,440,452,454,462,464],
[435,421,0,406,427,425,431,444],
[445,451,485,0,445,470,457,476],
[436,439,464,446,0,459,437,447],
[433,437,466,421,432,0,434,452],
[451,429,460,434,454,457,0,474],
[423,427,447,415,444,439,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,460,453,456,431,450,467],
[440,0,451,444,446,443,451,462],
[431,440,0,435,421,424,426,459],
[438,447,456,0,436,423,448,492],
[435,445,470,455,0,454,448,474],
[460,448,467,468,437,0,462,463],
[441,440,465,443,443,429,0,478],
[424,429,432,399,417,428,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,447,459,470,461,468,441],
[443,0,445,419,427,433,432,431],
[444,446,0,460,461,453,451,438],
[432,472,431,0,442,444,441,461],
[421,464,430,449,0,455,458,431],
[430,458,438,447,436,0,459,461],
[423,459,440,450,433,432,0,444],
[450,460,453,430,460,430,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,494,422,461,420,491,497],
[397,0,394,422,447,432,461,465],
[397,497,0,468,445,435,436,460],
[469,469,423,0,453,402,438,430],
[430,444,446,438,0,470,468,516],
[471,459,456,489,421,0,452,478],
[400,430,455,453,423,439,0,421],
[394,426,431,461,375,413,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,408,423,427,430,423,424],
[441,0,391,405,403,388,422,397],
[483,500,0,473,447,441,459,435],
[468,486,418,0,441,448,430,451],
[464,488,444,450,0,443,421,419],
[461,503,450,443,448,0,465,426],
[468,469,432,461,470,426,0,441],
[467,494,456,440,472,465,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,553,408,516,516,490,429],
[403,0,471,473,498,401,345,528],
[338,420,0,422,423,481,398,508],
[483,418,469,0,503,532,423,524],
[375,393,468,388,0,451,376,430],
[375,490,410,359,440,0,328,462],
[401,546,493,468,515,563,0,573],
[462,363,383,367,461,429,318,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,441,461,470,478,448,468],
[425,0,450,437,441,453,427,443],
[450,441,0,436,445,453,450,439],
[430,454,455,0,440,476,453,462],
[421,450,446,451,0,473,464,442],
[413,438,438,415,418,0,434,435],
[443,464,441,438,427,457,0,447],
[423,448,452,429,449,456,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,417,414,434,427,425,418],
[462,0,451,430,472,469,449,432],
[474,440,0,446,471,466,456,438],
[477,461,445,0,461,483,448,441],
[457,419,420,430,0,443,423,425],
[464,422,425,408,448,0,414,435],
[466,442,435,443,468,477,0,446],
[473,459,453,450,466,456,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,467,442,471,477,481,471],
[455,0,435,431,452,452,443,494],
[424,456,0,434,441,455,424,481],
[449,460,457,0,426,472,437,488],
[420,439,450,465,0,463,451,463],
[414,439,436,419,428,0,442,447],
[410,448,467,454,440,449,0,485],
[420,397,410,403,428,444,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,345,486,432,459,490,428],
[458,0,404,457,436,516,486,486],
[546,487,0,486,457,486,488,372],
[405,434,405,0,407,461,346,493],
[459,455,434,484,0,399,370,426],
[432,375,405,430,492,0,429,430],
[401,405,403,545,521,462,0,433],
[463,405,519,398,465,461,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,424,428,423,426,421,439],
[459,0,436,442,428,439,425,433],
[467,455,0,454,443,446,455,448],
[463,449,437,0,450,447,454,441],
[468,463,448,441,0,444,451,452],
[465,452,445,444,447,0,433,446],
[470,466,436,437,440,458,0,462],
[452,458,443,450,439,445,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,479,446,471,458,439,448],
[444,0,443,443,462,467,459,484],
[412,448,0,424,454,444,427,468],
[445,448,467,0,457,455,439,456],
[420,429,437,434,0,424,424,455],
[433,424,447,436,467,0,454,453],
[452,432,464,452,467,437,0,470],
[443,407,423,435,436,438,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,451,461,454,461,429,460],
[443,0,459,439,445,455,426,446],
[440,432,0,452,445,453,462,440],
[430,452,439,0,445,416,429,462],
[437,446,446,446,0,434,449,454],
[430,436,438,475,457,0,434,451],
[462,465,429,462,442,457,0,471],
[431,445,451,429,437,440,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,442,414,470,418,445,437],
[460,0,454,453,490,464,437,420],
[449,437,0,441,472,445,435,408],
[477,438,450,0,478,429,452,422],
[421,401,419,413,0,430,414,389],
[473,427,446,462,461,0,457,439],
[446,454,456,439,477,434,0,465],
[454,471,483,469,502,452,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,442,438,463,431,446,443],
[451,0,437,446,454,447,428,462],
[449,454,0,438,447,435,439,450],
[453,445,453,0,459,432,450,457],
[428,437,444,432,0,414,417,436],
[460,444,456,459,477,0,458,475],
[445,463,452,441,474,433,0,445],
[448,429,441,434,455,416,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,418,434,406,420,421,396],
[496,0,425,488,421,428,485,457],
[473,466,0,474,435,461,450,447],
[457,403,417,0,421,408,442,416],
[485,470,456,470,0,423,427,439],
[471,463,430,483,468,0,449,447],
[470,406,441,449,464,442,0,439],
[495,434,444,475,452,444,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,472,446,477,394,427,418],
[437,0,426,463,442,425,470,397],
[419,465,0,468,489,414,428,429],
[445,428,423,0,471,406,449,425],
[414,449,402,420,0,446,407,401],
[497,466,477,485,445,0,452,461],
[464,421,463,442,484,439,0,452],
[473,494,462,466,490,430,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,502,476,455,449,446,433],
[430,0,445,452,384,419,437,437],
[389,446,0,418,395,430,408,406],
[415,439,473,0,442,446,446,442],
[436,507,496,449,0,471,464,439],
[442,472,461,445,420,0,444,440],
[445,454,483,445,427,447,0,466],
[458,454,485,449,452,451,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,421,463,447,507,411,483],
[445,0,459,448,448,476,408,498],
[470,432,0,443,458,454,456,473],
[428,443,448,0,439,453,410,449],
[444,443,433,452,0,422,420,439],
[384,415,437,438,469,0,433,478],
[480,483,435,481,471,458,0,478],
[408,393,418,442,452,413,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,438,423,425,442,445,411],
[460,0,446,404,439,471,453,429],
[453,445,0,440,404,444,452,429],
[468,487,451,0,459,484,452,443],
[466,452,487,432,0,452,431,464],
[449,420,447,407,439,0,424,439],
[446,438,439,439,460,467,0,469],
[480,462,462,448,427,452,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,392,444,376,414,413,458],
[487,0,437,488,442,506,452,521],
[499,454,0,483,439,472,452,478],
[447,403,408,0,417,399,418,482],
[515,449,452,474,0,431,434,452],
[477,385,419,492,460,0,456,461],
[478,439,439,473,457,435,0,469],
[433,370,413,409,439,430,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,453,421,418,437,428,422],
[437,0,443,438,447,440,425,439],
[438,448,0,401,435,434,426,423],
[470,453,490,0,457,470,442,460],
[473,444,456,434,0,453,443,466],
[454,451,457,421,438,0,426,441],
[463,466,465,449,448,465,0,444],
[469,452,468,431,425,450,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,465,458,475,443,457,463],
[416,0,438,444,438,436,439,427],
[426,453,0,465,453,435,411,419],
[433,447,426,0,463,444,454,469],
[416,453,438,428,0,428,459,444],
[448,455,456,447,463,0,461,440],
[434,452,480,437,432,430,0,442],
[428,464,472,422,447,451,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,424,421,434,392,437,449],
[495,0,477,482,467,467,435,463],
[467,414,0,467,474,437,446,432],
[470,409,424,0,436,426,439,432],
[457,424,417,455,0,426,411,390],
[499,424,454,465,465,0,431,475],
[454,456,445,452,480,460,0,460],
[442,428,459,459,501,416,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,430,453,456,442,447,460],
[429,0,427,438,421,443,414,454],
[461,464,0,464,482,456,428,466],
[438,453,427,0,461,436,459,465],
[435,470,409,430,0,431,435,428],
[449,448,435,455,460,0,450,451],
[444,477,463,432,456,441,0,448],
[431,437,425,426,463,440,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,442,440,454,475,438,427],
[457,0,443,450,432,470,412,451],
[449,448,0,430,425,465,428,412],
[451,441,461,0,459,468,448,454],
[437,459,466,432,0,489,407,435],
[416,421,426,423,402,0,409,411],
[453,479,463,443,484,482,0,467],
[464,440,479,437,456,480,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,464,445,430,497,425,433],
[440,0,438,406,422,454,405,408],
[427,453,0,407,375,459,446,434],
[446,485,484,0,459,489,451,431],
[461,469,516,432,0,480,450,473],
[394,437,432,402,411,0,404,392],
[466,486,445,440,441,487,0,421],
[458,483,457,460,418,499,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,468,427,446,440,465,451],
[433,0,452,442,438,446,465,447],
[423,439,0,428,433,438,458,424],
[464,449,463,0,447,441,455,439],
[445,453,458,444,0,446,439,472],
[451,445,453,450,445,0,463,433],
[426,426,433,436,452,428,0,431],
[440,444,467,452,419,458,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,425,455,434,456,448,430],
[447,0,429,422,450,453,418,433],
[466,462,0,435,427,472,452,445],
[436,469,456,0,447,445,442,461],
[457,441,464,444,0,437,421,453],
[435,438,419,446,454,0,439,456],
[443,473,439,449,470,452,0,457],
[461,458,446,430,438,435,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,481,439,461,479,473,484],
[421,0,457,451,467,475,440,465],
[410,434,0,424,465,462,435,470],
[452,440,467,0,478,467,435,456],
[430,424,426,413,0,439,430,453],
[412,416,429,424,452,0,427,431],
[418,451,456,456,461,464,0,446],
[407,426,421,435,438,460,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,420,432,438,472,477,472],
[414,0,414,455,440,459,460,459],
[471,477,0,469,442,498,463,478],
[459,436,422,0,462,466,429,492],
[453,451,449,429,0,468,459,463],
[419,432,393,425,423,0,438,457],
[414,431,428,462,432,453,0,448],
[419,432,413,399,428,434,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,425,416,418,430,433,417],
[472,0,461,448,442,489,446,434],
[466,430,0,450,441,452,445,434],
[475,443,441,0,442,446,436,428],
[473,449,450,449,0,462,453,434],
[461,402,439,445,429,0,442,417],
[458,445,446,455,438,449,0,456],
[474,457,457,463,457,474,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,404,424,433,391,417,392],
[470,0,442,441,472,467,430,448],
[487,449,0,453,440,428,460,430],
[467,450,438,0,471,451,448,428],
[458,419,451,420,0,422,451,413],
[500,424,463,440,469,0,440,427],
[474,461,431,443,440,451,0,425],
[499,443,461,463,478,464,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,471,493,443,457,451,466],
[424,0,435,449,443,419,447,429],
[420,456,0,477,438,445,437,435],
[398,442,414,0,413,434,416,455],
[448,448,453,478,0,456,442,481],
[434,472,446,457,435,0,428,447],
[440,444,454,475,449,463,0,476],
[425,462,456,436,410,444,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,458,446,466,445,464,465],
[432,0,452,427,422,430,459,456],
[433,439,0,431,418,430,402,432],
[445,464,460,0,416,449,449,478],
[425,469,473,475,0,456,484,461],
[446,461,461,442,435,0,488,456],
[427,432,489,442,407,403,0,450],
[426,435,459,413,430,435,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,432,480,410,457,451,458],
[458,0,442,458,431,424,414,472],
[459,449,0,473,440,480,465,478],
[411,433,418,0,411,412,409,438],
[481,460,451,480,0,463,439,475],
[434,467,411,479,428,0,440,462],
[440,477,426,482,452,451,0,455],
[433,419,413,453,416,429,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,468,455,529,482,470,406],
[405,0,349,333,454,483,408,379],
[423,542,0,404,553,616,528,495],
[436,558,487,0,499,451,471,511],
[362,437,338,392,0,462,423,362],
[409,408,275,440,429,0,412,422],
[421,483,363,420,468,479,0,419],
[485,512,396,380,529,469,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,452,411,453,486,422,468],
[453,0,451,461,462,424,442,452],
[439,440,0,449,461,451,420,464],
[480,430,442,0,491,454,429,438],
[438,429,430,400,0,462,409,430],
[405,467,440,437,429,0,451,454],
[469,449,471,462,482,440,0,490],
[423,439,427,453,461,437,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,407,426,442,438,414,419],
[450,0,446,448,457,453,419,451],
[484,445,0,455,459,463,453,456],
[465,443,436,0,453,488,443,462],
[449,434,432,438,0,444,445,448],
[453,438,428,403,447,0,425,433],
[477,472,438,448,446,466,0,458],
[472,440,435,429,443,458,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,447,471,453,438,449,454],
[409,0,426,476,426,455,430,444],
[444,465,0,488,445,456,473,466],
[420,415,403,0,408,422,418,457],
[438,465,446,483,0,448,427,449],
[453,436,435,469,443,0,424,438],
[442,461,418,473,464,467,0,445],
[437,447,425,434,442,453,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,466,457,486,473,454,445],
[430,0,452,433,461,458,447,430],
[425,439,0,435,466,431,419,434],
[434,458,456,0,470,435,439,446],
[405,430,425,421,0,419,424,421],
[418,433,460,456,472,0,425,438],
[437,444,472,452,467,466,0,443],
[446,461,457,445,470,453,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,471,463,458,446,457,433],
[413,0,425,423,423,452,439,417],
[420,466,0,403,445,456,446,425],
[428,468,488,0,441,470,479,448],
[433,468,446,450,0,460,458,439],
[445,439,435,421,431,0,441,421],
[434,452,445,412,433,450,0,426],
[458,474,466,443,452,470,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,491,440,469,520,463,418],
[444,0,463,461,473,500,473,427],
[400,428,0,415,443,460,435,390],
[451,430,476,0,503,492,484,472],
[422,418,448,388,0,473,440,440],
[371,391,431,399,418,0,411,372],
[428,418,456,407,451,480,0,421],
[473,464,501,419,451,519,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,424,439,441,454,451,449],
[439,0,446,428,431,466,462,439],
[467,445,0,454,444,449,466,452],
[452,463,437,0,460,454,476,456],
[450,460,447,431,0,438,457,431],
[437,425,442,437,453,0,465,455],
[440,429,425,415,434,426,0,436],
[442,452,439,435,460,436,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,459,452,439,458,449,466],
[439,0,423,420,432,438,393,411],
[432,468,0,453,459,476,455,460],
[439,471,438,0,455,451,435,432],
[452,459,432,436,0,451,423,452],
[433,453,415,440,440,0,414,457],
[442,498,436,456,468,477,0,474],
[425,480,431,459,439,434,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,436,422,426,439,423,422],
[460,0,469,444,452,454,444,447],
[455,422,0,414,452,436,445,453],
[469,447,477,0,463,462,437,454],
[465,439,439,428,0,459,407,433],
[452,437,455,429,432,0,441,447],
[468,447,446,454,484,450,0,442],
[469,444,438,437,458,444,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,453,453,462,454,445,450],
[435,0,436,439,434,447,436,424],
[438,455,0,447,454,460,438,427],
[438,452,444,0,441,454,434,439],
[429,457,437,450,0,448,431,437],
[437,444,431,437,443,0,450,443],
[446,455,453,457,460,441,0,462],
[441,467,464,452,454,448,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,372,469,443,380,389,426],
[490,0,423,454,471,463,398,455],
[519,468,0,444,528,463,401,435],
[422,437,447,0,456,408,400,354],
[448,420,363,435,0,421,347,433],
[511,428,428,483,470,0,450,455],
[502,493,490,491,544,441,0,489],
[465,436,456,537,458,436,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,450,452,476,433,440,460],
[420,0,458,428,440,481,440,465],
[441,433,0,467,476,453,461,444],
[439,463,424,0,441,464,424,472],
[415,451,415,450,0,444,402,441],
[458,410,438,427,447,0,418,413],
[451,451,430,467,489,473,0,447],
[431,426,447,419,450,478,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,490,475,552,483,493,448],
[467,0,400,437,539,447,505,485],
[401,491,0,458,514,449,471,458],
[416,454,433,0,489,446,485,464],
[339,352,377,402,0,394,395,352],
[408,444,442,445,497,0,438,456],
[398,386,420,406,496,453,0,449],
[443,406,433,427,539,435,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,452,451,449,450,466,426],
[459,0,428,439,463,440,450,430],
[439,463,0,465,464,442,447,441],
[440,452,426,0,454,443,447,421],
[442,428,427,437,0,432,459,429],
[441,451,449,448,459,0,477,452],
[425,441,444,444,432,414,0,435],
[465,461,450,470,462,439,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,458,451,480,406,503,478],
[402,0,452,390,450,414,471,479],
[433,439,0,425,447,426,491,463],
[440,501,466,0,501,455,474,472],
[411,441,444,390,0,385,459,453],
[485,477,465,436,506,0,515,466],
[388,420,400,417,432,376,0,469],
[413,412,428,419,438,425,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,462,446,439,452,433,463],
[432,0,458,407,421,426,423,459],
[429,433,0,446,430,451,415,485],
[445,484,445,0,421,457,442,490],
[452,470,461,470,0,417,420,467],
[439,465,440,434,474,0,464,498],
[458,468,476,449,471,427,0,486],
[428,432,406,401,424,393,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,542,452,445,414,466,414],
[421,0,524,427,502,368,481,399],
[349,367,0,397,425,374,411,401],
[439,464,494,0,457,436,407,411],
[446,389,466,434,0,452,387,395],
[477,523,517,455,439,0,452,471],
[425,410,480,484,504,439,0,445],
[477,492,490,480,496,420,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,458,467,435,424,432,435],
[428,0,476,471,475,445,457,458],
[433,415,0,438,449,428,396,442],
[424,420,453,0,459,423,424,438],
[456,416,442,432,0,410,415,443],
[467,446,463,468,481,0,441,444],
[459,434,495,467,476,450,0,474],
[456,433,449,453,448,447,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,464,472,460,488,449,441],
[419,0,422,428,429,440,407,428],
[427,469,0,458,430,451,429,426],
[419,463,433,0,426,432,408,434],
[431,462,461,465,0,463,433,449],
[403,451,440,459,428,0,410,434],
[442,484,462,483,458,481,0,454],
[450,463,465,457,442,457,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,427,442,437,429,422,435],
[449,0,462,466,457,450,433,452],
[464,429,0,460,470,444,449,462],
[449,425,431,0,456,466,454,433],
[454,434,421,435,0,429,428,444],
[462,441,447,425,462,0,454,428],
[469,458,442,437,463,437,0,457],
[456,439,429,458,447,463,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,492,464,456,454,413,454],
[414,0,435,477,417,390,417,455],
[399,456,0,435,427,411,404,448],
[427,414,456,0,434,401,423,482],
[435,474,464,457,0,442,444,508],
[437,501,480,490,449,0,454,464],
[478,474,487,468,447,437,0,469],
[437,436,443,409,383,427,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,466,457,458,448,437,427],
[468,0,483,451,456,468,438,454],
[425,408,0,427,432,454,437,425],
[434,440,464,0,460,447,429,443],
[433,435,459,431,0,452,453,434],
[443,423,437,444,439,0,421,419],
[454,453,454,462,438,470,0,474],
[464,437,466,448,457,472,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,466,480,461,456,468,443],
[424,0,443,455,436,464,434,446],
[425,448,0,455,424,452,423,437],
[411,436,436,0,423,434,440,418],
[430,455,467,468,0,441,449,442],
[435,427,439,457,450,0,434,449],
[423,457,468,451,442,457,0,421],
[448,445,454,473,449,442,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,470,424,469,399,426,373],
[497,0,471,423,426,445,434,488],
[421,420,0,422,447,429,429,382],
[467,468,469,0,470,460,444,441],
[422,465,444,421,0,441,404,380],
[492,446,462,431,450,0,461,423],
[465,457,462,447,487,430,0,432],
[518,403,509,450,511,468,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,416,476,445,431,448,434],
[442,0,430,439,443,444,447,422],
[475,461,0,467,486,465,471,427],
[415,452,424,0,446,434,449,444],
[446,448,405,445,0,429,434,431],
[460,447,426,457,462,0,451,448],
[443,444,420,442,457,440,0,402],
[457,469,464,447,460,443,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,461,459,420,505,420,427],
[461,0,480,469,451,496,437,431],
[430,411,0,411,375,433,400,392],
[432,422,480,0,385,456,430,446],
[471,440,516,506,0,532,459,459],
[386,395,458,435,359,0,395,386],
[471,454,491,461,432,496,0,430],
[464,460,499,445,432,505,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,439,415,422,471,463,508],
[438,0,443,437,420,468,476,514],
[452,448,0,478,425,473,474,562],
[476,454,413,0,463,468,502,553],
[469,471,466,428,0,491,497,509],
[420,423,418,423,400,0,395,451],
[428,415,417,389,394,496,0,466],
[383,377,329,338,382,440,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,461,431,428,424,415,430],
[434,0,451,445,423,419,430,446],
[430,440,0,434,424,440,442,428],
[460,446,457,0,430,462,452,447],
[463,468,467,461,0,460,445,479],
[467,472,451,429,431,0,441,458],
[476,461,449,439,446,450,0,446],
[461,445,463,444,412,433,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,442,438,440,455,456,460],
[439,0,433,437,427,439,431,463],
[449,458,0,446,437,434,453,458],
[453,454,445,0,441,423,416,447],
[451,464,454,450,0,439,448,451],
[436,452,457,468,452,0,420,447],
[435,460,438,475,443,471,0,475],
[431,428,433,444,440,444,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,415,444,420,418,499,471],
[464,0,476,440,455,445,480,440],
[476,415,0,448,415,385,419,420],
[447,451,443,0,457,413,497,468],
[471,436,476,434,0,460,430,479],
[473,446,506,478,431,0,509,480],
[392,411,472,394,461,382,0,469],
[420,451,471,423,412,411,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,505,466,430,467,492,470],
[433,0,399,425,422,397,460,429],
[386,492,0,452,434,449,415,456],
[425,466,439,0,460,407,455,437],
[461,469,457,431,0,440,460,435],
[424,494,442,484,451,0,449,467],
[399,431,476,436,431,442,0,446],
[421,462,435,454,456,424,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,431,486,426,468,473,497],
[417,0,421,441,410,448,439,448],
[460,470,0,455,441,452,463,478],
[405,450,436,0,443,441,449,486],
[465,481,450,448,0,442,458,460],
[423,443,439,450,449,0,429,492],
[418,452,428,442,433,462,0,442],
[394,443,413,405,431,399,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,417,437,439,438,438,424],
[458,0,455,468,459,445,466,455],
[474,436,0,463,459,457,461,451],
[454,423,428,0,439,434,456,440],
[452,432,432,452,0,444,459,436],
[453,446,434,457,447,0,466,448],
[453,425,430,435,432,425,0,437],
[467,436,440,451,455,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,460,430,455,474,466,449],
[463,0,431,481,413,466,461,434],
[431,460,0,447,444,489,480,394],
[461,410,444,0,435,425,467,398],
[436,478,447,456,0,505,507,433],
[417,425,402,466,386,0,452,401],
[425,430,411,424,384,439,0,419],
[442,457,497,493,458,490,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,452,466,427,432,457,481],
[454,0,477,464,437,466,462,467],
[439,414,0,431,474,381,425,470],
[425,427,460,0,435,403,446,461],
[464,454,417,456,0,409,431,442],
[459,425,510,488,482,0,468,473],
[434,429,466,445,460,423,0,416],
[410,424,421,430,449,418,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,436,433,425,477,461,455],
[469,0,462,442,471,464,475,480],
[455,429,0,463,436,457,460,433],
[458,449,428,0,463,468,468,475],
[466,420,455,428,0,458,468,478],
[414,427,434,423,433,0,466,431],
[430,416,431,423,423,425,0,432],
[436,411,458,416,413,460,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,476,483,469,420,464,447],
[455,0,457,480,475,444,448,459],
[415,434,0,466,444,450,462,431],
[408,411,425,0,428,435,430,426],
[422,416,447,463,0,431,461,424],
[471,447,441,456,460,0,466,454],
[427,443,429,461,430,425,0,429],
[444,432,460,465,467,437,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,460,479,439,462,456,455],
[408,0,420,460,432,450,421,438],
[431,471,0,469,457,470,439,436],
[412,431,422,0,429,419,422,421],
[452,459,434,462,0,458,433,449],
[429,441,421,472,433,0,423,440],
[435,470,452,469,458,468,0,459],
[436,453,455,470,442,451,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,430,452,505,461,539,385],
[375,0,401,374,434,408,472,428],
[461,490,0,429,523,483,552,465],
[439,517,462,0,528,462,529,486],
[386,457,368,363,0,433,401,392],
[430,483,408,429,458,0,488,428],
[352,419,339,362,490,403,0,408],
[506,463,426,405,499,463,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,447,457,470,446,440,467],
[425,0,441,451,471,475,463,469],
[444,450,0,449,455,450,458,473],
[434,440,442,0,475,444,468,456],
[421,420,436,416,0,444,443,452],
[445,416,441,447,447,0,481,454],
[451,428,433,423,448,410,0,446],
[424,422,418,435,439,437,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,424,436,434,433,407,429],
[468,0,417,463,458,451,462,447],
[467,474,0,459,449,439,430,465],
[455,428,432,0,455,422,391,429],
[457,433,442,436,0,442,430,441],
[458,440,452,469,449,0,437,445],
[484,429,461,500,461,454,0,469],
[462,444,426,462,450,446,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,446,489,432,473,438,452],
[414,0,472,465,456,465,425,419],
[445,419,0,452,443,477,456,418],
[402,426,439,0,461,445,464,393],
[459,435,448,430,0,432,439,392],
[418,426,414,446,459,0,434,428],
[453,466,435,427,452,457,0,421],
[439,472,473,498,499,463,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,463,432,415,464,427,485],
[440,0,443,403,416,443,438,419],
[428,448,0,435,416,460,449,429],
[459,488,456,0,409,436,450,476],
[476,475,475,482,0,472,435,483],
[427,448,431,455,419,0,455,416],
[464,453,442,441,456,436,0,447],
[406,472,462,415,408,475,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,434,439,397,427,411,423],
[504,0,451,450,432,449,458,450],
[457,440,0,452,446,444,434,457],
[452,441,439,0,448,452,420,444],
[494,459,445,443,0,436,441,463],
[464,442,447,439,455,0,429,426],
[480,433,457,471,450,462,0,448],
[468,441,434,447,428,465,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,444,526,426,480,463,462],
[408,0,457,465,433,457,429,417],
[447,434,0,437,446,448,449,464],
[365,426,454,0,407,436,419,410],
[465,458,445,484,0,486,447,440],
[411,434,443,455,405,0,472,432],
[428,462,442,472,444,419,0,445],
[429,474,427,481,451,459,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,384,442,382,352,447,383],
[479,0,480,507,416,383,479,479],
[507,411,0,505,315,542,541,442],
[449,384,386,0,415,448,451,448],
[509,475,576,476,0,479,511,414],
[539,508,349,443,412,0,473,413],
[444,412,350,440,380,418,0,318],
[508,412,449,443,477,478,573,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,461,450,443,482,476,486],
[445,0,435,445,428,460,476,483],
[430,456,0,456,439,485,460,469],
[441,446,435,0,446,454,464,446],
[448,463,452,445,0,472,481,472],
[409,431,406,437,419,0,460,447],
[415,415,431,427,410,431,0,437],
[405,408,422,445,419,444,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,431,446,443,440,437,451],
[484,0,444,469,457,432,467,472],
[460,447,0,469,448,443,447,454],
[445,422,422,0,427,429,427,429],
[448,434,443,464,0,423,450,460],
[451,459,448,462,468,0,444,450],
[454,424,444,464,441,447,0,438],
[440,419,437,462,431,441,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,432,459,425,450,440,438],
[452,0,432,452,451,417,424,448],
[459,459,0,464,451,440,478,459],
[432,439,427,0,436,444,441,435],
[466,440,440,455,0,438,451,425],
[441,474,451,447,453,0,445,443],
[451,467,413,450,440,446,0,430],
[453,443,432,456,466,448,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,492,439,455,457,456,500],
[444,0,474,470,440,461,437,432],
[399,417,0,435,421,428,408,452],
[452,421,456,0,461,455,454,425],
[436,451,470,430,0,457,449,444],
[434,430,463,436,434,0,406,390],
[435,454,483,437,442,485,0,477],
[391,459,439,466,447,501,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,455,444,437,428,479,451],
[437,0,420,444,458,438,473,451],
[436,471,0,457,474,450,480,480],
[447,447,434,0,455,428,448,436],
[454,433,417,436,0,436,459,479],
[463,453,441,463,455,0,477,453],
[412,418,411,443,432,414,0,462],
[440,440,411,455,412,438,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,324,327,364,243,328,407,447],
[567,0,451,405,363,490,448,569],
[564,440,0,320,525,527,485,608],
[527,486,571,0,488,447,408,490],
[648,528,366,403,0,490,407,488],
[563,401,364,444,401,0,242,404],
[484,443,406,483,484,649,0,564],
[444,322,283,401,403,487,327,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,495,457,486,408,446,455],
[466,0,499,465,448,407,490,417],
[396,392,0,469,452,398,447,440],
[434,426,422,0,438,422,518,483],
[405,443,439,453,0,436,491,483],
[483,484,493,469,455,0,484,420],
[445,401,444,373,400,407,0,398],
[436,474,451,408,408,471,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,444,446,439,489,444,420],
[442,0,413,433,451,466,424,423],
[447,478,0,454,468,478,434,438],
[445,458,437,0,479,507,452,450],
[452,440,423,412,0,483,434,417],
[402,425,413,384,408,0,398,408],
[447,467,457,439,457,493,0,431],
[471,468,453,441,474,483,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,452,510,444,498,469,513],
[417,0,394,406,404,448,436,452],
[439,497,0,465,477,471,448,450],
[381,485,426,0,440,502,452,466],
[447,487,414,451,0,503,476,502],
[393,443,420,389,388,0,408,444],
[422,455,443,439,415,483,0,440],
[378,439,441,425,389,447,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,443,464,460,446,478,486],
[457,0,420,432,431,415,452,471],
[448,471,0,464,445,463,476,464],
[427,459,427,0,472,424,473,454],
[431,460,446,419,0,408,426,434],
[445,476,428,467,483,0,479,467],
[413,439,415,418,465,412,0,436],
[405,420,427,437,457,424,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,403,471,449,382,439,467],
[458,0,380,449,382,486,414,459],
[488,511,0,486,453,470,524,423],
[420,442,405,0,393,435,440,468],
[442,509,438,498,0,445,484,530],
[509,405,421,456,446,0,465,453],
[452,477,367,451,407,426,0,488],
[424,432,468,423,361,438,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,447,450,466,414,455,445],
[464,0,447,439,458,442,461,457],
[444,444,0,459,472,446,453,445],
[441,452,432,0,474,406,453,457],
[425,433,419,417,0,400,437,419],
[477,449,445,485,491,0,472,463],
[436,430,438,438,454,419,0,451],
[446,434,446,434,472,428,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,440,392,437,442,438,431],
[467,0,462,424,411,449,431,421],
[451,429,0,431,439,449,433,422],
[499,467,460,0,463,439,482,465],
[454,480,452,428,0,462,457,432],
[449,442,442,452,429,0,443,431],
[453,460,458,409,434,448,0,401],
[460,470,469,426,459,460,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,454,492,455,458,449,445],
[401,0,447,411,409,415,426,414],
[437,444,0,434,412,397,467,427],
[399,480,457,0,418,430,430,435],
[436,482,479,473,0,411,422,434],
[433,476,494,461,480,0,475,447],
[442,465,424,461,469,416,0,416],
[446,477,464,456,457,444,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,434,415,456,429,420,437],
[448,0,442,432,453,456,425,460],
[457,449,0,412,431,440,423,449],
[476,459,479,0,452,440,458,459],
[435,438,460,439,0,441,453,431],
[462,435,451,451,450,0,455,442],
[471,466,468,433,438,436,0,464],
[454,431,442,432,460,449,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,441,485,479,459,456,482],
[415,0,425,427,415,416,439,442],
[450,466,0,463,445,439,446,453],
[406,464,428,0,435,428,439,446],
[412,476,446,456,0,419,435,444],
[432,475,452,463,472,0,448,443],
[435,452,445,452,456,443,0,462],
[409,449,438,445,447,448,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,508,491,435,412,450,456],
[486,0,452,443,457,420,471,489],
[383,439,0,454,450,427,439,430],
[400,448,437,0,416,428,444,421],
[456,434,441,475,0,451,429,443],
[479,471,464,463,440,0,470,462],
[441,420,452,447,462,421,0,448],
[435,402,461,470,448,429,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,428,451,421,424,429,440],
[443,0,414,447,457,442,438,429],
[463,477,0,447,473,439,422,467],
[440,444,444,0,449,413,451,466],
[470,434,418,442,0,448,439,441],
[467,449,452,478,443,0,449,481],
[462,453,469,440,452,442,0,460],
[451,462,424,425,450,410,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,513,487,459,481,494,432],
[423,0,455,467,444,454,448,403],
[378,436,0,425,382,441,459,385],
[404,424,466,0,409,438,467,409],
[432,447,509,482,0,448,473,448],
[410,437,450,453,443,0,436,406],
[397,443,432,424,418,455,0,408],
[459,488,506,482,443,485,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,438,446,431,432,445,423],
[464,0,454,461,485,458,465,444],
[453,437,0,428,431,444,445,419],
[445,430,463,0,442,426,454,428],
[460,406,460,449,0,428,428,443],
[459,433,447,465,463,0,446,449],
[446,426,446,437,463,445,0,423],
[468,447,472,463,448,442,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,441,447,417,432,414,454],
[462,0,451,472,449,461,443,432],
[450,440,0,461,414,465,424,438],
[444,419,430,0,402,457,425,430],
[474,442,477,489,0,459,455,439],
[459,430,426,434,432,0,410,425],
[477,448,467,466,436,481,0,444],
[437,459,453,461,452,466,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,427,402,426,413,400,403],
[471,0,437,456,446,435,435,454],
[464,454,0,468,461,428,436,432],
[489,435,423,0,457,409,426,409],
[465,445,430,434,0,405,400,396],
[478,456,463,482,486,0,447,431],
[491,456,455,465,491,444,0,451],
[488,437,459,482,495,460,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,418,427,442,420,436,452],
[471,0,401,458,476,433,448,435],
[473,490,0,483,486,444,461,456],
[464,433,408,0,439,415,440,431],
[449,415,405,452,0,403,429,445],
[471,458,447,476,488,0,443,456],
[455,443,430,451,462,448,0,457],
[439,456,435,460,446,435,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,464,443,454,456,452,502],
[476,0,463,473,483,448,434,483],
[427,428,0,432,433,453,452,459],
[448,418,459,0,444,441,438,453],
[437,408,458,447,0,454,455,462],
[435,443,438,450,437,0,438,470],
[439,457,439,453,436,453,0,444],
[389,408,432,438,429,421,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,482,492,411,481,452,457],
[443,0,411,468,451,456,412,420],
[409,480,0,429,352,466,396,393],
[399,423,462,0,380,430,395,403],
[480,440,539,511,0,481,444,477],
[410,435,425,461,410,0,367,409],
[439,479,495,496,447,524,0,455],
[434,471,498,488,414,482,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,454,386,438,451,426,439],
[468,0,474,445,443,487,467,465],
[437,417,0,408,418,436,423,412],
[505,446,483,0,459,503,443,460],
[453,448,473,432,0,472,450,446],
[440,404,455,388,419,0,404,409],
[465,424,468,448,441,487,0,428],
[452,426,479,431,445,482,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,454,450,449,426,444,449],
[420,0,410,425,429,413,403,428],
[437,481,0,452,460,467,452,438],
[441,466,439,0,421,407,423,457],
[442,462,431,470,0,445,439,433],
[465,478,424,484,446,0,452,441],
[447,488,439,468,452,439,0,459],
[442,463,453,434,458,450,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,479,419,474,480,520,432],
[481,0,459,547,522,437,505,543],
[412,432,0,520,449,460,517,451],
[472,344,371,0,432,504,388,455],
[417,369,442,459,0,487,481,434],
[411,454,431,387,404,0,453,489],
[371,386,374,503,410,438,0,434],
[459,348,440,436,457,402,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,451,480,476,435,439,477],
[435,0,459,497,455,450,433,466],
[440,432,0,466,439,426,405,452],
[411,394,425,0,450,420,411,441],
[415,436,452,441,0,441,407,451],
[456,441,465,471,450,0,446,484],
[452,458,486,480,484,445,0,466],
[414,425,439,450,440,407,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,459,412,438,428,401,462],
[468,0,470,440,439,440,439,485],
[432,421,0,430,445,424,400,462],
[479,451,461,0,436,468,447,473],
[453,452,446,455,0,472,424,457],
[463,451,467,423,419,0,419,449],
[490,452,491,444,467,472,0,473],
[429,406,429,418,434,442,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,400,423,388,444,412,423],
[452,0,425,440,425,457,428,421],
[491,466,0,469,451,484,439,466],
[468,451,422,0,436,453,453,429],
[503,466,440,455,0,473,451,452],
[447,434,407,438,418,0,418,436],
[479,463,452,438,440,473,0,457],
[468,470,425,462,439,455,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,448,446,444,443,422,467],
[439,0,424,440,442,445,429,424],
[443,467,0,458,483,479,461,446],
[445,451,433,0,455,440,413,454],
[447,449,408,436,0,443,415,428],
[448,446,412,451,448,0,427,422],
[469,462,430,478,476,464,0,457],
[424,467,445,437,463,469,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,440,415,447,449,455,416],
[452,0,480,423,455,449,456,421],
[451,411,0,400,422,458,443,394],
[476,468,491,0,442,474,474,450],
[444,436,469,449,0,468,459,401],
[442,442,433,417,423,0,455,446],
[436,435,448,417,432,436,0,421],
[475,470,497,441,490,445,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,409,451,439,438,418,439],
[492,0,449,459,451,474,431,442],
[482,442,0,481,448,469,446,476],
[440,432,410,0,422,432,437,450],
[452,440,443,469,0,447,429,476],
[453,417,422,459,444,0,444,450],
[473,460,445,454,462,447,0,454],
[452,449,415,441,415,441,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,439,451,430,458,431,434],
[448,0,439,441,432,450,439,453],
[452,452,0,427,446,469,447,481],
[440,450,464,0,457,455,455,456],
[461,459,445,434,0,461,442,437],
[433,441,422,436,430,0,405,424],
[460,452,444,436,449,486,0,442],
[457,438,410,435,454,467,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,418,440,420,440,450,428],
[466,0,457,452,443,468,469,437],
[473,434,0,459,451,446,456,469],
[451,439,432,0,437,435,456,451],
[471,448,440,454,0,444,452,451],
[451,423,445,456,447,0,455,439],
[441,422,435,435,439,436,0,425],
[463,454,422,440,440,452,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,441,512,442,470,514,454],
[408,0,425,475,493,441,481,377],
[450,466,0,517,451,453,504,397],
[379,416,374,0,456,435,438,364],
[449,398,440,435,0,447,431,354],
[421,450,438,456,444,0,458,313],
[377,410,387,453,460,433,0,378],
[437,514,494,527,537,578,513,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,458,468,444,428,442,456],
[443,0,452,473,469,445,436,453],
[433,439,0,447,457,447,442,447],
[423,418,444,0,451,453,442,461],
[447,422,434,440,0,466,452,449],
[463,446,444,438,425,0,449,442],
[449,455,449,449,439,442,0,445],
[435,438,444,430,442,449,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,533,593,470,548,421,463],
[444,0,400,572,535,380,337,421],
[358,491,0,531,425,380,484,399],
[298,319,360,0,320,316,293,360],
[421,356,466,571,0,402,487,425],
[343,511,511,575,489,0,446,461],
[470,554,407,598,404,445,0,360],
[428,470,492,531,466,430,531,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,442,444,471,452,443,452],
[409,0,427,406,407,436,408,420],
[449,464,0,423,453,458,452,456],
[447,485,468,0,447,464,444,434],
[420,484,438,444,0,450,423,438],
[439,455,433,427,441,0,446,453],
[448,483,439,447,468,445,0,459],
[439,471,435,457,453,438,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,421,424,446,411,443,422],
[468,0,431,447,422,423,451,437],
[470,460,0,422,435,435,463,433],
[467,444,469,0,443,442,471,452],
[445,469,456,448,0,442,450,448],
[480,468,456,449,449,0,435,452],
[448,440,428,420,441,456,0,447],
[469,454,458,439,443,439,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,440,441,435,425,462,447],
[438,0,461,462,461,450,456,452],
[451,430,0,438,444,434,467,444],
[450,429,453,0,451,433,450,454],
[456,430,447,440,0,462,455,446],
[466,441,457,458,429,0,457,437],
[429,435,424,441,436,434,0,461],
[444,439,447,437,445,454,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,449,441,471,448,461,466],
[459,0,458,463,490,456,455,437],
[442,433,0,413,452,428,451,409],
[450,428,478,0,482,443,431,437],
[420,401,439,409,0,449,407,421],
[443,435,463,448,442,0,437,419],
[430,436,440,460,484,454,0,437],
[425,454,482,454,470,472,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,529,471,519,507,444,483],
[429,0,490,430,459,434,435,413],
[362,401,0,453,412,428,408,398],
[420,461,438,0,457,485,452,455],
[372,432,479,434,0,448,406,430],
[384,457,463,406,443,0,421,438],
[447,456,483,439,485,470,0,468],
[408,478,493,436,461,453,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,415,448,439,467,456,447],
[421,0,400,430,430,417,423,425],
[476,491,0,458,453,448,482,436],
[443,461,433,0,450,426,459,433],
[452,461,438,441,0,443,448,423],
[424,474,443,465,448,0,452,431],
[435,468,409,432,443,439,0,437],
[444,466,455,458,468,460,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,458,480,449,429,462,458],
[446,0,442,464,428,435,451,441],
[433,449,0,454,429,421,465,430],
[411,427,437,0,414,418,444,428],
[442,463,462,477,0,433,462,479],
[462,456,470,473,458,0,468,438],
[429,440,426,447,429,423,0,410],
[433,450,461,463,412,453,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,315,418,366,315,422,366],
[420,0,419,424,474,367,529,369],
[576,472,0,528,576,364,422,420],
[473,467,363,0,578,365,526,422],
[525,417,315,313,0,368,421,473],
[576,524,527,526,523,0,420,473],
[469,362,469,365,470,471,0,419],
[525,522,471,469,418,418,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,448,463,444,448,440,437],
[443,0,451,466,446,426,425,439],
[443,440,0,460,465,431,463,431],
[428,425,431,0,424,426,432,443],
[447,445,426,467,0,434,428,434],
[443,465,460,465,457,0,440,468],
[451,466,428,459,463,451,0,446],
[454,452,460,448,457,423,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,480,363,593,361,444,535],
[447,0,508,542,595,445,471,505],
[411,383,0,357,531,443,353,472],
[528,349,534,0,533,563,440,531],
[298,296,360,358,0,328,416,386],
[530,446,448,328,563,0,473,442],
[447,420,538,451,475,418,0,505],
[356,386,419,360,505,449,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,449,411,439,440,460,452],
[409,0,411,418,409,385,420,420],
[442,480,0,463,428,436,455,435],
[480,473,428,0,451,460,478,419],
[452,482,463,440,0,455,466,445],
[451,506,455,431,436,0,478,438],
[431,471,436,413,425,413,0,416],
[439,471,456,472,446,453,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,430,438,405,446,424,435],
[448,0,410,430,439,460,432,424],
[461,481,0,458,463,454,451,436],
[453,461,433,0,446,450,410,451],
[486,452,428,445,0,492,447,451],
[445,431,437,441,399,0,438,448],
[467,459,440,481,444,453,0,432],
[456,467,455,440,440,443,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,464,443,464,428,460,422],
[435,0,457,432,467,453,450,428],
[427,434,0,455,436,448,429,394],
[448,459,436,0,448,443,447,445],
[427,424,455,443,0,410,438,449],
[463,438,443,448,481,0,458,423],
[431,441,462,444,453,433,0,398],
[469,463,497,446,442,468,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,448,437,450,451,469,403],
[413,0,400,403,436,402,440,454],
[443,491,0,459,476,460,460,428],
[454,488,432,0,439,467,464,431],
[441,455,415,452,0,445,465,426],
[440,489,431,424,446,0,446,417],
[422,451,431,427,426,445,0,418],
[488,437,463,460,465,474,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,471,497,441,450,462,461],
[449,0,468,468,442,443,451,442],
[420,423,0,450,432,451,447,461],
[394,423,441,0,429,413,423,439],
[450,449,459,462,0,412,430,466],
[441,448,440,478,479,0,463,455],
[429,440,444,468,461,428,0,460],
[430,449,430,452,425,436,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,425,459,434,450,450,444],
[440,0,456,441,450,467,451,440],
[466,435,0,441,420,499,450,445],
[432,450,450,0,436,499,425,434],
[457,441,471,455,0,466,449,427],
[441,424,392,392,425,0,430,386],
[441,440,441,466,442,461,0,449],
[447,451,446,457,464,505,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,496,499,479,478,455,436],
[421,0,464,474,475,449,449,424],
[395,427,0,431,408,385,424,375],
[392,417,460,0,470,397,457,448],
[412,416,483,421,0,367,402,408],
[413,442,506,494,524,0,501,432],
[436,442,467,434,489,390,0,440],
[455,467,516,443,483,459,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,430,477,421,414,420,442],
[476,0,449,478,455,464,449,431],
[461,442,0,459,435,443,431,428],
[414,413,432,0,411,425,425,434],
[470,436,456,480,0,441,446,446],
[477,427,448,466,450,0,468,435],
[471,442,460,466,445,423,0,441],
[449,460,463,457,445,456,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,413,460,445,438,448,463],
[445,0,451,463,398,461,438,470],
[478,440,0,482,464,489,436,463],
[431,428,409,0,442,474,422,469],
[446,493,427,449,0,466,454,485],
[453,430,402,417,425,0,446,469],
[443,453,455,469,437,445,0,467],
[428,421,428,422,406,422,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,419,407,451,423,450,431],
[464,0,454,420,431,447,436,450],
[472,437,0,410,442,447,456,461],
[484,471,481,0,450,448,445,487],
[440,460,449,441,0,453,439,461],
[468,444,444,443,438,0,434,450],
[441,455,435,446,452,457,0,475],
[460,441,430,404,430,441,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,471,508,463,459,439,454],
[426,0,442,503,478,444,417,450],
[420,449,0,478,446,423,440,421],
[383,388,413,0,380,393,352,378],
[428,413,445,511,0,466,446,414],
[432,447,468,498,425,0,415,446],
[452,474,451,539,445,476,0,462],
[437,441,470,513,477,445,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,463,462,450,503,443,461],
[462,0,455,471,460,443,443,435],
[428,436,0,439,441,419,412,410],
[429,420,452,0,418,456,448,408],
[441,431,450,473,0,475,454,445],
[388,448,472,435,416,0,434,443],
[448,448,479,443,437,457,0,443],
[430,456,481,483,446,448,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,307,366,394,307,396,370,338],
[584,0,522,485,458,518,497,398],
[525,369,0,518,341,429,492,527],
[497,406,373,0,436,402,438,465],
[584,433,550,455,0,550,525,524],
[495,373,462,489,341,0,436,463],
[521,394,399,453,366,455,0,461],
[553,493,364,426,367,428,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,447,459,456,505,465,436],
[454,0,410,451,451,487,457,439],
[444,481,0,488,453,523,486,450],
[432,440,403,0,464,488,443,416],
[435,440,438,427,0,470,434,420],
[386,404,368,403,421,0,381,378],
[426,434,405,448,457,510,0,394],
[455,452,441,475,471,513,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,453,409,500,446,424,442],
[467,0,476,444,516,478,440,468],
[438,415,0,409,452,419,405,442],
[482,447,482,0,517,469,442,481],
[391,375,439,374,0,420,387,441],
[445,413,472,422,471,0,426,456],
[467,451,486,449,504,465,0,440],
[449,423,449,410,450,435,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,423,446,451,426,454,417],
[454,0,438,445,442,451,439,422],
[468,453,0,445,451,428,435,441],
[445,446,446,0,456,442,451,428],
[440,449,440,435,0,439,422,413],
[465,440,463,449,452,0,466,449],
[437,452,456,440,469,425,0,409],
[474,469,450,463,478,442,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,448,419,458,462,437,441],
[437,0,437,418,484,451,423,424],
[443,454,0,439,482,448,444,436],
[472,473,452,0,487,447,457,444],
[433,407,409,404,0,428,422,451],
[429,440,443,444,463,0,436,435],
[454,468,447,434,469,455,0,439],
[450,467,455,447,440,456,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,449,464,461,471,441,452],
[440,0,450,434,463,462,458,464],
[442,441,0,428,462,437,415,452],
[427,457,463,0,461,461,474,437],
[430,428,429,430,0,442,429,432],
[420,429,454,430,449,0,434,451],
[450,433,476,417,462,457,0,422],
[439,427,439,454,459,440,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,420,437,438,412,388,451],
[440,0,489,454,415,405,425,394],
[471,402,0,467,474,435,447,484],
[454,437,424,0,410,423,411,403],
[453,476,417,481,0,469,425,453],
[479,486,456,468,422,0,454,482],
[503,466,444,480,466,437,0,467],
[440,497,407,488,438,409,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,455,454,464,431,452,411],
[474,0,450,496,499,458,482,424],
[436,441,0,451,487,429,484,419],
[437,395,440,0,462,442,466,448],
[427,392,404,429,0,428,430,421],
[460,433,462,449,463,0,485,396],
[439,409,407,425,461,406,0,403],
[480,467,472,443,470,495,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,464,461,466,471,457,433],
[419,0,422,446,442,398,434,459],
[427,469,0,406,431,441,436,428],
[430,445,485,0,452,489,429,477],
[425,449,460,439,0,455,468,453],
[420,493,450,402,436,0,417,450],
[434,457,455,462,423,474,0,450],
[458,432,463,414,438,441,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,444,461,380,479,482,480],
[413,0,438,424,351,376,460,483],
[447,453,0,408,414,433,409,467],
[430,467,483,0,476,477,449,467],
[511,540,477,415,0,461,505,495],
[412,515,458,414,430,0,438,421],
[409,431,482,442,386,453,0,469],
[411,408,424,424,396,470,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,556,505,480,430,431,456,539],
[335,0,485,462,437,484,432,361],
[386,406,0,432,358,332,455,412],
[411,429,459,0,459,383,409,361],
[461,454,533,432,0,405,459,436],
[460,407,559,508,486,0,458,459],
[435,459,436,482,432,433,0,415],
[352,530,479,530,455,432,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,448,409,449,441,415,451],
[464,0,423,435,452,447,460,456],
[443,468,0,461,470,443,447,466],
[482,456,430,0,470,438,440,471],
[442,439,421,421,0,437,461,437],
[450,444,448,453,454,0,443,454],
[476,431,444,451,430,448,0,450],
[440,435,425,420,454,437,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,438,443,439,452,424,434],
[450,0,436,419,420,442,413,431],
[453,455,0,451,442,456,428,437],
[448,472,440,0,441,453,432,448],
[452,471,449,450,0,446,421,436],
[439,449,435,438,445,0,433,418],
[467,478,463,459,470,458,0,445],
[457,460,454,443,455,473,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,444,419,441,456,436,419],
[438,0,449,423,442,478,447,447],
[447,442,0,417,450,471,443,426],
[472,468,474,0,422,469,484,460],
[450,449,441,469,0,479,456,433],
[435,413,420,422,412,0,439,428],
[455,444,448,407,435,452,0,453],
[472,444,465,431,458,463,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,424,463,416,455,462,446],
[439,0,418,433,445,444,464,439],
[467,473,0,427,449,437,463,456],
[428,458,464,0,430,446,484,425],
[475,446,442,461,0,487,487,456],
[436,447,454,445,404,0,443,439],
[429,427,428,407,404,448,0,409],
[445,452,435,466,435,452,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,449,455,434,432,436,466],
[469,0,486,461,460,448,443,460],
[442,405,0,427,448,418,396,446],
[436,430,464,0,433,447,414,465],
[457,431,443,458,0,441,446,456],
[459,443,473,444,450,0,449,457],
[455,448,495,477,445,442,0,483],
[425,431,445,426,435,434,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,361,354,413,435,436,463],
[405,0,359,401,403,336,462,452],
[530,532,0,436,435,478,474,552],
[537,490,455,0,509,475,450,420],
[478,488,456,382,0,362,440,476],
[456,555,413,416,529,0,493,434],
[455,429,417,441,451,398,0,445],
[428,439,339,471,415,457,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,442,474,470,471,475,457],
[431,0,434,460,482,450,450,456],
[449,457,0,445,487,480,483,462],
[417,431,446,0,467,451,448,437],
[421,409,404,424,0,422,435,437],
[420,441,411,440,469,0,466,443],
[416,441,408,443,456,425,0,449],
[434,435,429,454,454,448,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,431,434,454,459,453,453],
[453,0,431,448,446,423,438,455],
[460,460,0,483,441,439,448,457],
[457,443,408,0,432,416,428,440],
[437,445,450,459,0,461,444,449],
[432,468,452,475,430,0,461,469],
[438,453,443,463,447,430,0,441],
[438,436,434,451,442,422,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,458,453,460,443,479,437],
[439,0,465,455,463,476,457,432],
[433,426,0,441,447,461,458,430],
[438,436,450,0,438,460,456,441],
[431,428,444,453,0,449,449,447],
[448,415,430,431,442,0,442,418],
[412,434,433,435,442,449,0,426],
[454,459,461,450,444,473,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,422,400,416,376,441,417],
[468,0,462,455,451,457,433,445],
[469,429,0,439,422,422,437,415],
[491,436,452,0,450,468,432,397],
[475,440,469,441,0,450,438,450],
[515,434,469,423,441,0,442,433],
[450,458,454,459,453,449,0,411],
[474,446,476,494,441,458,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,473,475,442,465,442,463],
[468,0,475,447,419,439,440,436],
[418,416,0,443,425,416,438,431],
[416,444,448,0,433,443,461,446],
[449,472,466,458,0,442,474,451],
[426,452,475,448,449,0,448,452],
[449,451,453,430,417,443,0,459],
[428,455,460,445,440,439,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,473,458,437,477,475,461],
[425,0,443,436,440,455,449,451],
[418,448,0,429,424,442,432,429],
[433,455,462,0,441,463,473,448],
[454,451,467,450,0,458,445,440],
[414,436,449,428,433,0,444,423],
[416,442,459,418,446,447,0,413],
[430,440,462,443,451,468,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,451,460,436,430,385,466],
[472,0,457,480,463,440,443,467],
[440,434,0,458,429,435,440,431],
[431,411,433,0,419,430,389,458],
[455,428,462,472,0,430,455,478],
[461,451,456,461,461,0,453,442],
[506,448,451,502,436,438,0,481],
[425,424,460,433,413,449,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,433,439,437,464,469,468],
[433,0,434,435,428,446,450,450],
[458,457,0,467,442,464,478,462],
[452,456,424,0,452,460,472,456],
[454,463,449,439,0,465,455,460],
[427,445,427,431,426,0,437,448],
[422,441,413,419,436,454,0,434],
[423,441,429,435,431,443,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,420,416,474,422,440,428],
[422,0,403,462,461,424,418,400],
[471,488,0,492,483,467,470,430],
[475,429,399,0,456,410,410,408],
[417,430,408,435,0,420,419,421],
[469,467,424,481,471,0,436,446],
[451,473,421,481,472,455,0,412],
[463,491,461,483,470,445,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,437,427,436,436,460,475],
[450,0,457,432,453,451,424,452],
[454,434,0,429,437,460,439,466],
[464,459,462,0,439,474,465,454],
[455,438,454,452,0,443,455,462],
[455,440,431,417,448,0,443,470],
[431,467,452,426,436,448,0,465],
[416,439,425,437,429,421,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,423,462,428,412,427,448],
[452,0,408,462,450,422,457,477],
[468,483,0,446,457,460,477,442],
[429,429,445,0,438,450,447,433],
[463,441,434,453,0,434,479,451],
[479,469,431,441,457,0,464,443],
[464,434,414,444,412,427,0,462],
[443,414,449,458,440,448,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,474,477,455,455,464,461],
[449,0,444,471,455,474,486,438],
[417,447,0,463,455,454,479,453],
[414,420,428,0,442,446,486,442],
[436,436,436,449,0,450,488,426],
[436,417,437,445,441,0,469,434],
[427,405,412,405,403,422,0,403],
[430,453,438,449,465,457,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,470,462,445,447,476,453],
[398,0,455,426,450,433,446,447],
[421,436,0,413,426,436,418,445],
[429,465,478,0,462,472,480,463],
[446,441,465,429,0,450,459,461],
[444,458,455,419,441,0,481,475],
[415,445,473,411,432,410,0,442],
[438,444,446,428,430,416,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,427,433,441,429,430,400],
[478,0,475,476,465,477,454,442],
[464,416,0,495,460,459,455,440],
[458,415,396,0,424,440,425,394],
[450,426,431,467,0,438,414,428],
[462,414,432,451,453,0,445,448],
[461,437,436,466,477,446,0,429],
[491,449,451,497,463,443,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,389,431,448,526,488,414],
[401,0,453,379,476,433,548,365],
[502,438,0,400,380,476,474,404],
[460,512,491,0,434,472,508,396],
[443,415,511,457,0,477,524,456],
[365,458,415,419,414,0,473,346],
[403,343,417,383,367,418,0,346],
[477,526,487,495,435,545,545,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,441,402,481,408,416,423],
[430,0,411,423,453,434,434,344],
[450,480,0,431,497,430,416,385],
[489,468,460,0,464,432,506,459],
[410,438,394,427,0,412,432,375],
[483,457,461,459,479,0,512,362],
[475,457,475,385,459,379,0,388],
[468,547,506,432,516,529,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,418,451,455,453,444,435],
[454,0,462,462,459,448,441,466],
[473,429,0,480,463,457,451,457],
[440,429,411,0,425,434,421,437],
[436,432,428,466,0,443,426,441],
[438,443,434,457,448,0,424,448],
[447,450,440,470,465,467,0,450],
[456,425,434,454,450,443,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,431,448,444,459,436,451],
[445,0,443,439,446,452,423,442],
[460,448,0,462,459,435,449,466],
[443,452,429,0,447,455,435,454],
[447,445,432,444,0,444,434,436],
[432,439,456,436,447,0,449,461],
[455,468,442,456,457,442,0,467],
[440,449,425,437,455,430,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,420,449,431,415,438,429],
[443,0,439,448,480,451,468,450],
[471,452,0,461,465,445,455,432],
[442,443,430,0,442,433,421,417],
[460,411,426,449,0,440,433,398],
[476,440,446,458,451,0,447,433],
[453,423,436,470,458,444,0,418],
[462,441,459,474,493,458,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,433,442,471,423,445,435],
[435,0,436,452,473,443,472,419],
[458,455,0,438,460,446,456,420],
[449,439,453,0,464,443,475,428],
[420,418,431,427,0,418,442,433],
[468,448,445,448,473,0,468,447],
[446,419,435,416,449,423,0,416],
[456,472,471,463,458,444,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,439,451,466,479,466,453],
[444,0,447,437,448,455,448,469],
[452,444,0,446,462,484,451,464],
[440,454,445,0,455,470,456,458],
[425,443,429,436,0,477,435,435],
[412,436,407,421,414,0,432,432],
[425,443,440,435,456,459,0,474],
[438,422,427,433,456,459,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,447,460,421,433,446,442],
[448,0,452,459,424,458,413,432],
[444,439,0,436,412,434,436,443],
[431,432,455,0,421,424,437,442],
[470,467,479,470,0,454,439,466],
[458,433,457,467,437,0,438,445],
[445,478,455,454,452,453,0,444],
[449,459,448,449,425,446,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,513,430,540,537,515,517,460],
[378,0,429,540,378,485,404,324],
[461,462,0,488,463,461,438,405],
[351,351,403,0,460,379,298,324],
[354,513,428,431,0,382,435,270],
[376,406,430,512,509,0,349,380],
[374,487,453,593,456,542,0,457],
[431,567,486,567,621,511,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,418,437,424,436,436,423],
[470,0,450,457,434,468,462,447],
[473,441,0,454,460,456,440,424],
[454,434,437,0,439,467,437,436],
[467,457,431,452,0,461,460,417],
[455,423,435,424,430,0,426,411],
[455,429,451,454,431,465,0,407],
[468,444,467,455,474,480,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,438,473,431,454,462,455],
[433,0,448,448,429,422,425,405],
[453,443,0,426,422,438,423,387],
[418,443,465,0,477,425,427,444],
[460,462,469,414,0,437,425,415],
[437,469,453,466,454,0,467,417],
[429,466,468,464,466,424,0,466],
[436,486,504,447,476,474,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,429,438,433,431,442,439],
[465,0,446,434,455,462,424,418],
[462,445,0,457,447,465,429,454],
[453,457,434,0,464,451,436,431],
[458,436,444,427,0,442,431,436],
[460,429,426,440,449,0,422,426],
[449,467,462,455,460,469,0,437],
[452,473,437,460,455,465,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,464,446,458,429,468,469],
[444,0,455,451,445,442,477,441],
[427,436,0,434,421,442,465,425],
[445,440,457,0,431,441,464,443],
[433,446,470,460,0,452,481,461],
[462,449,449,450,439,0,463,450],
[423,414,426,427,410,428,0,441],
[422,450,466,448,430,441,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,486,390,419,434,407,439],
[440,0,481,387,429,414,412,422],
[405,410,0,391,363,400,379,398],
[501,504,500,0,456,415,480,472],
[472,462,528,435,0,421,504,421],
[457,477,491,476,470,0,476,431],
[484,479,512,411,387,415,0,448],
[452,469,493,419,470,460,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,417,439,418,462,413,454],
[454,0,416,451,460,439,453,482],
[474,475,0,474,436,460,459,482],
[452,440,417,0,439,452,443,435],
[473,431,455,452,0,463,459,454],
[429,452,431,439,428,0,429,465],
[478,438,432,448,432,462,0,486],
[437,409,409,456,437,426,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,426,422,558,431,444,474],
[489,0,448,515,521,409,488,477],
[465,443,0,453,507,393,410,498],
[469,376,438,0,486,423,443,453],
[333,370,384,405,0,403,361,384],
[460,482,498,468,488,0,433,480],
[447,403,481,448,530,458,0,467],
[417,414,393,438,507,411,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,509,443,461,441,458,469],
[431,0,423,420,431,405,415,452],
[382,468,0,446,438,390,438,411],
[448,471,445,0,488,442,470,437],
[430,460,453,403,0,446,437,464],
[450,486,501,449,445,0,447,482],
[433,476,453,421,454,444,0,474],
[422,439,480,454,427,409,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,452,412,430,432,411,452],
[442,0,413,412,452,420,441,480],
[439,478,0,377,439,423,409,460],
[479,479,514,0,434,468,451,476],
[461,439,452,457,0,467,419,457],
[459,471,468,423,424,0,451,492],
[480,450,482,440,472,440,0,441],
[439,411,431,415,434,399,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,438,469,449,447,432,433],
[465,0,440,450,469,460,444,446],
[453,451,0,460,443,445,419,445],
[422,441,431,0,432,436,410,415],
[442,422,448,459,0,429,418,452],
[444,431,446,455,462,0,453,449],
[459,447,472,481,473,438,0,425],
[458,445,446,476,439,442,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,442,444,461,453,467,461],
[451,0,462,461,483,451,464,439],
[449,429,0,450,454,448,462,421],
[447,430,441,0,464,442,461,425],
[430,408,437,427,0,430,451,426],
[438,440,443,449,461,0,448,418],
[424,427,429,430,440,443,0,436],
[430,452,470,466,465,473,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,415,440,420,447,419,440],
[465,0,439,468,453,473,453,472],
[476,452,0,447,464,481,434,464],
[451,423,444,0,445,452,426,454],
[471,438,427,446,0,467,470,449],
[444,418,410,439,424,0,419,442],
[472,438,457,465,421,472,0,450],
[451,419,427,437,442,449,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,416,447,464,434,496,441],
[412,0,368,413,388,430,423,407],
[475,523,0,447,457,441,503,479],
[444,478,444,0,455,465,476,440],
[427,503,434,436,0,421,439,414],
[457,461,450,426,470,0,490,463],
[395,468,388,415,452,401,0,424],
[450,484,412,451,477,428,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,457,452,441,446,473,460],
[432,0,449,423,453,426,463,431],
[434,442,0,412,431,427,444,443],
[439,468,479,0,477,452,488,464],
[450,438,460,414,0,436,468,449],
[445,465,464,439,455,0,481,454],
[418,428,447,403,423,410,0,433],
[431,460,448,427,442,437,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,439,441,435,437,439,465],
[470,0,460,442,444,445,455,482],
[452,431,0,425,440,450,458,461],
[450,449,466,0,458,456,445,448],
[456,447,451,433,0,422,459,462],
[454,446,441,435,469,0,449,463],
[452,436,433,446,432,442,0,455],
[426,409,430,443,429,428,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,443,458,437,433,417,434],
[446,0,451,468,437,444,457,474],
[448,440,0,465,444,442,420,458],
[433,423,426,0,432,431,432,453],
[454,454,447,459,0,459,425,440],
[458,447,449,460,432,0,435,462],
[474,434,471,459,466,456,0,460],
[457,417,433,438,451,429,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,356,371,449,415,415,528],
[393,0,449,410,402,411,398,434],
[535,442,0,436,445,490,461,554],
[520,481,455,0,432,483,483,531],
[442,489,446,459,0,415,466,481],
[476,480,401,408,476,0,426,498],
[476,493,430,408,425,465,0,483],
[363,457,337,360,410,393,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,411,423,429,418,446,404],
[456,0,451,441,459,425,453,452],
[480,440,0,455,437,433,475,441],
[468,450,436,0,410,422,460,424],
[462,432,454,481,0,452,485,432],
[473,466,458,469,439,0,483,455],
[445,438,416,431,406,408,0,448],
[487,439,450,467,459,436,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,434,434,422,443,452,434],
[466,0,439,448,412,453,446,438],
[457,452,0,456,411,453,467,465],
[457,443,435,0,418,429,448,452],
[469,479,480,473,0,464,430,484],
[448,438,438,462,427,0,444,465],
[439,445,424,443,461,447,0,439],
[457,453,426,439,407,426,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,442,496,414,437,455,450],
[458,0,467,467,442,493,486,456],
[449,424,0,470,440,426,430,417],
[395,424,421,0,376,398,457,417],
[477,449,451,515,0,434,512,439],
[454,398,465,493,457,0,478,415],
[436,405,461,434,379,413,0,429],
[441,435,474,474,452,476,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,446,460,446,453,442,449],
[445,0,436,453,439,461,439,447],
[445,455,0,424,455,458,429,459],
[431,438,467,0,425,429,444,445],
[445,452,436,466,0,431,446,469],
[438,430,433,462,460,0,445,478],
[449,452,462,447,445,446,0,464],
[442,444,432,446,422,413,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,457,466,412,406,438,457],
[425,0,431,450,394,423,410,404],
[434,460,0,483,431,444,420,471],
[425,441,408,0,368,396,390,380],
[479,497,460,523,0,465,444,495],
[485,468,447,495,426,0,459,452],
[453,481,471,501,447,432,0,469],
[434,487,420,511,396,439,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,444,450,430,470,475,474],
[445,0,456,407,430,464,485,442],
[447,435,0,431,408,437,458,450],
[441,484,460,0,464,422,468,455],
[461,461,483,427,0,481,445,472],
[421,427,454,469,410,0,456,428],
[416,406,433,423,446,435,0,445],
[417,449,441,436,419,463,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,421,430,423,402,401,441],
[489,0,429,469,434,437,436,456],
[470,462,0,440,452,446,404,472],
[461,422,451,0,450,436,430,467],
[468,457,439,441,0,433,449,444],
[489,454,445,455,458,0,450,452],
[490,455,487,461,442,441,0,447],
[450,435,419,424,447,439,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,441,436,413,464,416,440],
[443,0,451,460,432,452,446,450],
[450,440,0,452,436,446,447,431],
[455,431,439,0,396,462,427,447],
[478,459,455,495,0,480,444,458],
[427,439,445,429,411,0,423,422],
[475,445,444,464,447,468,0,473],
[451,441,460,444,433,469,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,429,440,455,423,453,411],
[479,0,457,450,474,440,476,475],
[462,434,0,461,436,441,463,479],
[451,441,430,0,448,426,434,460],
[436,417,455,443,0,449,450,459],
[468,451,450,465,442,0,456,483],
[438,415,428,457,441,435,0,455],
[480,416,412,431,432,408,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,482,496,408,387,480,489],
[387,0,438,471,480,467,460,405],
[409,453,0,422,449,458,435,404],
[395,420,469,0,456,487,449,402],
[483,411,442,435,0,420,476,437],
[504,424,433,404,471,0,458,433],
[411,431,456,442,415,433,0,341],
[402,486,487,489,454,458,550,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,427,452,439,469,441,441],
[453,0,431,441,429,435,427,456],
[464,460,0,459,463,468,449,435],
[439,450,432,0,444,439,424,432],
[452,462,428,447,0,461,449,443],
[422,456,423,452,430,0,435,451],
[450,464,442,467,442,456,0,462],
[450,435,456,459,448,440,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,420,432,421,418,443,472],
[457,0,445,453,449,457,432,442],
[471,446,0,454,458,454,467,442],
[459,438,437,0,447,443,433,445],
[470,442,433,444,0,462,426,475],
[473,434,437,448,429,0,434,436],
[448,459,424,458,465,457,0,462],
[419,449,449,446,416,455,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,433,457,442,437,420,462],
[453,0,475,474,453,449,435,438],
[458,416,0,457,454,419,440,448],
[434,417,434,0,456,442,426,442],
[449,438,437,435,0,408,417,433],
[454,442,472,449,483,0,455,451],
[471,456,451,465,474,436,0,451],
[429,453,443,449,458,440,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,449,478,447,444,474,455],
[412,0,417,475,434,454,456,466],
[442,474,0,508,449,476,458,478],
[413,416,383,0,409,436,429,416],
[444,457,442,482,0,449,484,460],
[447,437,415,455,442,0,448,435],
[417,435,433,462,407,443,0,444],
[436,425,413,475,431,456,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,447,453,445,435,427,449],
[448,0,459,477,460,445,465,479],
[444,432,0,449,450,439,442,462],
[438,414,442,0,448,453,451,451],
[446,431,441,443,0,430,425,430],
[456,446,452,438,461,0,439,470],
[464,426,449,440,466,452,0,466],
[442,412,429,440,461,421,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,461,472,485,477,475,445],
[424,0,417,430,431,419,431,429],
[430,474,0,425,439,489,455,433],
[419,461,466,0,437,454,439,436],
[406,460,452,454,0,454,452,454],
[414,472,402,437,437,0,406,438],
[416,460,436,452,439,485,0,430],
[446,462,458,455,437,453,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,471,453,443,467,443,457],
[431,0,461,451,451,481,461,447],
[420,430,0,459,440,456,438,441],
[438,440,432,0,440,459,444,432],
[448,440,451,451,0,480,439,435],
[424,410,435,432,411,0,433,430],
[448,430,453,447,452,458,0,440],
[434,444,450,459,456,461,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,432,484,432,448,415,428],
[423,0,421,439,432,471,431,439],
[459,470,0,467,454,495,466,442],
[407,452,424,0,417,445,414,416],
[459,459,437,474,0,459,430,477],
[443,420,396,446,432,0,403,417],
[476,460,425,477,461,488,0,442],
[463,452,449,475,414,474,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,418,499,485,433,452,488],
[436,0,443,462,440,472,477,483],
[473,448,0,496,485,477,419,496],
[392,429,395,0,419,422,408,403],
[406,451,406,472,0,434,424,430],
[458,419,414,469,457,0,411,450],
[439,414,472,483,467,480,0,463],
[403,408,395,488,461,441,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,438,440,428,444,434,431],
[446,0,425,448,425,428,433,421],
[453,466,0,438,449,455,480,463],
[451,443,453,0,436,447,459,425],
[463,466,442,455,0,459,456,461],
[447,463,436,444,432,0,449,438],
[457,458,411,432,435,442,0,417],
[460,470,428,466,430,453,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,447,436,413,444,457,449],
[465,0,453,460,433,461,463,457],
[444,438,0,464,446,446,466,450],
[455,431,427,0,446,456,446,456],
[478,458,445,445,0,463,454,468],
[447,430,445,435,428,0,473,448],
[434,428,425,445,437,418,0,431],
[442,434,441,435,423,443,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,454,445,436,394,443,453],
[436,0,423,435,452,442,464,484],
[437,468,0,466,431,501,468,502],
[446,456,425,0,430,415,448,494],
[455,439,460,461,0,465,458,456],
[497,449,390,476,426,0,481,470],
[448,427,423,443,433,410,0,468],
[438,407,389,397,435,421,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,435,457,418,430,469,432],
[448,0,460,455,444,454,466,441],
[456,431,0,430,425,435,450,424],
[434,436,461,0,428,439,451,452],
[473,447,466,463,0,450,481,431],
[461,437,456,452,441,0,464,418],
[422,425,441,440,410,427,0,439],
[459,450,467,439,460,473,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,410,370,428,360,296,356],
[467,0,444,440,493,448,353,378],
[481,447,0,505,516,476,441,456],
[521,451,386,0,441,438,363,449],
[463,398,375,450,0,350,303,511],
[531,443,415,453,541,0,455,447],
[595,538,450,528,588,436,0,489],
[535,513,435,442,380,444,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,460,467,475,475,483,476],
[448,0,437,472,482,456,478,434],
[431,454,0,458,471,449,490,462],
[424,419,433,0,432,434,462,455],
[416,409,420,459,0,447,461,430],
[416,435,442,457,444,0,441,427],
[408,413,401,429,430,450,0,427],
[415,457,429,436,461,464,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,427,454,452,448,446,453],
[459,0,462,469,455,470,415,460],
[464,429,0,449,457,484,438,476],
[437,422,442,0,461,476,448,446],
[439,436,434,430,0,482,429,430],
[443,421,407,415,409,0,409,408],
[445,476,453,443,462,482,0,481],
[438,431,415,445,461,483,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,377,406,410,414,323,413,412],
[514,0,420,406,433,383,439,406],
[485,471,0,450,437,362,431,400],
[481,485,441,0,486,472,451,468],
[477,458,454,405,0,416,428,427],
[568,508,529,419,475,0,501,456],
[478,452,460,440,463,390,0,407],
[479,485,491,423,464,435,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,427,423,442,449,416,424],
[440,0,417,389,446,415,433,457],
[464,474,0,447,422,430,439,438],
[468,502,444,0,428,438,448,444],
[449,445,469,463,0,461,444,457],
[442,476,461,453,430,0,412,448],
[475,458,452,443,447,479,0,487],
[467,434,453,447,434,443,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,438,445,427,426,446,430],
[447,0,435,431,428,419,432,454],
[453,456,0,429,437,449,433,456],
[446,460,462,0,471,423,452,479],
[464,463,454,420,0,437,422,438],
[465,472,442,468,454,0,456,454],
[445,459,458,439,469,435,0,460],
[461,437,435,412,453,437,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,403,462,491,464,442,432],
[450,0,397,420,461,420,471,428],
[488,494,0,480,481,437,471,454],
[429,471,411,0,494,429,474,454],
[400,430,410,397,0,437,422,444],
[427,471,454,462,454,0,444,425],
[449,420,420,417,469,447,0,413],
[459,463,437,437,447,466,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,448,441,426,468,451,452],
[442,0,432,413,468,483,449,462],
[443,459,0,463,452,486,429,482],
[450,478,428,0,443,498,455,489],
[465,423,439,448,0,475,439,452],
[423,408,405,393,416,0,417,444],
[440,442,462,436,452,474,0,450],
[439,429,409,402,439,447,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,437,449,457,452,453,460],
[450,0,454,451,457,459,441,460],
[454,437,0,461,455,454,470,447],
[442,440,430,0,478,459,454,459],
[434,434,436,413,0,427,400,456],
[439,432,437,432,464,0,438,461],
[438,450,421,437,491,453,0,437],
[431,431,444,432,435,430,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,459,435,468,465,473,489],
[415,0,403,429,400,447,437,425],
[432,488,0,490,456,498,461,442],
[456,462,401,0,457,425,466,455],
[423,491,435,434,0,452,482,476],
[426,444,393,466,439,0,436,448],
[418,454,430,425,409,455,0,426],
[402,466,449,436,415,443,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,439,455,474,467,451,416],
[444,0,429,478,451,451,482,420],
[452,462,0,466,467,464,469,430],
[436,413,425,0,433,433,408,428],
[417,440,424,458,0,452,459,434],
[424,440,427,458,439,0,461,451],
[440,409,422,483,432,430,0,417],
[475,471,461,463,457,440,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,425,415,430,454,459,460],
[491,0,434,459,431,469,466,448],
[466,457,0,465,440,454,460,461],
[476,432,426,0,455,490,455,471],
[461,460,451,436,0,427,439,425],
[437,422,437,401,464,0,450,458],
[432,425,431,436,452,441,0,434],
[431,443,430,420,466,433,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,456,477,445,444,460,481],
[445,0,451,464,452,433,500,493],
[435,440,0,482,451,434,428,513],
[414,427,409,0,422,455,442,454],
[446,439,440,469,0,419,429,479],
[447,458,457,436,472,0,482,507],
[431,391,463,449,462,409,0,449],
[410,398,378,437,412,384,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,414,441,468,431,452,452],
[484,0,437,444,488,428,435,440],
[477,454,0,462,450,453,433,449],
[450,447,429,0,474,424,440,439],
[423,403,441,417,0,416,446,421],
[460,463,438,467,475,0,445,444],
[439,456,458,451,445,446,0,422],
[439,451,442,452,470,447,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,431,452,458,459,443,448],
[433,0,452,467,451,478,475,474],
[460,439,0,480,488,445,442,465],
[439,424,411,0,461,482,462,437],
[433,440,403,430,0,393,424,464],
[432,413,446,409,498,0,462,447],
[448,416,449,429,467,429,0,454],
[443,417,426,454,427,444,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,448,449,433,449,449,438],
[454,0,457,457,444,440,442,447],
[443,434,0,430,420,433,439,428],
[442,434,461,0,446,455,440,458],
[458,447,471,445,0,459,434,445],
[442,451,458,436,432,0,434,454],
[442,449,452,451,457,457,0,461],
[453,444,463,433,446,437,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,430,425,418,432,440,440],
[449,0,436,442,450,413,448,448],
[461,455,0,448,436,431,460,435],
[466,449,443,0,435,442,430,450],
[473,441,455,456,0,453,439,457],
[459,478,460,449,438,0,461,447],
[451,443,431,461,452,430,0,458],
[451,443,456,441,434,444,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,438,439,455,417,444,455],
[429,0,435,421,445,458,451,433],
[453,456,0,439,486,442,440,458],
[452,470,452,0,451,439,436,467],
[436,446,405,440,0,436,442,445],
[474,433,449,452,455,0,460,455],
[447,440,451,455,449,431,0,449],
[436,458,433,424,446,436,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,448,430,434,398,414,445],
[432,0,424,429,412,417,425,438],
[443,467,0,464,451,446,449,439],
[461,462,427,0,421,415,421,430],
[457,479,440,470,0,427,424,474],
[493,474,445,476,464,0,449,465],
[477,466,442,470,467,442,0,463],
[446,453,452,461,417,426,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,439,470,468,432,431,446],
[467,0,465,468,481,447,430,447],
[452,426,0,436,442,443,416,448],
[421,423,455,0,449,419,409,438],
[423,410,449,442,0,423,401,432],
[459,444,448,472,468,0,454,443],
[460,461,475,482,490,437,0,448],
[445,444,443,453,459,448,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,451,428,446,434,446,433],
[451,0,450,424,456,423,444,436],
[440,441,0,444,449,427,430,434],
[463,467,447,0,471,436,450,448],
[445,435,442,420,0,449,430,438],
[457,468,464,455,442,0,449,451],
[445,447,461,441,461,442,0,426],
[458,455,457,443,453,440,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,471,420,443,440,443,461],
[459,0,467,445,435,456,440,430],
[420,424,0,410,408,440,408,445],
[471,446,481,0,428,479,456,458],
[448,456,483,463,0,428,452,454],
[451,435,451,412,463,0,422,443],
[448,451,483,435,439,469,0,443],
[430,461,446,433,437,448,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,423,354,422,463,490,330],
[379,0,382,427,493,376,358,420],
[468,509,0,559,466,437,491,465],
[537,464,332,0,441,372,376,422],
[469,398,425,450,0,396,422,420],
[428,515,454,519,495,0,383,359],
[401,533,400,515,469,508,0,421],
[561,471,426,469,471,532,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,466,454,440,441,444,437],
[453,0,463,430,452,442,446,455],
[425,428,0,416,429,430,426,430],
[437,461,475,0,464,459,456,472],
[451,439,462,427,0,450,446,449],
[450,449,461,432,441,0,440,442],
[447,445,465,435,445,451,0,438],
[454,436,461,419,442,449,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,423,445,417,451,439,449],
[424,0,420,442,421,419,420,437],
[468,471,0,459,469,452,434,465],
[446,449,432,0,438,429,443,438],
[474,470,422,453,0,441,439,476],
[440,472,439,462,450,0,457,467],
[452,471,457,448,452,434,0,488],
[442,454,426,453,415,424,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,367,420,414,471,469,311],
[474,0,423,475,629,424,578,421],
[524,468,0,631,468,682,575,363],
[471,416,260,0,364,263,364,312],
[477,262,423,527,0,424,316,473],
[420,467,209,628,467,0,471,364],
[422,313,316,527,575,420,0,367],
[580,470,528,579,418,527,524,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,459,453,448,444,457,473],
[432,0,405,444,450,449,466,444],
[432,486,0,410,443,438,459,448],
[438,447,481,0,435,452,454,454],
[443,441,448,456,0,403,482,458],
[447,442,453,439,488,0,467,461],
[434,425,432,437,409,424,0,453],
[418,447,443,437,433,430,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,424,426,419,435,445,438],
[467,0,462,461,432,449,456,447],
[467,429,0,460,455,447,436,467],
[465,430,431,0,464,449,435,453],
[472,459,436,427,0,454,444,459],
[456,442,444,442,437,0,427,445],
[446,435,455,456,447,464,0,486],
[453,444,424,438,432,446,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,447,429,420,424,425,433],
[478,0,448,441,435,447,438,450],
[444,443,0,441,440,452,449,437],
[462,450,450,0,462,447,427,438],
[471,456,451,429,0,472,474,454],
[467,444,439,444,419,0,433,416],
[466,453,442,464,417,458,0,441],
[458,441,454,453,437,475,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,455,453,459,446,440,457],
[424,0,436,446,435,449,432,456],
[436,455,0,473,438,438,458,454],
[438,445,418,0,454,437,442,439],
[432,456,453,437,0,460,444,461],
[445,442,453,454,431,0,440,441],
[451,459,433,449,447,451,0,448],
[434,435,437,452,430,450,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,464,475,452,448,445,445],
[433,0,443,465,448,444,448,438],
[427,448,0,457,459,440,439,449],
[416,426,434,0,438,433,430,455],
[439,443,432,453,0,448,438,438],
[443,447,451,458,443,0,443,452],
[446,443,452,461,453,448,0,459],
[446,453,442,436,453,439,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,398,476,465,429,454,416],
[488,0,460,454,467,474,457,442],
[493,431,0,443,487,468,458,467],
[415,437,448,0,465,398,428,413],
[426,424,404,426,0,403,394,410],
[462,417,423,493,488,0,459,435],
[437,434,433,463,497,432,0,414],
[475,449,424,478,481,456,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,448,436,434,436,443,415],
[442,0,424,451,439,432,460,436],
[443,467,0,458,482,448,475,449],
[455,440,433,0,457,433,463,431],
[457,452,409,434,0,427,467,425],
[455,459,443,458,464,0,470,435],
[448,431,416,428,424,421,0,406],
[476,455,442,460,466,456,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,438,437,443,446,432,449],
[455,0,443,428,449,444,453,465],
[453,448,0,448,426,454,455,460],
[454,463,443,0,437,447,469,437],
[448,442,465,454,0,453,466,470],
[445,447,437,444,438,0,467,459],
[459,438,436,422,425,424,0,457],
[442,426,431,454,421,432,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,436,458,468,447,452,433],
[440,0,449,453,448,439,423,436],
[455,442,0,454,436,450,436,420],
[433,438,437,0,439,427,444,448],
[423,443,455,452,0,460,427,447],
[444,452,441,464,431,0,407,429],
[439,468,455,447,464,484,0,463],
[458,455,471,443,444,462,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,439,505,430,422,462,476],
[400,0,440,418,374,420,413,363],
[452,451,0,443,419,437,476,426],
[386,473,448,0,488,457,416,475],
[461,517,472,403,0,466,444,409],
[469,471,454,434,425,0,435,442],
[429,478,415,475,447,456,0,459],
[415,528,465,416,482,449,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,448,455,439,453,449,452],
[450,0,428,430,475,451,453,447],
[443,463,0,452,458,481,461,446],
[436,461,439,0,455,444,454,451],
[452,416,433,436,0,447,452,443],
[438,440,410,447,444,0,446,435],
[442,438,430,437,439,445,0,449],
[439,444,445,440,448,456,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,485,462,429,449,454,499],
[461,0,449,427,417,454,426,438],
[406,442,0,469,408,404,463,452],
[429,464,422,0,458,419,403,458],
[462,474,483,433,0,466,435,459],
[442,437,487,472,425,0,445,446],
[437,465,428,488,456,446,0,493],
[392,453,439,433,432,445,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,426,394,426,447,419,419],
[475,0,492,423,447,453,425,416],
[465,399,0,369,485,487,448,415],
[497,468,522,0,442,466,471,434],
[465,444,406,449,0,478,437,397],
[444,438,404,425,413,0,395,413],
[472,466,443,420,454,496,0,500],
[472,475,476,457,494,478,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,423,444,425,395,445,470],
[448,0,448,441,417,428,429,468],
[468,443,0,442,426,416,441,451],
[447,450,449,0,440,438,435,464],
[466,474,465,451,0,449,441,478],
[496,463,475,453,442,0,478,479],
[446,462,450,456,450,413,0,465],
[421,423,440,427,413,412,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,420,424,432,412,411,448],
[452,0,441,423,430,392,448,443],
[471,450,0,427,440,449,450,470],
[467,468,464,0,472,420,475,483],
[459,461,451,419,0,445,446,451],
[479,499,442,471,446,0,470,489],
[480,443,441,416,445,421,0,482],
[443,448,421,408,440,402,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,416,421,435,452,458,427],
[461,0,419,406,431,472,440,422],
[475,472,0,459,427,458,489,446],
[470,485,432,0,447,441,482,454],
[456,460,464,444,0,450,484,450],
[439,419,433,450,441,0,441,433],
[433,451,402,409,407,450,0,415],
[464,469,445,437,441,458,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,477,419,462,464,466,459],
[422,0,465,425,468,408,428,429],
[414,426,0,407,435,422,437,419],
[472,466,484,0,484,456,445,466],
[429,423,456,407,0,419,429,409],
[427,483,469,435,472,0,438,433],
[425,463,454,446,462,453,0,430],
[432,462,472,425,482,458,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,446,450,442,406,434,434],
[429,0,428,455,402,449,378,372],
[445,463,0,459,419,408,449,416],
[441,436,432,0,417,404,449,403],
[449,489,472,474,0,404,429,462],
[485,442,483,487,487,0,460,462],
[457,513,442,442,462,431,0,421],
[457,519,475,488,429,429,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,437,445,467,423,449,465],
[437,0,422,444,442,401,408,450],
[454,469,0,448,465,423,446,483],
[446,447,443,0,453,455,443,470],
[424,449,426,438,0,416,425,463],
[468,490,468,436,475,0,439,471],
[442,483,445,448,466,452,0,481],
[426,441,408,421,428,420,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,471,451,443,446,474,458],
[469,0,473,449,438,450,457,447],
[420,418,0,442,431,448,449,450],
[440,442,449,0,463,429,455,451],
[448,453,460,428,0,441,476,450],
[445,441,443,462,450,0,450,454],
[417,434,442,436,415,441,0,457],
[433,444,441,440,441,437,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,460,480,479,458,434,449],
[467,0,436,472,461,521,429,452],
[431,455,0,413,408,459,385,402],
[411,419,478,0,428,431,462,443],
[412,430,483,463,0,465,422,483],
[433,370,432,460,426,0,406,417],
[457,462,506,429,469,485,0,471],
[442,439,489,448,408,474,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,454,469,431,410,431,406],
[481,0,439,476,451,403,459,392],
[437,452,0,492,446,410,420,403],
[422,415,399,0,398,399,402,399],
[460,440,445,493,0,425,456,451],
[481,488,481,492,466,0,445,445],
[460,432,471,489,435,446,0,416],
[485,499,488,492,440,446,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,369,400,417,473,398,435,436],
[522,0,455,456,502,443,436,457],
[491,436,0,406,479,434,468,470],
[474,435,485,0,475,464,410,566],
[418,389,412,416,0,357,382,426],
[493,448,457,427,534,0,508,481],
[456,455,423,481,509,383,0,447],
[455,434,421,325,465,410,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,509,450,495,463,434,474],
[436,0,484,477,478,465,446,452],
[382,407,0,447,434,426,398,410],
[441,414,444,0,454,465,421,425],
[396,413,457,437,0,431,404,378],
[428,426,465,426,460,0,441,435],
[457,445,493,470,487,450,0,417],
[417,439,481,466,513,456,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,565,524,609,402,445,445,440],
[326,0,405,407,325,284,449,362],
[367,486,0,488,446,446,486,363],
[282,484,403,0,282,365,404,360],
[489,566,445,609,0,485,609,485],
[446,607,445,526,406,0,528,440],
[446,442,405,487,282,363,0,361],
[451,529,528,531,406,451,530,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,413,433,470,442,443,406],
[470,0,465,475,489,466,476,434],
[478,426,0,468,482,452,444,452],
[458,416,423,0,490,442,458,415],
[421,402,409,401,0,419,425,395],
[449,425,439,449,472,0,448,408],
[448,415,447,433,466,443,0,409],
[485,457,439,476,496,483,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,446,464,461,441,470,442],
[429,0,415,432,457,430,449,438],
[445,476,0,461,451,456,460,460],
[427,459,430,0,424,440,450,446],
[430,434,440,467,0,444,462,451],
[450,461,435,451,447,0,425,438],
[421,442,431,441,429,466,0,448],
[449,453,431,445,440,453,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,464,510,447,477,436,496],
[453,0,426,490,463,442,488,476],
[427,465,0,488,449,428,459,475],
[381,401,403,0,449,400,456,424],
[444,428,442,442,0,436,442,460],
[414,449,463,491,455,0,458,489],
[455,403,432,435,449,433,0,454],
[395,415,416,467,431,402,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,439,469,439,460,467,439],
[441,0,439,467,457,434,448,417],
[452,452,0,450,437,471,464,436],
[422,424,441,0,445,460,441,419],
[452,434,454,446,0,444,452,450],
[431,457,420,431,447,0,446,421],
[424,443,427,450,439,445,0,434],
[452,474,455,472,441,470,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,459,466,472,434,521,502],
[423,0,445,477,478,447,484,477],
[432,446,0,508,482,457,506,502],
[425,414,383,0,410,428,444,473],
[419,413,409,481,0,429,516,478],
[457,444,434,463,462,0,461,477],
[370,407,385,447,375,430,0,417],
[389,414,389,418,413,414,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,384,490,436,488,421,413],
[436,0,457,431,375,471,450,396],
[507,434,0,457,431,469,420,392],
[401,460,434,0,441,467,409,438],
[455,516,460,450,0,502,426,451],
[403,420,422,424,389,0,387,474],
[470,441,471,482,465,504,0,449],
[478,495,499,453,440,417,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,465,410,448,415,437,455],
[468,0,462,429,475,458,436,503],
[426,429,0,433,447,428,410,427],
[481,462,458,0,445,443,447,457],
[443,416,444,446,0,419,459,444],
[476,433,463,448,472,0,453,463],
[454,455,481,444,432,438,0,471],
[436,388,464,434,447,428,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,476,489,480,461,430,419],
[419,0,490,444,505,411,387,479],
[415,401,0,438,498,421,397,382],
[402,447,453,0,465,393,430,421],
[411,386,393,426,0,385,376,365],
[430,480,470,498,506,0,472,431],
[461,504,494,461,515,419,0,468],
[472,412,509,470,526,460,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,422,439,452,425,380,422],
[473,0,458,478,460,429,431,449],
[469,433,0,471,487,458,454,425],
[452,413,420,0,458,393,379,384],
[439,431,404,433,0,424,398,421],
[466,462,433,498,467,0,423,421],
[511,460,437,512,493,468,0,458],
[469,442,466,507,470,470,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,451,422,432,438,434,448],
[433,0,432,442,460,447,458,423],
[440,459,0,439,426,443,472,439],
[469,449,452,0,442,449,455,458],
[459,431,465,449,0,457,473,461],
[453,444,448,442,434,0,436,445],
[457,433,419,436,418,455,0,447],
[443,468,452,433,430,446,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,460,422,456,453,434,427],
[443,0,458,423,427,424,431,446],
[431,433,0,456,430,469,465,421],
[469,468,435,0,455,480,460,456],
[435,464,461,436,0,467,466,415],
[438,467,422,411,424,0,437,423],
[457,460,426,431,425,454,0,411],
[464,445,470,435,476,468,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,474,437,478,499,499,451],
[431,0,440,434,454,458,483,472],
[417,451,0,451,458,483,508,516],
[454,457,440,0,456,449,523,490],
[413,437,433,435,0,461,483,465],
[392,433,408,442,430,0,480,441],
[392,408,383,368,408,411,0,429],
[440,419,375,401,426,450,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,406,434,409,424,451,364],
[485,0,423,442,410,457,457,424],
[485,468,0,460,425,452,473,390],
[457,449,431,0,447,440,456,418],
[482,481,466,444,0,465,476,447],
[467,434,439,451,426,0,461,433],
[440,434,418,435,415,430,0,398],
[527,467,501,473,444,458,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,467,471,465,471,465,424],
[463,0,473,462,449,461,404,459],
[424,418,0,406,466,398,421,417],
[420,429,485,0,478,457,461,437],
[426,442,425,413,0,449,408,414],
[420,430,493,434,442,0,450,445],
[426,487,470,430,483,441,0,457],
[467,432,474,454,477,446,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,435,451,402,414,420,393],
[498,0,509,468,444,457,460,458],
[456,382,0,459,432,405,419,458],
[440,423,432,0,435,421,444,444],
[489,447,459,456,0,436,468,432],
[477,434,486,470,455,0,439,460],
[471,431,472,447,423,452,0,446],
[498,433,433,447,459,431,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,468,457,461,440,462,411],
[465,0,472,438,469,449,446,437],
[423,419,0,454,465,426,413,425],
[434,453,437,0,425,419,461,421],
[430,422,426,466,0,425,458,444],
[451,442,465,472,466,0,433,453],
[429,445,478,430,433,458,0,398],
[480,454,466,470,447,438,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,349,319,478,379,254,639],
[413,0,413,412,385,320,285,449],
[542,478,0,445,510,477,321,672],
[572,479,446,0,444,382,289,544],
[413,506,381,447,0,412,385,480],
[512,571,414,509,479,0,446,672],
[637,606,570,602,506,445,0,571],
[252,442,219,347,411,219,320,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,453,431,464,414,418,394],
[444,0,467,449,472,450,470,426],
[438,424,0,412,437,418,439,396],
[460,442,479,0,493,458,454,407],
[427,419,454,398,0,427,427,409],
[477,441,473,433,464,0,467,476],
[473,421,452,437,464,424,0,418],
[497,465,495,484,482,415,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,441,454,409,498,434,436],
[461,0,436,417,447,467,435,446],
[450,455,0,429,415,461,447,426],
[437,474,462,0,419,473,453,425],
[482,444,476,472,0,491,468,432],
[393,424,430,418,400,0,387,391],
[457,456,444,438,423,504,0,440],
[455,445,465,466,459,500,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,434,456,450,447,433,438],
[450,0,443,444,452,456,439,435],
[457,448,0,448,455,443,441,447],
[435,447,443,0,457,484,476,452],
[441,439,436,434,0,470,446,442],
[444,435,448,407,421,0,455,438],
[458,452,450,415,445,436,0,455],
[453,456,444,439,449,453,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,416,441,444,438,434,468],
[450,0,440,453,419,471,445,455],
[475,451,0,438,470,466,460,475],
[450,438,453,0,424,434,451,443],
[447,472,421,467,0,440,463,454],
[453,420,425,457,451,0,472,457],
[457,446,431,440,428,419,0,448],
[423,436,416,448,437,434,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,457,484,441,449,493,468],
[461,0,455,462,468,443,481,445],
[434,436,0,476,460,460,483,423],
[407,429,415,0,461,420,463,433],
[450,423,431,430,0,430,427,445],
[442,448,431,471,461,0,459,429],
[398,410,408,428,464,432,0,409],
[423,446,468,458,446,462,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,453,416,413,429,422,426],
[471,0,479,469,426,441,464,441],
[438,412,0,417,358,433,437,410],
[475,422,474,0,448,442,458,446],
[478,465,533,443,0,467,478,442],
[462,450,458,449,424,0,438,432],
[469,427,454,433,413,453,0,416],
[465,450,481,445,449,459,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,563,475,473,415,472,387,414],
[328,0,299,292,359,416,300,296],
[416,592,0,415,354,506,389,416],
[418,599,476,0,534,569,570,474],
[476,532,537,357,0,476,423,442],
[419,475,385,322,415,0,361,417],
[504,591,502,321,468,530,0,498],
[477,595,475,417,449,474,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,468,448,450,411,429,454],
[467,0,460,452,437,448,442,462],
[423,431,0,450,455,435,419,421],
[443,439,441,0,446,443,414,446],
[441,454,436,445,0,455,440,462],
[480,443,456,448,436,0,451,447],
[462,449,472,477,451,440,0,458],
[437,429,470,445,429,444,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,453,452,463,469,463,444],
[457,0,430,435,446,460,456,435],
[438,461,0,435,445,451,453,452],
[439,456,456,0,454,475,460,442],
[428,445,446,437,0,461,451,439],
[422,431,440,416,430,0,427,420],
[428,435,438,431,440,464,0,432],
[447,456,439,449,452,471,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,412,418,451,438,432,414],
[477,0,431,431,445,429,422,447],
[479,460,0,462,456,428,429,450],
[473,460,429,0,479,427,443,438],
[440,446,435,412,0,437,440,434],
[453,462,463,464,454,0,438,453],
[459,469,462,448,451,453,0,439],
[477,444,441,453,457,438,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,442,431,441,455,467,476],
[459,0,452,446,452,439,456,456],
[449,439,0,421,429,458,453,431],
[460,445,470,0,429,462,461,460],
[450,439,462,462,0,442,475,467],
[436,452,433,429,449,0,447,432],
[424,435,438,430,416,444,0,415],
[415,435,460,431,424,459,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,559,419,486,469,476,460],
[383,0,479,455,481,494,473,445],
[332,412,0,374,432,417,408,395],
[472,436,517,0,471,446,451,484],
[405,410,459,420,0,393,404,442],
[422,397,474,445,498,0,518,500],
[415,418,483,440,487,373,0,442],
[431,446,496,407,449,391,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,456,474,452,470,424,469],
[440,0,425,461,431,431,428,430],
[435,466,0,457,441,445,457,431],
[417,430,434,0,436,429,438,436],
[439,460,450,455,0,453,440,454],
[421,460,446,462,438,0,438,462],
[467,463,434,453,451,453,0,463],
[422,461,460,455,437,429,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,450,447,455,435,445,412],
[462,0,467,449,457,443,479,452],
[441,424,0,432,477,434,446,435],
[444,442,459,0,458,458,465,435],
[436,434,414,433,0,440,434,447],
[456,448,457,433,451,0,462,436],
[446,412,445,426,457,429,0,409],
[479,439,456,456,444,455,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,460,433,411,422,441,424],
[461,0,472,454,469,444,443,450],
[431,419,0,401,438,438,412,410],
[458,437,490,0,459,428,472,447],
[480,422,453,432,0,433,467,462],
[469,447,453,463,458,0,449,441],
[450,448,479,419,424,442,0,441],
[467,441,481,444,429,450,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,425,422,434,467,410,474],
[476,0,431,428,450,474,457,520],
[466,460,0,390,440,473,431,438],
[469,463,501,0,391,459,455,447],
[457,441,451,500,0,524,429,482],
[424,417,418,432,367,0,415,419],
[481,434,460,436,462,476,0,458],
[417,371,453,444,409,472,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,468,475,433,451,452,457],
[438,0,448,466,453,437,441,450],
[423,443,0,442,417,424,426,431],
[416,425,449,0,411,447,422,420],
[458,438,474,480,0,450,464,451],
[440,454,467,444,441,0,427,439],
[439,450,465,469,427,464,0,456],
[434,441,460,471,440,452,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,474,461,429,448,437,457],
[454,0,416,451,432,429,456,484],
[417,475,0,461,442,470,466,449],
[430,440,430,0,423,444,455,467],
[462,459,449,468,0,467,452,439],
[443,462,421,447,424,0,467,471],
[454,435,425,436,439,424,0,435],
[434,407,442,424,452,420,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,469,450,459,456,447,453],
[449,0,501,435,439,459,466,489],
[422,390,0,422,407,414,416,445],
[441,456,469,0,447,470,458,456],
[432,452,484,444,0,473,442,455],
[435,432,477,421,418,0,439,454],
[444,425,475,433,449,452,0,458],
[438,402,446,435,436,437,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,482,441,425,457,430,461],
[384,0,390,386,438,359,427,424],
[409,501,0,419,428,354,427,436],
[450,505,472,0,417,416,450,443],
[466,453,463,474,0,444,416,426],
[434,532,537,475,447,0,509,487],
[461,464,464,441,475,382,0,476],
[430,467,455,448,465,404,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,466,451,445,452,461,456],
[432,0,451,426,435,424,439,466],
[425,440,0,457,440,455,445,455],
[440,465,434,0,434,447,436,432],
[446,456,451,457,0,451,428,441],
[439,467,436,444,440,0,433,440],
[430,452,446,455,463,458,0,450],
[435,425,436,459,450,451,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,508,461,454,528,459,438],
[498,0,546,442,423,496,481,422],
[383,345,0,447,404,447,486,433],
[430,449,444,0,415,474,439,465],
[437,468,487,476,0,496,503,481],
[363,395,444,417,395,0,426,387],
[432,410,405,452,388,465,0,472],
[453,469,458,426,410,504,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,454,441,415,457,449,447],
[468,0,445,439,434,469,445,433],
[437,446,0,451,436,456,459,447],
[450,452,440,0,446,446,458,438],
[476,457,455,445,0,459,454,455],
[434,422,435,445,432,0,443,458],
[442,446,432,433,437,448,0,419],
[444,458,444,453,436,433,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,447,446,440,464,446,448],
[446,0,437,425,446,462,449,445],
[444,454,0,420,446,458,421,456],
[445,466,471,0,463,489,448,480],
[451,445,445,428,0,436,424,439],
[427,429,433,402,455,0,428,452],
[445,442,470,443,467,463,0,444],
[443,446,435,411,452,439,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,452,424,433,436,438,468],
[455,0,466,446,450,445,436,473],
[439,425,0,411,429,431,429,475],
[467,445,480,0,425,422,472,477],
[458,441,462,466,0,447,439,469],
[455,446,460,469,444,0,437,465],
[453,455,462,419,452,454,0,477],
[423,418,416,414,422,426,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,442,322,359,392,393,417],
[500,0,482,443,470,452,443,483],
[449,409,0,392,436,420,365,440],
[569,448,499,0,435,484,440,467],
[532,421,455,456,0,430,431,468],
[499,439,471,407,461,0,453,453],
[498,448,526,451,460,438,0,449],
[474,408,451,424,423,438,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,405,406,457,406,407,437],
[464,0,443,452,470,449,440,468],
[486,448,0,461,475,422,417,495],
[485,439,430,0,452,441,442,479],
[434,421,416,439,0,416,424,477],
[485,442,469,450,475,0,448,493],
[484,451,474,449,467,443,0,484],
[454,423,396,412,414,398,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,459,455,436,454,454,441],
[450,0,440,400,417,419,426,416],
[432,451,0,425,424,437,434,457],
[436,491,466,0,476,492,454,491],
[455,474,467,415,0,447,486,468],
[437,472,454,399,444,0,425,408],
[437,465,457,437,405,466,0,466],
[450,475,434,400,423,483,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,445,449,439,447,461,454],
[450,0,442,457,468,442,465,478],
[446,449,0,438,429,427,433,443],
[442,434,453,0,433,427,466,456],
[452,423,462,458,0,441,458,447],
[444,449,464,464,450,0,434,449],
[430,426,458,425,433,457,0,435],
[437,413,448,435,444,442,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,455,438,448,461,459,459],
[423,0,432,438,430,438,441,440],
[436,459,0,450,457,465,447,461],
[453,453,441,0,452,456,431,456],
[443,461,434,439,0,431,446,448],
[430,453,426,435,460,0,430,449],
[432,450,444,460,445,461,0,464],
[432,451,430,435,443,442,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,441,372,375,514,456,414],
[425,0,420,457,434,512,388,388],
[450,471,0,445,497,449,481,440],
[519,434,446,0,466,541,442,426],
[516,457,394,425,0,477,444,448],
[377,379,442,350,414,0,363,353],
[435,503,410,449,447,528,0,424],
[477,503,451,465,443,538,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,451,487,446,512,480,492],
[454,0,394,437,431,463,452,437],
[440,497,0,476,476,474,492,492],
[404,454,415,0,400,443,439,454],
[445,460,415,491,0,434,452,468],
[379,428,417,448,457,0,453,433],
[411,439,399,452,439,438,0,466],
[399,454,399,437,423,458,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,441,449,439,443,459,441],
[471,0,441,460,454,456,450,437],
[450,450,0,427,442,422,452,437],
[442,431,464,0,437,456,448,456],
[452,437,449,454,0,451,431,437],
[448,435,469,435,440,0,443,447],
[432,441,439,443,460,448,0,443],
[450,454,454,435,454,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,414,466,438,437,438,459],
[471,0,461,493,457,443,465,490],
[477,430,0,479,429,462,459,501],
[425,398,412,0,409,428,414,456],
[453,434,462,482,0,434,466,445],
[454,448,429,463,457,0,429,469],
[453,426,432,477,425,462,0,443],
[432,401,390,435,446,422,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,444,403,442,458,420,446],
[469,0,470,464,447,444,452,463],
[447,421,0,453,454,469,446,443],
[488,427,438,0,460,466,397,435],
[449,444,437,431,0,429,397,435],
[433,447,422,425,462,0,400,460],
[471,439,445,494,494,491,0,446],
[445,428,448,456,456,431,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,463,425,411,539,448,456],
[438,0,419,446,429,483,402,367],
[428,472,0,396,403,457,443,382],
[466,445,495,0,443,530,516,433],
[480,462,488,448,0,465,430,426],
[352,408,434,361,426,0,370,386],
[443,489,448,375,461,521,0,438],
[435,524,509,458,465,505,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,451,409,456,436,454,446],
[446,0,452,420,441,440,412,410],
[440,439,0,420,432,437,419,418],
[482,471,471,0,457,478,433,480],
[435,450,459,434,0,450,440,434],
[455,451,454,413,441,0,421,449],
[437,479,472,458,451,470,0,452],
[445,481,473,411,457,442,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,434,449,433,433,432,430],
[445,0,401,423,422,408,426,431],
[457,490,0,460,429,417,439,413],
[442,468,431,0,429,407,435,408],
[458,469,462,462,0,441,449,435],
[458,483,474,484,450,0,475,439],
[459,465,452,456,442,416,0,448],
[461,460,478,483,456,452,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,431,406,442,461,379,471],
[439,0,457,451,472,511,478,511],
[460,434,0,417,453,447,444,507],
[485,440,474,0,451,479,492,508],
[449,419,438,440,0,490,428,460],
[430,380,444,412,401,0,381,442],
[512,413,447,399,463,510,0,499],
[420,380,384,383,431,449,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,395,443,400,428,450,357],
[490,0,449,494,435,460,479,448],
[496,442,0,526,455,517,428,453],
[448,397,365,0,372,427,450,410],
[491,456,436,519,0,469,496,478],
[463,431,374,464,422,0,443,419],
[441,412,463,441,395,448,0,451],
[534,443,438,481,413,472,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,428,447,439,453,433,450],
[425,0,427,445,435,425,416,439],
[463,464,0,445,460,445,440,440],
[444,446,446,0,436,461,429,465],
[452,456,431,455,0,464,418,438],
[438,466,446,430,427,0,451,449],
[458,475,451,462,473,440,0,483],
[441,452,451,426,453,442,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,416,434,428,463,438,442],
[466,0,426,414,477,418,439,381],
[475,465,0,407,443,464,429,447],
[457,477,484,0,458,441,467,478],
[463,414,448,433,0,434,410,443],
[428,473,427,450,457,0,410,416],
[453,452,462,424,481,481,0,431],
[449,510,444,413,448,475,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,454,499,415,477,431,463],
[459,0,447,469,412,410,422,472],
[437,444,0,457,393,423,464,451],
[392,422,434,0,348,391,366,387],
[476,479,498,543,0,446,418,507],
[414,481,468,500,445,0,442,486],
[460,469,427,525,473,449,0,535],
[428,419,440,504,384,405,356,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,445,444,454,424,436,433],
[452,0,431,431,470,415,431,441],
[446,460,0,462,453,434,451,485],
[447,460,429,0,450,451,456,459],
[437,421,438,441,0,405,434,465],
[467,476,457,440,486,0,460,462],
[455,460,440,435,457,431,0,460],
[458,450,406,432,426,429,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,434,434,425,456,445,433],
[409,0,388,393,381,427,390,381],
[457,503,0,430,459,461,444,428],
[457,498,461,0,434,469,452,453],
[466,510,432,457,0,480,464,437],
[435,464,430,422,411,0,416,418],
[446,501,447,439,427,475,0,446],
[458,510,463,438,454,473,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,458,443,480,452,447,458],
[461,0,428,444,466,444,417,461],
[433,463,0,441,442,444,446,449],
[448,447,450,0,445,458,456,453],
[411,425,449,446,0,437,444,425],
[439,447,447,433,454,0,442,459],
[444,474,445,435,447,449,0,452],
[433,430,442,438,466,432,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,464,448,500,446,428,511],
[469,0,437,439,451,476,454,490],
[427,454,0,416,474,446,437,481],
[443,452,475,0,500,487,470,493],
[391,440,417,391,0,449,413,458],
[445,415,445,404,442,0,407,451],
[463,437,454,421,478,484,0,505],
[380,401,410,398,433,440,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,412,446,379,432,463,430],
[442,0,402,439,431,442,461,435],
[479,489,0,468,470,437,498,440],
[445,452,423,0,400,457,434,435],
[512,460,421,491,0,482,497,462],
[459,449,454,434,409,0,438,465],
[428,430,393,457,394,453,0,428],
[461,456,451,456,429,426,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,500,481,433,471,539,522],
[422,0,538,554,520,487,541,457],
[391,353,0,477,392,464,470,410],
[410,337,414,0,412,409,477,395],
[458,371,499,479,0,408,479,417],
[420,404,427,482,483,0,513,404],
[352,350,421,414,412,378,0,400],
[369,434,481,496,474,487,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,432,450,447,469,469,440],
[430,0,454,429,459,447,466,436],
[459,437,0,435,464,463,455,431],
[441,462,456,0,482,453,489,438],
[444,432,427,409,0,426,458,423],
[422,444,428,438,465,0,450,446],
[422,425,436,402,433,441,0,405],
[451,455,460,453,468,445,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,437,442,460,442,455,437],
[420,0,458,430,432,449,446,432],
[454,433,0,444,443,431,424,428],
[449,461,447,0,440,441,439,432],
[431,459,448,451,0,448,443,439],
[449,442,460,450,443,0,449,446],
[436,445,467,452,448,442,0,426],
[454,459,463,459,452,445,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,472,456,435,439,443,471],
[440,0,438,453,451,439,448,455],
[419,453,0,448,435,458,443,460],
[435,438,443,0,446,418,425,468],
[456,440,456,445,0,434,435,479],
[452,452,433,473,457,0,455,470],
[448,443,448,466,456,436,0,466],
[420,436,431,423,412,421,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,461,453,479,449,468,437],
[455,0,430,473,491,469,471,449],
[430,461,0,437,474,451,451,430],
[438,418,454,0,454,444,450,437],
[412,400,417,437,0,419,414,425],
[442,422,440,447,472,0,439,439],
[423,420,440,441,477,452,0,430],
[454,442,461,454,466,452,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,434,455,450,455,428,439],
[469,0,450,458,438,470,474,455],
[457,441,0,447,440,476,485,457],
[436,433,444,0,422,451,448,430],
[441,453,451,469,0,483,448,463],
[436,421,415,440,408,0,428,410],
[463,417,406,443,443,463,0,437],
[452,436,434,461,428,481,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,541,421,441,406,473,474],
[451,0,495,455,438,449,474,468],
[350,396,0,365,397,325,379,437],
[470,436,526,0,459,449,454,475],
[450,453,494,432,0,390,459,485],
[485,442,566,442,501,0,527,515],
[418,417,512,437,432,364,0,451],
[417,423,454,416,406,376,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,440,427,489,428,451,437],
[460,0,441,453,479,487,470,464],
[451,450,0,473,482,439,483,482],
[464,438,418,0,461,434,464,473],
[402,412,409,430,0,410,424,440],
[463,404,452,457,481,0,458,475],
[440,421,408,427,467,433,0,451],
[454,427,409,418,451,416,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,452,432,477,457,486,467],
[437,0,403,405,434,453,439,430],
[439,488,0,433,475,435,500,475],
[459,486,458,0,466,431,471,456],
[414,457,416,425,0,412,441,428],
[434,438,456,460,479,0,488,462],
[405,452,391,420,450,403,0,436],
[424,461,416,435,463,429,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,453,418,457,432,432,404],
[405,0,425,400,443,438,407,381],
[438,466,0,467,454,448,447,437],
[473,491,424,0,448,447,412,413],
[434,448,437,443,0,440,397,407],
[459,453,443,444,451,0,407,428],
[459,484,444,479,494,484,0,452],
[487,510,454,478,484,463,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,468,487,448,434,453,420],
[449,0,507,489,474,444,413,458],
[423,384,0,433,460,422,419,414],
[404,402,458,0,445,379,415,444],
[443,417,431,446,0,441,391,415],
[457,447,469,512,450,0,451,441],
[438,478,472,476,500,440,0,434],
[471,433,477,447,476,450,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,437,429,426,427,449,453],
[461,0,424,438,419,431,463,460],
[454,467,0,444,430,447,476,447],
[462,453,447,0,406,427,462,457],
[465,472,461,485,0,440,479,465],
[464,460,444,464,451,0,466,449],
[442,428,415,429,412,425,0,427],
[438,431,444,434,426,442,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,469,500,538,444,415,501],
[435,0,452,465,460,423,386,423],
[422,439,0,436,484,421,424,406],
[391,426,455,0,419,390,393,434],
[353,431,407,472,0,372,330,409],
[447,468,470,501,519,0,408,482],
[476,505,467,498,561,483,0,442],
[390,468,485,457,482,409,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,405,390,392,404,422,333],
[487,0,461,433,447,499,351,377],
[486,430,0,464,470,462,464,445],
[501,458,427,0,465,496,427,462],
[499,444,421,426,0,459,357,407],
[487,392,429,395,432,0,413,430],
[469,540,427,464,534,478,0,462],
[558,514,446,429,484,461,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,408,418,399,421,442,400],
[467,0,442,445,409,447,431,440],
[483,449,0,449,432,436,429,443],
[473,446,442,0,439,445,445,424],
[492,482,459,452,0,480,463,428],
[470,444,455,446,411,0,454,440],
[449,460,462,446,428,437,0,450],
[491,451,448,467,463,451,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,416,478,446,465,456,446],
[445,0,417,459,442,483,451,439],
[475,474,0,456,447,478,476,441],
[413,432,435,0,453,459,452,435],
[445,449,444,438,0,469,465,458],
[426,408,413,432,422,0,423,415],
[435,440,415,439,426,468,0,429],
[445,452,450,456,433,476,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,448,435,452,448,455,442],
[447,0,465,442,475,463,464,473],
[443,426,0,452,465,452,463,475],
[456,449,439,0,466,454,468,429],
[439,416,426,425,0,449,459,434],
[443,428,439,437,442,0,447,460],
[436,427,428,423,432,444,0,456],
[449,418,416,462,457,431,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,463,456,462,451,454,442],
[443,0,427,469,446,445,457,446],
[428,464,0,457,464,459,462,433],
[435,422,434,0,456,420,440,439],
[429,445,427,435,0,432,439,403],
[440,446,432,471,459,0,447,444],
[437,434,429,451,452,444,0,420],
[449,445,458,452,488,447,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,440,482,465,447,465,448],
[442,0,450,434,426,407,444,464],
[451,441,0,444,437,443,463,428],
[409,457,447,0,452,430,426,416],
[426,465,454,439,0,440,455,447],
[444,484,448,461,451,0,469,433],
[426,447,428,465,436,422,0,438],
[443,427,463,475,444,458,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,466,440,425,482,481,452],
[437,0,439,457,444,432,461,433],
[425,452,0,455,463,448,472,454],
[451,434,436,0,435,465,463,407],
[466,447,428,456,0,488,470,481],
[409,459,443,426,403,0,461,445],
[410,430,419,428,421,430,0,418],
[439,458,437,484,410,446,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,470,489,436,435,444,419],
[449,0,490,482,446,449,441,446],
[421,401,0,439,414,443,414,397],
[402,409,452,0,420,420,428,412],
[455,445,477,471,0,460,456,424],
[456,442,448,471,431,0,439,426],
[447,450,477,463,435,452,0,427],
[472,445,494,479,467,465,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,428,425,430,396,398,420],
[479,0,465,449,455,433,441,455],
[463,426,0,437,433,422,414,424],
[466,442,454,0,447,445,418,441],
[461,436,458,444,0,420,427,426],
[495,458,469,446,471,0,431,425],
[493,450,477,473,464,460,0,445],
[471,436,467,450,465,466,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,431,464,494,459,444,393],
[417,0,443,479,437,425,447,427],
[460,448,0,469,435,461,441,443],
[427,412,422,0,400,455,441,433],
[397,454,456,491,0,439,435,455],
[432,466,430,436,452,0,482,402],
[447,444,450,450,456,409,0,429],
[498,464,448,458,436,489,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,437,472,432,449,444,445],
[455,0,449,450,467,458,443,465],
[454,442,0,486,454,467,449,461],
[419,441,405,0,411,441,437,443],
[459,424,437,480,0,476,457,458],
[442,433,424,450,415,0,406,440],
[447,448,442,454,434,485,0,421],
[446,426,430,448,433,451,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,471,473,469,444,475,414],
[446,0,478,464,496,430,442,456],
[420,413,0,415,418,421,410,401],
[418,427,476,0,436,454,452,428],
[422,395,473,455,0,422,439,419],
[447,461,470,437,469,0,455,427],
[416,449,481,439,452,436,0,424],
[477,435,490,463,472,464,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,459,509,458,468,486,428],
[415,0,362,460,365,421,431,376],
[432,529,0,484,465,473,508,446],
[382,431,407,0,382,427,428,374],
[433,526,426,509,0,425,467,488],
[423,470,418,464,466,0,504,479],
[405,460,383,463,424,387,0,400],
[463,515,445,517,403,412,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,470,495,514,443,552,448],
[392,0,411,445,499,421,466,474],
[421,480,0,498,498,461,441,476],
[396,446,393,0,434,377,460,439],
[377,392,393,457,0,408,428,423],
[448,470,430,514,483,0,481,498],
[339,425,450,431,463,410,0,417],
[443,417,415,452,468,393,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,459,461,438,435,456,441],
[460,0,472,483,451,442,471,437],
[432,419,0,445,457,441,446,429],
[430,408,446,0,429,432,446,462],
[453,440,434,462,0,418,461,444],
[456,449,450,459,473,0,481,442],
[435,420,445,445,430,410,0,450],
[450,454,462,429,447,449,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,419,391,403,418,406,414],
[487,0,452,457,456,454,492,433],
[472,439,0,430,428,471,455,436],
[500,434,461,0,441,485,499,451],
[488,435,463,450,0,473,435,445],
[473,437,420,406,418,0,460,454],
[485,399,436,392,456,431,0,433],
[477,458,455,440,446,437,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,483,454,457,424,491,421],
[446,0,472,442,491,452,498,477],
[408,419,0,424,494,433,464,461],
[437,449,467,0,459,453,481,477],
[434,400,397,432,0,393,483,459],
[467,439,458,438,498,0,474,463],
[400,393,427,410,408,417,0,393],
[470,414,430,414,432,428,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,454,457,427,435,433,445],
[432,0,411,412,410,388,428,415],
[437,480,0,445,428,435,430,438],
[434,479,446,0,443,437,483,435],
[464,481,463,448,0,439,444,445],
[456,503,456,454,452,0,441,482],
[458,463,461,408,447,450,0,448],
[446,476,453,456,446,409,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,442,441,425,437,432,436],
[450,0,448,440,450,457,436,444],
[449,443,0,439,447,473,441,455],
[450,451,452,0,449,454,450,442],
[466,441,444,442,0,455,438,440],
[454,434,418,437,436,0,439,441],
[459,455,450,441,453,452,0,458],
[455,447,436,449,451,450,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,414,434,428,441,440,438],
[438,0,409,434,425,434,419,437],
[477,482,0,444,456,467,465,458],
[457,457,447,0,446,455,454,429],
[463,466,435,445,0,444,448,440],
[450,457,424,436,447,0,464,447],
[451,472,426,437,443,427,0,445],
[453,454,433,462,451,444,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,454,459,444,449,454,464],
[409,0,433,441,436,429,442,430],
[437,458,0,437,459,431,453,465],
[432,450,454,0,448,445,443,473],
[447,455,432,443,0,439,458,460],
[442,462,460,446,452,0,456,469],
[437,449,438,448,433,435,0,449],
[427,461,426,418,431,422,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,437,437,428,473,461,444],
[446,0,435,441,436,457,440,423],
[454,456,0,440,442,444,444,432],
[454,450,451,0,453,468,455,434],
[463,455,449,438,0,463,459,456],
[418,434,447,423,428,0,441,436],
[430,451,447,436,432,450,0,436],
[447,468,459,457,435,455,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,436,446,441,445,418,432],
[452,0,443,447,452,452,445,482],
[455,448,0,430,452,464,440,473],
[445,444,461,0,449,473,462,455],
[450,439,439,442,0,455,450,456],
[446,439,427,418,436,0,425,456],
[473,446,451,429,441,466,0,450],
[459,409,418,436,435,435,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,445,477,441,441,474,455],
[448,0,470,427,403,503,449,454],
[446,421,0,473,450,458,463,487],
[414,464,418,0,422,463,452,435],
[450,488,441,469,0,449,459,424],
[450,388,433,428,442,0,441,463],
[417,442,428,439,432,450,0,451],
[436,437,404,456,467,428,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,480,441,446,419,455,451],
[449,0,472,414,456,462,449,451],
[411,419,0,413,426,436,415,449],
[450,477,478,0,458,445,452,477],
[445,435,465,433,0,460,463,470],
[472,429,455,446,431,0,428,451],
[436,442,476,439,428,463,0,456],
[440,440,442,414,421,440,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,421,411,447,420,429,444],
[458,0,482,450,462,445,457,477],
[470,409,0,443,474,458,452,464],
[480,441,448,0,462,435,443,465],
[444,429,417,429,0,418,417,465],
[471,446,433,456,473,0,450,469],
[462,434,439,448,474,441,0,454],
[447,414,427,426,426,422,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,449,428,443,420,436,421],
[418,0,426,442,417,433,416,417],
[442,465,0,459,459,434,434,432],
[463,449,432,0,456,428,410,433],
[448,474,432,435,0,429,446,421],
[471,458,457,463,462,0,442,452],
[455,475,457,481,445,449,0,460],
[470,474,459,458,470,439,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,430,425,457,420,428,437],
[484,0,444,455,452,441,456,461],
[461,447,0,409,455,446,473,457],
[466,436,482,0,456,430,448,461],
[434,439,436,435,0,402,448,472],
[471,450,445,461,489,0,445,460],
[463,435,418,443,443,446,0,471],
[454,430,434,430,419,431,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,433,410,433,450,447,416],
[461,0,454,452,457,444,449,454],
[458,437,0,437,447,434,453,449],
[481,439,454,0,454,460,453,438],
[458,434,444,437,0,426,455,426],
[441,447,457,431,465,0,468,436],
[444,442,438,438,436,423,0,449],
[475,437,442,453,465,455,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,412,444,427,441,428,449],
[461,0,447,466,458,450,440,421],
[479,444,0,463,454,460,456,451],
[447,425,428,0,428,432,446,416],
[464,433,437,463,0,446,444,430],
[450,441,431,459,445,0,454,414],
[463,451,435,445,447,437,0,420],
[442,470,440,475,461,477,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,562,528,490,639,408,542,510],
[329,0,561,465,545,350,522,451],
[363,330,0,451,582,372,580,452],
[401,426,440,0,519,462,501,421],
[252,346,309,372,0,333,461,412],
[483,541,519,429,558,0,581,471],
[349,369,311,390,430,310,0,313],
[381,440,439,470,479,420,578,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,434,424,428,435,443,445],
[440,0,429,414,408,425,420,440],
[457,462,0,452,437,442,445,451],
[467,477,439,0,453,469,431,461],
[463,483,454,438,0,451,439,477],
[456,466,449,422,440,0,447,438],
[448,471,446,460,452,444,0,448],
[446,451,440,430,414,453,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,506,443,502,494,487,475,518],
[385,0,487,488,481,483,483,473],
[448,404,0,394,429,448,412,408],
[389,403,497,0,496,476,449,460],
[397,410,462,395,0,430,418,417],
[404,408,443,415,461,0,460,435],
[416,408,479,442,473,431,0,434],
[373,418,483,431,474,456,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,444,456,429,435,436,464],
[445,0,427,437,436,430,448,481],
[447,464,0,469,442,460,471,465],
[435,454,422,0,440,422,452,465],
[462,455,449,451,0,429,446,471],
[456,461,431,469,462,0,451,445],
[455,443,420,439,445,440,0,459],
[427,410,426,426,420,446,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,500,449,453,479,466,480],
[446,0,474,441,444,456,453,468],
[391,417,0,406,420,427,409,419],
[442,450,485,0,429,478,462,444],
[438,447,471,462,0,428,447,447],
[412,435,464,413,463,0,450,404],
[425,438,482,429,444,441,0,462],
[411,423,472,447,444,487,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,489,421,413,463,404,463],
[454,0,469,446,453,438,413,403],
[402,422,0,403,379,370,401,383],
[470,445,488,0,460,447,387,420],
[478,438,512,431,0,431,433,451],
[428,453,521,444,460,0,458,458],
[487,478,490,504,458,433,0,455],
[428,488,508,471,440,433,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,470,451,434,447,419,432],
[427,0,475,433,399,426,429,419],
[421,416,0,420,434,418,419,443],
[440,458,471,0,430,413,431,440],
[457,492,457,461,0,442,421,460],
[444,465,473,478,449,0,458,440],
[472,462,472,460,470,433,0,454],
[459,472,448,451,431,451,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,552,550,591,675,420,587,508],
[339,0,509,508,592,506,461,298],
[341,382,0,382,381,338,336,340],
[300,383,509,0,552,381,465,425],
[216,299,510,339,0,426,505,339],
[471,385,553,510,465,0,553,512],
[304,430,555,426,386,338,0,469],
[383,593,551,466,552,379,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,459,498,460,478,433,457],
[436,0,464,477,470,443,422,452],
[432,427,0,475,450,431,432,438],
[393,414,416,0,430,403,430,421],
[431,421,441,461,0,426,439,434],
[413,448,460,488,465,0,447,457],
[458,469,459,461,452,444,0,470],
[434,439,453,470,457,434,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,436,415,440,410,446,430],
[444,0,422,429,412,443,445,442],
[455,469,0,421,452,441,472,455],
[476,462,470,0,450,442,461,487],
[451,479,439,441,0,438,467,435],
[481,448,450,449,453,0,475,440],
[445,446,419,430,424,416,0,435],
[461,449,436,404,456,451,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,445,443,462,452,464,470],
[427,0,422,438,429,440,452,447],
[446,469,0,441,445,469,476,465],
[448,453,450,0,459,432,473,434],
[429,462,446,432,0,469,444,437],
[439,451,422,459,422,0,473,457],
[427,439,415,418,447,418,0,425],
[421,444,426,457,454,434,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,433,474,447,439,443,451],
[453,0,453,465,443,465,444,458],
[458,438,0,449,442,463,466,431],
[417,426,442,0,435,442,471,442],
[444,448,449,456,0,437,461,446],
[452,426,428,449,454,0,446,456],
[448,447,425,420,430,445,0,418],
[440,433,460,449,445,435,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,420,437,452,444,440,461],
[459,0,467,434,447,453,460,451],
[471,424,0,444,456,454,449,444],
[454,457,447,0,446,478,437,450],
[439,444,435,445,0,469,446,454],
[447,438,437,413,422,0,420,449],
[451,431,442,454,445,471,0,445],
[430,440,447,441,437,442,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,330,517,446,467,521,522,557],
[561,0,465,466,397,551,525,485],
[374,426,0,504,415,505,523,450],
[445,425,387,0,467,525,463,445],
[424,494,476,424,0,449,555,517],
[370,340,386,366,442,0,444,385],
[369,366,368,428,336,447,0,387],
[334,406,441,446,374,506,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,638,635,635,512,636,383,256],
[253,0,508,253,256,506,382,255],
[256,383,0,383,256,509,383,256],
[256,638,508,0,385,636,256,256],
[379,635,635,506,0,506,508,508],
[255,385,382,255,385,0,255,255],
[508,509,508,635,383,636,0,255],
[635,636,635,635,383,636,636,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,491,481,453,500,531,444],
[379,0,385,437,397,479,489,413],
[400,506,0,411,468,432,492,449],
[410,454,480,0,450,468,488,448],
[438,494,423,441,0,437,492,459],
[391,412,459,423,454,0,538,431],
[360,402,399,403,399,353,0,405],
[447,478,442,443,432,460,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,436,472,413,454,440,455],
[464,0,481,482,449,455,434,483],
[455,410,0,452,451,456,430,475],
[419,409,439,0,424,402,419,445],
[478,442,440,467,0,451,442,453],
[437,436,435,489,440,0,456,464],
[451,457,461,472,449,435,0,457],
[436,408,416,446,438,427,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,455,409,446,452,434,432],
[460,0,488,486,462,482,437,461],
[436,403,0,421,441,448,422,428],
[482,405,470,0,458,453,403,432],
[445,429,450,433,0,458,449,455],
[439,409,443,438,433,0,430,448],
[457,454,469,488,442,461,0,437],
[459,430,463,459,436,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,520,463,501,484,419,442],
[407,0,424,413,405,429,412,396],
[371,467,0,392,431,433,421,422],
[428,478,499,0,455,483,438,481],
[390,486,460,436,0,496,434,449],
[407,462,458,408,395,0,420,441],
[472,479,470,453,457,471,0,445],
[449,495,469,410,442,450,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,432,433,432,436,464,480],
[438,0,454,410,421,437,439,449],
[459,437,0,441,462,450,414,448],
[458,481,450,0,449,441,430,420],
[459,470,429,442,0,437,465,469],
[455,454,441,450,454,0,466,466],
[427,452,477,461,426,425,0,460],
[411,442,443,471,422,425,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,405,456,397,470,426,439],
[462,0,438,450,407,471,462,478],
[486,453,0,479,425,455,437,467],
[435,441,412,0,399,454,416,433],
[494,484,466,492,0,452,427,487],
[421,420,436,437,439,0,392,440],
[465,429,454,475,464,499,0,457],
[452,413,424,458,404,451,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,430,434,438,445,445,437],
[466,0,435,451,442,458,455,438],
[461,456,0,442,457,470,463,471],
[457,440,449,0,440,451,441,450],
[453,449,434,451,0,451,448,449],
[446,433,421,440,440,0,445,442],
[446,436,428,450,443,446,0,443],
[454,453,420,441,442,449,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,444,420,401,414,423,406],
[464,0,510,470,401,433,404,455],
[447,381,0,400,379,401,409,429],
[471,421,491,0,430,457,434,465],
[490,490,512,461,0,451,430,472],
[477,458,490,434,440,0,441,449],
[468,487,482,457,461,450,0,445],
[485,436,462,426,419,442,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,457,472,422,490,445,465],
[425,0,444,461,428,515,422,418],
[434,447,0,458,396,453,407,416],
[419,430,433,0,367,477,404,440],
[469,463,495,524,0,488,453,445],
[401,376,438,414,403,0,389,383],
[446,469,484,487,438,502,0,462],
[426,473,475,451,446,508,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,465,418,443,456,411,494],
[479,0,441,459,470,437,486,456],
[426,450,0,419,467,463,456,414],
[473,432,472,0,464,459,433,455],
[448,421,424,427,0,475,462,436],
[435,454,428,432,416,0,430,429],
[480,405,435,458,429,461,0,440],
[397,435,477,436,455,462,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,437,437,447,464,443,420],
[448,0,451,457,445,450,456,440],
[454,440,0,443,450,474,457,444],
[454,434,448,0,460,484,461,446],
[444,446,441,431,0,467,460,439],
[427,441,417,407,424,0,433,415],
[448,435,434,430,431,458,0,445],
[471,451,447,445,452,476,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,417,400,423,421,428,422],
[457,0,460,421,454,464,452,462],
[474,431,0,454,475,464,466,457],
[491,470,437,0,471,482,467,465],
[468,437,416,420,0,452,458,446],
[470,427,427,409,439,0,434,432],
[463,439,425,424,433,457,0,454],
[469,429,434,426,445,459,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,413,516,383,462,329,439],
[487,0,435,378,408,436,355,441],
[478,456,0,533,536,511,375,403],
[375,513,358,0,409,406,298,435],
[508,483,355,482,0,430,431,459],
[429,455,380,485,461,0,433,489],
[562,536,516,593,460,458,0,433],
[452,450,488,456,432,402,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,374,315,352,315,389,446,282],
[517,0,430,423,428,412,541,395],
[576,461,0,460,407,445,555,452],
[539,468,431,0,391,465,521,391],
[576,463,484,500,0,449,482,392],
[502,479,446,426,442,0,557,387],
[445,350,336,370,409,334,0,318],
[609,496,439,500,499,504,573,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,432,428,409,420,448,427],
[441,0,450,452,441,427,474,455],
[459,441,0,440,423,434,457,446],
[463,439,451,0,442,451,469,433],
[482,450,468,449,0,439,483,465],
[471,464,457,440,452,0,477,454],
[443,417,434,422,408,414,0,426],
[464,436,445,458,426,437,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,437,449,449,475,455,465],
[425,0,416,442,423,455,435,447],
[454,475,0,467,436,486,452,476],
[442,449,424,0,438,481,443,459],
[442,468,455,453,0,488,484,471],
[416,436,405,410,403,0,427,453],
[436,456,439,448,407,464,0,444],
[426,444,415,432,420,438,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,461,426,482,451,498,479],
[426,0,408,397,464,427,438,446],
[430,483,0,456,512,480,478,512],
[465,494,435,0,493,473,525,465],
[409,427,379,398,0,389,465,495],
[440,464,411,418,502,0,473,474],
[393,453,413,366,426,418,0,440],
[412,445,379,426,396,417,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,463,434,431,489,500,494],
[456,0,463,472,443,454,467,491],
[428,428,0,445,431,464,471,495],
[457,419,446,0,472,446,460,471],
[460,448,460,419,0,459,473,475],
[402,437,427,445,432,0,444,461],
[391,424,420,431,418,447,0,475],
[397,400,396,420,416,430,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,433,452,425,426,468,453],
[460,0,429,447,456,436,500,471],
[458,462,0,452,431,467,466,451],
[439,444,439,0,409,456,433,427],
[466,435,460,482,0,462,478,420],
[465,455,424,435,429,0,480,431],
[423,391,425,458,413,411,0,431],
[438,420,440,464,471,460,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,415,311,415,548,344,618],
[406,0,310,241,339,480,341,512],
[476,581,0,377,410,615,513,515],
[580,650,514,0,582,546,442,547],
[476,552,481,309,0,617,410,550],
[343,411,276,345,274,0,240,344],
[547,550,378,449,481,651,0,514],
[273,379,376,344,341,547,377,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,418,476,504,443,498,497],
[447,0,420,408,447,419,481,516],
[473,471,0,474,438,487,490,514],
[415,483,417,0,481,503,516,533],
[387,444,453,410,0,455,480,562],
[448,472,404,388,436,0,512,485],
[393,410,401,375,411,379,0,483],
[394,375,377,358,329,406,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,458,431,447,421,446,452],
[443,0,453,462,445,447,440,448],
[433,438,0,443,447,434,449,453],
[460,429,448,0,443,435,442,439],
[444,446,444,448,0,452,440,453],
[470,444,457,456,439,0,446,446],
[445,451,442,449,451,445,0,450],
[439,443,438,452,438,445,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,492,487,433,446,437,446],
[418,0,431,453,410,425,451,418],
[399,460,0,452,445,413,442,410],
[404,438,439,0,438,400,439,423],
[458,481,446,453,0,416,471,446],
[445,466,478,491,475,0,467,451],
[454,440,449,452,420,424,0,405],
[445,473,481,468,445,440,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,431,448,446,426,447,445],
[467,0,429,466,471,440,467,440],
[460,462,0,460,462,440,456,456],
[443,425,431,0,439,426,442,429],
[445,420,429,452,0,424,463,444],
[465,451,451,465,467,0,444,481],
[444,424,435,449,428,447,0,443],
[446,451,435,462,447,410,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,478,464,477,480,441,461],
[422,0,451,426,452,488,455,433],
[413,440,0,438,451,457,431,420],
[427,465,453,0,463,470,432,416],
[414,439,440,428,0,465,446,428],
[411,403,434,421,426,0,400,408],
[450,436,460,459,445,491,0,449],
[430,458,471,475,463,483,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,439,446,440,469,473,406],
[408,0,461,452,432,451,417,419],
[452,430,0,456,438,481,435,449],
[445,439,435,0,405,442,436,413],
[451,459,453,486,0,475,429,410],
[422,440,410,449,416,0,438,420],
[418,474,456,455,462,453,0,454],
[485,472,442,478,481,471,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,408,430,405,447,480,483],
[394,0,441,501,445,404,511,525],
[483,450,0,504,478,429,450,487],
[461,390,387,0,468,441,429,469],
[486,446,413,423,0,449,484,520],
[444,487,462,450,442,0,491,490],
[411,380,441,462,407,400,0,483],
[408,366,404,422,371,401,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,368,474,451,459,432,467,442],
[523,0,441,415,478,474,471,529],
[417,450,0,380,525,367,408,422],
[440,476,511,0,511,384,488,470],
[432,413,366,380,0,338,394,467],
[459,417,524,507,553,0,480,439],
[424,420,483,403,497,411,0,445],
[449,362,469,421,424,452,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,425,392,453,443,433,378],
[490,0,435,454,483,505,488,448],
[466,456,0,417,492,456,467,418],
[499,437,474,0,479,517,447,401],
[438,408,399,412,0,417,406,397],
[448,386,435,374,474,0,432,412],
[458,403,424,444,485,459,0,438],
[513,443,473,490,494,479,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,445,455,472,460,456,478],
[435,0,440,443,454,437,442,443],
[446,451,0,445,457,439,440,449],
[436,448,446,0,440,443,420,450],
[419,437,434,451,0,432,432,450],
[431,454,452,448,459,0,440,445],
[435,449,451,471,459,451,0,460],
[413,448,442,441,441,446,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,456,474,432,485,452,426],
[447,0,457,446,436,464,441,429],
[435,434,0,438,444,482,425,429],
[417,445,453,0,431,478,444,418],
[459,455,447,460,0,500,439,462],
[406,427,409,413,391,0,421,404],
[439,450,466,447,452,470,0,430],
[465,462,462,473,429,487,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,428,434,437,440,437,437],
[420,0,417,420,417,423,408,410],
[463,474,0,439,431,451,446,449],
[457,471,452,0,466,434,450,461],
[454,474,460,425,0,431,441,440],
[451,468,440,457,460,0,438,459],
[454,483,445,441,450,453,0,427],
[454,481,442,430,451,432,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,470,467,430,465,454,468],
[424,0,445,444,426,426,442,419],
[421,446,0,437,428,457,446,411],
[424,447,454,0,418,411,446,446],
[461,465,463,473,0,447,446,440],
[426,465,434,480,444,0,465,447],
[437,449,445,445,445,426,0,430],
[423,472,480,445,451,444,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,374,423,469,468,519,425,421],
[517,0,425,565,519,472,473,609],
[468,466,0,423,515,515,468,560],
[422,326,468,0,466,470,328,421],
[423,372,376,425,0,470,237,328],
[372,419,376,421,421,0,330,418],
[466,418,423,563,654,561,0,513],
[470,282,331,470,563,473,378,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,480,438,464,458,454,497],
[432,0,451,450,480,458,455,483],
[411,440,0,509,431,449,459,482],
[453,441,382,0,439,422,395,453],
[427,411,460,452,0,455,420,476],
[433,433,442,469,436,0,465,477],
[437,436,432,496,471,426,0,431],
[394,408,409,438,415,414,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,484,474,507,405,497,448],
[478,0,445,466,538,468,515,505],
[407,446,0,473,469,416,559,406],
[417,425,418,0,464,373,467,442],
[384,353,422,427,0,382,431,461],
[486,423,475,518,509,0,509,492],
[394,376,332,424,460,382,0,405],
[443,386,485,449,430,399,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,453,439,450,455,468,459],
[419,0,448,421,463,439,424,422],
[438,443,0,455,458,424,447,397],
[452,470,436,0,480,425,451,422],
[441,428,433,411,0,439,414,409],
[436,452,467,466,452,0,450,437],
[423,467,444,440,477,441,0,433],
[432,469,494,469,482,454,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,426,437,455,462,413,449],
[442,0,433,371,436,439,444,395],
[465,458,0,435,453,457,451,410],
[454,520,456,0,477,497,429,468],
[436,455,438,414,0,441,441,418],
[429,452,434,394,450,0,424,434],
[478,447,440,462,450,467,0,437],
[442,496,481,423,473,457,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,444,450,393,398,381,440],
[463,0,473,479,431,441,401,473],
[447,418,0,428,414,420,394,462],
[441,412,463,0,404,402,403,438],
[498,460,477,487,0,440,449,471],
[493,450,471,489,451,0,400,462],
[510,490,497,488,442,491,0,504],
[451,418,429,453,420,429,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,428,428,434,455,440,471],
[471,0,456,479,450,423,456,452],
[463,435,0,475,469,467,430,436],
[463,412,416,0,447,429,420,418],
[457,441,422,444,0,394,447,466],
[436,468,424,462,497,0,451,481],
[451,435,461,471,444,440,0,430],
[420,439,455,473,425,410,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,491,472,439,433,421,426],
[417,0,484,467,453,450,472,443],
[400,407,0,443,421,409,410,404],
[419,424,448,0,413,460,431,419],
[452,438,470,478,0,466,453,444],
[458,441,482,431,425,0,444,458],
[470,419,481,460,438,447,0,461],
[465,448,487,472,447,433,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,451,427,475,467,450,446],
[449,0,473,425,513,433,449,449],
[440,418,0,451,471,448,406,417],
[464,466,440,0,470,460,473,467],
[416,378,420,421,0,426,382,485],
[424,458,443,431,465,0,446,458],
[441,442,485,418,509,445,0,458],
[445,442,474,424,406,433,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,457,434,460,437,450,456],
[441,0,455,447,434,472,455,464],
[434,436,0,464,444,465,464,465],
[457,444,427,0,456,425,466,466],
[431,457,447,435,0,418,442,438],
[454,419,426,466,473,0,439,469],
[441,436,427,425,449,452,0,444],
[435,427,426,425,453,422,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,465,488,469,463,470,465],
[462,0,466,453,453,442,447,479],
[426,425,0,447,468,423,434,446],
[403,438,444,0,444,434,465,425],
[422,438,423,447,0,422,424,452],
[428,449,468,457,469,0,446,468],
[421,444,457,426,467,445,0,441],
[426,412,445,466,439,423,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,418,456,480,468,466,454],
[418,0,398,460,478,460,442,431],
[473,493,0,442,532,475,489,487],
[435,431,449,0,468,464,446,440],
[411,413,359,423,0,397,435,439],
[423,431,416,427,494,0,482,430],
[425,449,402,445,456,409,0,484],
[437,460,404,451,452,461,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,466,475,483,444,443,513],
[468,0,482,495,443,507,448,493],
[425,409,0,471,464,435,428,470],
[416,396,420,0,453,419,408,479],
[408,448,427,438,0,437,392,465],
[447,384,456,472,454,0,424,483],
[448,443,463,483,499,467,0,496],
[378,398,421,412,426,408,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,454,448,449,390,445,420],
[481,0,464,446,439,463,477,444],
[437,427,0,398,416,408,459,466],
[443,445,493,0,444,456,497,442],
[442,452,475,447,0,434,488,436],
[501,428,483,435,457,0,451,478],
[446,414,432,394,403,440,0,419],
[471,447,425,449,455,413,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,362,518,488,404,506,364,434],
[529,0,479,542,509,488,433,431],
[373,412,0,462,359,423,360,374],
[403,349,429,0,403,471,415,433],
[487,382,532,488,0,452,453,466],
[385,403,468,420,439,0,384,381],
[527,458,531,476,438,507,0,416],
[457,460,517,458,425,510,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,449,452,422,459,461,475],
[442,0,434,449,446,454,441,483],
[442,457,0,448,474,471,424,463],
[439,442,443,0,465,484,449,482],
[469,445,417,426,0,457,433,476],
[432,437,420,407,434,0,399,460],
[430,450,467,442,458,492,0,488],
[416,408,428,409,415,431,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,434,429,448,459,479,451],
[477,0,458,445,454,456,461,487],
[457,433,0,411,420,448,453,486],
[462,446,480,0,446,456,443,466],
[443,437,471,445,0,429,471,476],
[432,435,443,435,462,0,491,477],
[412,430,438,448,420,400,0,449],
[440,404,405,425,415,414,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,450,443,460,431,417,481],
[474,0,442,477,503,457,478,458],
[441,449,0,431,419,410,488,439],
[448,414,460,0,472,429,437,462],
[431,388,472,419,0,430,435,462],
[460,434,481,462,461,0,462,511],
[474,413,403,454,456,429,0,456],
[410,433,452,429,429,380,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,440,387,458,501,420,486],
[498,0,445,448,529,546,487,539],
[451,446,0,365,468,499,396,459],
[504,443,526,0,427,528,439,479],
[433,362,423,464,0,512,428,501],
[390,345,392,363,379,0,376,431],
[471,404,495,452,463,515,0,447],
[405,352,432,412,390,460,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,459,466,441,445,463,477],
[421,0,427,426,423,437,454,433],
[432,464,0,458,448,451,448,465],
[425,465,433,0,447,445,443,477],
[450,468,443,444,0,445,444,463],
[446,454,440,446,446,0,437,440],
[428,437,443,448,447,454,0,451],
[414,458,426,414,428,451,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,444,442,437,450,448,469],
[445,0,462,427,425,456,443,443],
[447,429,0,436,420,432,454,439],
[449,464,455,0,453,445,462,467],
[454,466,471,438,0,475,470,472],
[441,435,459,446,416,0,451,444],
[443,448,437,429,421,440,0,434],
[422,448,452,424,419,447,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,420,443,425,428,435,420],
[468,0,452,463,442,428,453,444],
[471,439,0,426,449,429,443,436],
[448,428,465,0,455,442,441,428],
[466,449,442,436,0,464,450,434],
[463,463,462,449,427,0,455,456],
[456,438,448,450,441,436,0,455],
[471,447,455,463,457,435,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,426,437,441,442,448,444],
[452,0,443,441,444,428,460,438],
[465,448,0,452,457,440,458,465],
[454,450,439,0,455,438,456,421],
[450,447,434,436,0,461,454,437],
[449,463,451,453,430,0,455,445],
[443,431,433,435,437,436,0,418],
[447,453,426,470,454,446,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,423,449,425,433,434,437],
[448,0,432,441,448,448,439,468],
[468,459,0,477,445,473,454,469],
[442,450,414,0,436,445,427,449],
[466,443,446,455,0,453,458,458],
[458,443,418,446,438,0,430,438],
[457,452,437,464,433,461,0,454],
[454,423,422,442,433,453,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,411,431,449,440,454,432],
[441,0,409,444,462,411,443,395],
[480,482,0,441,469,460,483,454],
[460,447,450,0,471,463,490,443],
[442,429,422,420,0,413,423,424],
[451,480,431,428,478,0,446,428],
[437,448,408,401,468,445,0,435],
[459,496,437,448,467,463,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,435,472,453,450,445,460],
[422,0,430,422,447,434,444,433],
[456,461,0,438,463,448,437,451],
[419,469,453,0,451,442,460,431],
[438,444,428,440,0,434,436,427],
[441,457,443,449,457,0,434,454],
[446,447,454,431,455,457,0,450],
[431,458,440,460,464,437,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,425,442,464,453,432,455],
[477,0,450,469,505,453,428,464],
[466,441,0,463,472,482,474,479],
[449,422,428,0,465,436,453,474],
[427,386,419,426,0,424,424,447],
[438,438,409,455,467,0,428,461],
[459,463,417,438,467,463,0,476],
[436,427,412,417,444,430,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,423,463,440,453,463,446],
[452,0,413,451,457,453,464,441],
[468,478,0,460,463,446,465,436],
[428,440,431,0,440,436,454,436],
[451,434,428,451,0,467,461,456],
[438,438,445,455,424,0,470,450],
[428,427,426,437,430,421,0,442],
[445,450,455,455,435,441,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,449,450,434,446,447,446],
[432,0,419,405,429,429,433,426],
[442,472,0,442,443,452,455,440],
[441,486,449,0,438,438,442,428],
[457,462,448,453,0,443,463,438],
[445,462,439,453,448,0,440,436],
[444,458,436,449,428,451,0,424],
[445,465,451,463,453,455,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,453,455,452,450,422,461],
[432,0,449,459,450,448,440,443],
[438,442,0,450,434,430,464,461],
[436,432,441,0,439,430,436,430],
[439,441,457,452,0,433,456,443],
[441,443,461,461,458,0,436,448],
[469,451,427,455,435,455,0,437],
[430,448,430,461,448,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,441,433,422,437,433,427],
[450,0,459,430,449,451,441,467],
[450,432,0,430,445,453,456,435],
[458,461,461,0,430,433,448,444],
[469,442,446,461,0,428,433,466],
[454,440,438,458,463,0,441,456],
[458,450,435,443,458,450,0,453],
[464,424,456,447,425,435,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,478,469,549,443,457,469],
[416,0,458,440,479,412,426,440],
[413,433,0,418,478,428,437,385],
[422,451,473,0,488,467,433,406],
[342,412,413,403,0,409,441,411],
[448,479,463,424,482,0,430,468],
[434,465,454,458,450,461,0,502],
[422,451,506,485,480,423,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,435,416,421,435,449,433],
[468,0,455,449,427,438,431,459],
[456,436,0,435,422,425,443,442],
[475,442,456,0,452,452,453,449],
[470,464,469,439,0,449,474,462],
[456,453,466,439,442,0,453,451],
[442,460,448,438,417,438,0,437],
[458,432,449,442,429,440,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,450,410,421,460,461],
[441,0,439,444,459,432,434,427],
[450,452,0,426,431,448,461,449],
[441,447,465,0,442,445,449,437],
[481,432,460,449,0,417,462,442],
[470,459,443,446,474,0,481,434],
[431,457,430,442,429,410,0,411],
[430,464,442,454,449,457,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,403,461,511,496,528,496],
[444,0,481,391,494,492,412,413],
[488,410,0,406,421,491,427,456],
[430,500,485,0,525,532,450,430],
[380,397,470,366,0,500,400,430],
[395,399,400,359,391,0,384,379],
[363,479,464,441,491,507,0,445],
[395,478,435,461,461,512,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,520,480,521,499,540,477,439],
[371,0,439,440,415,461,438,333],
[411,452,0,538,413,501,416,455],
[370,451,353,0,415,499,353,393],
[392,476,478,476,0,459,415,394],
[351,430,390,392,432,0,392,208],
[414,453,475,538,476,499,0,373],
[452,558,436,498,497,683,518,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,446,464,456,478,454,429],
[427,0,458,492,453,474,460,418],
[445,433,0,432,412,463,421,425],
[427,399,459,0,424,438,429,411],
[435,438,479,467,0,466,424,461],
[413,417,428,453,425,0,401,419],
[437,431,470,462,467,490,0,418],
[462,473,466,480,430,472,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,427,427,427,418,434,414],
[458,0,474,462,452,433,470,436],
[464,417,0,441,454,426,474,420],
[464,429,450,0,432,425,459,418],
[464,439,437,459,0,433,463,449],
[473,458,465,466,458,0,477,429],
[457,421,417,432,428,414,0,396],
[477,455,471,473,442,462,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,448,488,444,484,444,456],
[454,0,440,484,462,452,462,472],
[443,451,0,486,449,472,474,484],
[403,407,405,0,435,463,470,428],
[447,429,442,456,0,453,475,461],
[407,439,419,428,438,0,453,462],
[447,429,417,421,416,438,0,440],
[435,419,407,463,430,429,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,435,427,432,452,434,450],
[470,0,452,448,417,453,476,464],
[456,439,0,452,446,443,461,463],
[464,443,439,0,421,442,458,483],
[459,474,445,470,0,466,471,457],
[439,438,448,449,425,0,468,461],
[457,415,430,433,420,423,0,437],
[441,427,428,408,434,430,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,440,452,465,431,453,431],
[454,0,449,455,449,450,465,433],
[451,442,0,442,449,433,437,454],
[439,436,449,0,456,432,426,440],
[426,442,442,435,0,429,431,418],
[460,441,458,459,462,0,446,446],
[438,426,454,465,460,445,0,445],
[460,458,437,451,473,445,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,463,408,374,372,428,397],
[495,0,434,428,425,445,415,498],
[428,457,0,458,500,472,461,496],
[483,463,433,0,482,494,479,535],
[517,466,391,409,0,433,403,447],
[519,446,419,397,458,0,465,447],
[463,476,430,412,488,426,0,497],
[494,393,395,356,444,444,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,424,432,451,408,396,417],
[425,0,444,386,430,409,431,408],
[467,447,0,414,426,433,407,425],
[459,505,477,0,494,446,419,460],
[440,461,465,397,0,414,431,458],
[483,482,458,445,477,0,454,449],
[495,460,484,472,460,437,0,438],
[474,483,466,431,433,442,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,436,445,406,536,488,457],
[432,0,426,431,432,461,439,417],
[455,465,0,437,455,492,446,427],
[446,460,454,0,443,523,441,445],
[485,459,436,448,0,556,446,473],
[355,430,399,368,335,0,390,372],
[403,452,445,450,445,501,0,432],
[434,474,464,446,418,519,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,466,409,414,459,427,429],
[441,0,484,437,462,484,430,455],
[425,407,0,449,419,469,422,415],
[482,454,442,0,407,489,443,452],
[477,429,472,484,0,499,485,485],
[432,407,422,402,392,0,438,435],
[464,461,469,448,406,453,0,444],
[462,436,476,439,406,456,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,432,443,449,474,443,454],
[434,0,442,463,460,480,472,458],
[459,449,0,444,466,459,442,459],
[448,428,447,0,447,461,446,448],
[442,431,425,444,0,468,432,433],
[417,411,432,430,423,0,423,427],
[448,419,449,445,459,468,0,449],
[437,433,432,443,458,464,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,449,445,453,456,431,438],
[464,0,463,440,463,448,444,450],
[442,428,0,453,454,449,451,430],
[446,451,438,0,462,463,447,447],
[438,428,437,429,0,442,456,451],
[435,443,442,428,449,0,437,433],
[460,447,440,444,435,454,0,434],
[453,441,461,444,440,458,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,447,418,414,445,442,429],
[462,0,470,449,442,451,466,463],
[444,421,0,401,423,423,430,447],
[473,442,490,0,460,457,466,473],
[477,449,468,431,0,463,458,458],
[446,440,468,434,428,0,446,467],
[449,425,461,425,433,445,0,451],
[462,428,444,418,433,424,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,441,448,463,444,449,441],
[430,0,440,433,461,453,424,426],
[450,451,0,435,447,446,436,462],
[443,458,456,0,461,461,455,447],
[428,430,444,430,0,433,425,424],
[447,438,445,430,458,0,447,421],
[442,467,455,436,466,444,0,437],
[450,465,429,444,467,470,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,406,436,436,438,450,442],
[480,0,462,446,445,449,476,445],
[485,429,0,430,437,449,467,442],
[455,445,461,0,443,444,467,450],
[455,446,454,448,0,451,458,438],
[453,442,442,447,440,0,451,441],
[441,415,424,424,433,440,0,408],
[449,446,449,441,453,450,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,472,435,530,509,456,525],
[418,0,484,451,470,490,533,492],
[419,407,0,338,454,444,434,445],
[456,440,553,0,601,530,514,534],
[361,421,437,290,0,437,445,405],
[382,401,447,361,454,0,490,458],
[435,358,457,377,446,401,0,429],
[366,399,446,357,486,433,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,446,444,449,456,466,443],
[438,0,443,443,453,435,447,427],
[445,448,0,453,460,469,432,435],
[447,448,438,0,455,468,464,447],
[442,438,431,436,0,453,442,438],
[435,456,422,423,438,0,439,445],
[425,444,459,427,449,452,0,440],
[448,464,456,444,453,446,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,379,314,421,398,359,319],
[486,0,443,462,399,443,381,442],
[512,448,0,419,424,467,315,469],
[577,429,472,0,399,552,445,554],
[470,492,467,492,0,488,425,490],
[493,448,424,339,403,0,363,448],
[532,510,576,446,466,528,0,404],
[572,449,422,337,401,443,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,418,415,436,440,417,439],
[482,0,453,461,445,441,451,464],
[473,438,0,446,442,467,409,465],
[476,430,445,0,446,476,422,466],
[455,446,449,445,0,457,424,474],
[451,450,424,415,434,0,423,466],
[474,440,482,469,467,468,0,486],
[452,427,426,425,417,425,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,436,456,464,452,439,424],
[450,0,444,443,444,466,460,455],
[455,447,0,457,435,466,464,427],
[435,448,434,0,446,451,448,419],
[427,447,456,445,0,440,459,442],
[439,425,425,440,451,0,408,446],
[452,431,427,443,432,483,0,424],
[467,436,464,472,449,445,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,450,449,475,482,467,457],
[455,0,433,459,447,478,457,469],
[441,458,0,454,463,478,458,454],
[442,432,437,0,442,464,439,457],
[416,444,428,449,0,469,431,449],
[409,413,413,427,422,0,412,447],
[424,434,433,452,460,479,0,444],
[434,422,437,434,442,444,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,470,481,438,446,471,423],
[457,0,472,539,430,459,501,474],
[421,419,0,483,402,433,482,448],
[410,352,408,0,396,391,388,393],
[453,461,489,495,0,447,433,457],
[445,432,458,500,444,0,444,424],
[420,390,409,503,458,447,0,418],
[468,417,443,498,434,467,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,452,464,449,464,472,429],
[458,0,448,464,421,428,481,402],
[439,443,0,463,442,453,489,448],
[427,427,428,0,412,447,452,409],
[442,470,449,479,0,480,494,415],
[427,463,438,444,411,0,494,406],
[419,410,402,439,397,397,0,376],
[462,489,443,482,476,485,515,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,451,433,440,456,451,447],
[434,0,445,402,428,451,451,438],
[440,446,0,474,414,441,460,473],
[458,489,417,0,416,491,452,447],
[451,463,477,475,0,457,484,442],
[435,440,450,400,434,0,463,434],
[440,440,431,439,407,428,0,452],
[444,453,418,444,449,457,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,494,488,480,464,489,476],
[462,0,502,481,480,444,501,450],
[397,389,0,435,453,440,444,428],
[403,410,456,0,460,450,463,405],
[411,411,438,431,0,427,453,407],
[427,447,451,441,464,0,480,411],
[402,390,447,428,438,411,0,408],
[415,441,463,486,484,480,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,462,468,464,457,451,437],
[415,0,442,434,448,444,416,422],
[429,449,0,453,468,443,422,430],
[423,457,438,0,455,450,435,432],
[427,443,423,436,0,404,411,411],
[434,447,448,441,487,0,451,446],
[440,475,469,456,480,440,0,444],
[454,469,461,459,480,445,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,447,452,423,416,452,493],
[480,0,388,479,464,423,495,433],
[444,503,0,480,453,455,512,482],
[439,412,411,0,432,444,520,418],
[468,427,438,459,0,460,529,501],
[475,468,436,447,431,0,506,458],
[439,396,379,371,362,385,0,442],
[398,458,409,473,390,433,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,469,460,505,424,430,481],
[445,0,510,455,530,421,468,523],
[422,381,0,417,491,404,418,468],
[431,436,474,0,503,447,446,480],
[386,361,400,388,0,365,374,391],
[467,470,487,444,526,0,454,486],
[461,423,473,445,517,437,0,503],
[410,368,423,411,500,405,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,466,550,401,447,481,413],
[430,0,407,516,464,435,404,446],
[425,484,0,457,452,423,436,451],
[341,375,434,0,465,361,364,437],
[490,427,439,426,0,471,441,427],
[444,456,468,530,420,0,403,447],
[410,487,455,527,450,488,0,433],
[478,445,440,454,464,444,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,458,416,444,447,429,440],
[450,0,466,449,466,465,447,435],
[433,425,0,440,477,455,432,433],
[475,442,451,0,469,471,461,457],
[447,425,414,422,0,448,430,445],
[444,426,436,420,443,0,455,443],
[462,444,459,430,461,436,0,428],
[451,456,458,434,446,448,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,459,458,450,477,429,483],
[437,0,433,452,448,443,423,460],
[432,458,0,433,420,466,444,462],
[433,439,458,0,465,457,438,465],
[441,443,471,426,0,440,464,456],
[414,448,425,434,451,0,419,452],
[462,468,447,453,427,472,0,459],
[408,431,429,426,435,439,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,427,441,411,445,456,443],
[453,0,439,420,428,436,442,454],
[464,452,0,430,451,428,477,482],
[450,471,461,0,439,431,458,455],
[480,463,440,452,0,447,484,498],
[446,455,463,460,444,0,462,471],
[435,449,414,433,407,429,0,412],
[448,437,409,436,393,420,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,471,451,427,448,458,409],
[433,0,481,419,461,417,443,448],
[420,410,0,378,400,416,402,427],
[440,472,513,0,478,461,451,453],
[464,430,491,413,0,452,436,428],
[443,474,475,430,439,0,430,436],
[433,448,489,440,455,461,0,428],
[482,443,464,438,463,455,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,473,401,437,447,423,425],
[430,0,449,420,439,417,424,410],
[418,442,0,429,427,428,431,400],
[490,471,462,0,420,455,458,432],
[454,452,464,471,0,432,421,441],
[444,474,463,436,459,0,429,432],
[468,467,460,433,470,462,0,448],
[466,481,491,459,450,459,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,455,456,462,438,459,468],
[450,0,461,440,476,465,456,451],
[436,430,0,473,417,454,452,448],
[435,451,418,0,474,450,452,472],
[429,415,474,417,0,429,448,479],
[453,426,437,441,462,0,433,452],
[432,435,439,439,443,458,0,478],
[423,440,443,419,412,439,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,455,453,478,452,458,451],
[452,0,480,477,464,475,478,436],
[436,411,0,447,456,448,452,449],
[438,414,444,0,445,441,437,445],
[413,427,435,446,0,427,445,453],
[439,416,443,450,464,0,460,454],
[433,413,439,454,446,431,0,451],
[440,455,442,446,438,437,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,480,395,411,476,463,466],
[500,0,443,480,490,475,480,478],
[411,448,0,431,433,456,514,489],
[496,411,460,0,428,472,511,490],
[480,401,458,463,0,473,488,456],
[415,416,435,419,418,0,469,436],
[428,411,377,380,403,422,0,410],
[425,413,402,401,435,455,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,434,418,442,448,474,448],
[437,0,417,412,403,406,413,422],
[457,474,0,431,403,466,423,455],
[473,479,460,0,466,471,483,442],
[449,488,488,425,0,428,436,429],
[443,485,425,420,463,0,453,427],
[417,478,468,408,455,438,0,435],
[443,469,436,449,462,464,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,447,445,445,444,441,451],
[459,0,440,466,458,456,433,447],
[444,451,0,450,443,465,447,464],
[446,425,441,0,444,454,438,429],
[446,433,448,447,0,458,456,465],
[447,435,426,437,433,0,428,442],
[450,458,444,453,435,463,0,474],
[440,444,427,462,426,449,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,475,517,515,475,412,431],
[436,0,459,478,380,299,415,416],
[416,432,0,519,536,359,435,410],
[374,413,372,0,377,277,398,433],
[376,511,355,514,0,331,412,310],
[416,592,532,614,560,0,457,430],
[479,476,456,493,479,434,0,456],
[460,475,481,458,581,461,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,418,446,427,420,414,435],
[456,0,434,442,437,421,424,442],
[473,457,0,471,447,425,448,464],
[445,449,420,0,424,410,421,433],
[464,454,444,467,0,444,449,466],
[471,470,466,481,447,0,445,464],
[477,467,443,470,442,446,0,452],
[456,449,427,458,425,427,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,506,477,448,463,441,485],
[409,0,429,440,404,455,446,435],
[385,462,0,447,440,467,459,441],
[414,451,444,0,392,436,450,435],
[443,487,451,499,0,500,462,504],
[428,436,424,455,391,0,456,450],
[450,445,432,441,429,435,0,453],
[406,456,450,456,387,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,448,410,441,437,425,450],
[443,0,428,408,450,451,413,407],
[443,463,0,453,467,459,446,421],
[481,483,438,0,468,465,488,447],
[450,441,424,423,0,445,464,419],
[454,440,432,426,446,0,432,435],
[466,478,445,403,427,459,0,403],
[441,484,470,444,472,456,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,431,424,416,466,463,427],
[471,0,436,450,428,481,449,458],
[460,455,0,478,440,484,456,464],
[467,441,413,0,453,468,469,445],
[475,463,451,438,0,475,477,465],
[425,410,407,423,416,0,425,409],
[428,442,435,422,414,466,0,414],
[464,433,427,446,426,482,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,375,436,411,463,374,408],
[449,0,431,448,507,480,417,453],
[516,460,0,432,493,521,448,451],
[455,443,459,0,447,451,440,444],
[480,384,398,444,0,445,452,445],
[428,411,370,440,446,0,424,411],
[517,474,443,451,439,467,0,435],
[483,438,440,447,446,480,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,443,410,422,441,381,442],
[435,0,425,418,436,410,415,411],
[448,466,0,424,453,432,411,447],
[481,473,467,0,440,437,436,454],
[469,455,438,451,0,454,448,427],
[450,481,459,454,437,0,432,435],
[510,476,480,455,443,459,0,460],
[449,480,444,437,464,456,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,414,417,399,436,437,391],
[504,0,456,450,429,474,456,451],
[477,435,0,444,438,456,474,435],
[474,441,447,0,446,462,469,447],
[492,462,453,445,0,486,472,435],
[455,417,435,429,405,0,461,428],
[454,435,417,422,419,430,0,418],
[500,440,456,444,456,463,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,464,428,472,508,447,448],
[434,0,505,459,452,484,461,427],
[427,386,0,424,378,431,430,403],
[463,432,467,0,438,498,418,432],
[419,439,513,453,0,501,445,400],
[383,407,460,393,390,0,378,384],
[444,430,461,473,446,513,0,432],
[443,464,488,459,491,507,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,442,410,392,342,406,424],
[492,0,404,398,450,383,406,405],
[449,487,0,433,419,375,410,404],
[481,493,458,0,453,437,405,432],
[499,441,472,438,0,411,446,475],
[549,508,516,454,480,0,419,454],
[485,485,481,486,445,472,0,496],
[467,486,487,459,416,437,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,449,460,421,425,450,438],
[459,0,463,445,447,446,471,445],
[442,428,0,437,416,424,447,439],
[431,446,454,0,426,426,443,461],
[470,444,475,465,0,440,481,460],
[466,445,467,465,451,0,473,441],
[441,420,444,448,410,418,0,451],
[453,446,452,430,431,450,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,394,434,434,437,412,437],
[476,0,424,447,447,456,412,465],
[497,467,0,465,471,455,430,427],
[457,444,426,0,438,454,406,469],
[457,444,420,453,0,449,442,447],
[454,435,436,437,442,0,417,433],
[479,479,461,485,449,474,0,444],
[454,426,464,422,444,458,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,483,451,467,451,465,442],
[403,0,435,466,444,424,398,384],
[408,456,0,451,476,434,485,405],
[440,425,440,0,457,431,446,378],
[424,447,415,434,0,417,436,410],
[440,467,457,460,474,0,442,448],
[426,493,406,445,455,449,0,437],
[449,507,486,513,481,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,446,465,454,455,435,475],
[472,0,445,474,433,467,458,463],
[445,446,0,481,441,470,453,474],
[426,417,410,0,431,448,440,438],
[437,458,450,460,0,450,464,484],
[436,424,421,443,441,0,443,470],
[456,433,438,451,427,448,0,466],
[416,428,417,453,407,421,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,445,450,422,416,438,439],
[443,0,425,445,425,433,424,426],
[446,466,0,440,432,429,424,433],
[441,446,451,0,422,443,436,435],
[469,466,459,469,0,486,476,444],
[475,458,462,448,405,0,437,450],
[453,467,467,455,415,454,0,456],
[452,465,458,456,447,441,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,442,441,430,446,419,420],
[462,0,476,457,458,440,437,465],
[449,415,0,450,399,425,403,435],
[450,434,441,0,462,429,416,456],
[461,433,492,429,0,442,443,456],
[445,451,466,462,449,0,439,422],
[472,454,488,475,448,452,0,443],
[471,426,456,435,435,469,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,383,350,387,414,399,455,358],
[508,0,459,456,440,479,410,445],
[541,432,0,432,436,429,481,419],
[504,435,459,0,442,456,450,446],
[477,451,455,449,0,447,455,419],
[492,412,462,435,444,0,455,435],
[436,481,410,441,436,436,0,402],
[533,446,472,445,472,456,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,400,393,450,430,489,419],
[459,0,445,433,481,470,499,446],
[491,446,0,438,457,412,469,413],
[498,458,453,0,437,468,486,464],
[441,410,434,454,0,448,463,428],
[461,421,479,423,443,0,473,412],
[402,392,422,405,428,418,0,379],
[472,445,478,427,463,479,512,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,428,488,407,418,418,441],
[468,0,447,455,415,438,448,408],
[463,444,0,501,451,485,487,466],
[403,436,390,0,386,441,414,410],
[484,476,440,505,0,480,444,444],
[473,453,406,450,411,0,446,415],
[473,443,404,477,447,445,0,426],
[450,483,425,481,447,476,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,455,451,446,484,444,444],
[422,0,443,442,434,445,425,440],
[436,448,0,458,417,429,443,443],
[440,449,433,0,463,469,452,446],
[445,457,474,428,0,445,474,437],
[407,446,462,422,446,0,459,448],
[447,466,448,439,417,432,0,452],
[447,451,448,445,454,443,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,394,390,435,418,444,471],
[441,0,384,399,444,444,432,462],
[497,507,0,448,438,475,455,502],
[501,492,443,0,480,504,488,494],
[456,447,453,411,0,488,451,501],
[473,447,416,387,403,0,420,458],
[447,459,436,403,440,471,0,468],
[420,429,389,397,390,433,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,455,423,448,467,473,442],
[440,0,442,434,439,463,461,455],
[436,449,0,426,441,451,454,453],
[468,457,465,0,452,432,456,449],
[443,452,450,439,0,459,434,455],
[424,428,440,459,432,0,466,456],
[418,430,437,435,457,425,0,445],
[449,436,438,442,436,435,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,416,440,439,466,445,427],
[445,0,438,442,464,480,473,448],
[475,453,0,456,424,456,482,435],
[451,449,435,0,442,466,459,409],
[452,427,467,449,0,461,456,443],
[425,411,435,425,430,0,452,391],
[446,418,409,432,435,439,0,429],
[464,443,456,482,448,500,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,382,403,458,414,455,427,410],
[509,0,444,485,431,463,425,461],
[488,447,0,493,449,481,472,438],
[433,406,398,0,419,437,435,446],
[477,460,442,472,0,466,447,429],
[436,428,410,454,425,0,426,398],
[464,466,419,456,444,465,0,414],
[481,430,453,445,462,493,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,448,447,420,424,450,414],
[470,0,469,470,436,468,472,462],
[443,422,0,478,452,464,479,433],
[444,421,413,0,403,426,414,432],
[471,455,439,488,0,469,466,466],
[467,423,427,465,422,0,434,442],
[441,419,412,477,425,457,0,433],
[477,429,458,459,425,449,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,454,484,429,440,463,468],
[431,0,479,442,449,448,437,427],
[437,412,0,430,435,454,440,436],
[407,449,461,0,441,486,470,470],
[462,442,456,450,0,460,449,460],
[451,443,437,405,431,0,452,470],
[428,454,451,421,442,439,0,430],
[423,464,455,421,431,421,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,442,505,410,463,431,416],
[465,0,460,487,452,470,449,437],
[449,431,0,479,432,460,431,441],
[386,404,412,0,410,446,407,412],
[481,439,459,481,0,488,435,444],
[428,421,431,445,403,0,432,416],
[460,442,460,484,456,459,0,465],
[475,454,450,479,447,475,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,506,479,443,444,472,461],
[394,0,478,481,465,447,437,400],
[385,413,0,433,406,419,404,400],
[412,410,458,0,402,476,436,437],
[448,426,485,489,0,502,440,404],
[447,444,472,415,389,0,441,376],
[419,454,487,455,451,450,0,399],
[430,491,491,454,487,515,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,408,433,477,357,434,445],
[416,0,440,416,388,388,432,418],
[483,451,0,413,458,419,436,476],
[458,475,478,0,446,506,454,431],
[414,503,433,445,0,435,444,438],
[534,503,472,385,456,0,502,530],
[457,459,455,437,447,389,0,451],
[446,473,415,460,453,361,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,426,442,430,410,414,413],
[469,0,482,477,444,435,447,462],
[465,409,0,446,448,420,450,444],
[449,414,445,0,418,438,410,425],
[461,447,443,473,0,458,426,435],
[481,456,471,453,433,0,444,452],
[477,444,441,481,465,447,0,467],
[478,429,447,466,456,439,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,383,406,424,391,430,401,397],
[508,0,433,412,437,462,452,438],
[485,458,0,468,448,437,466,472],
[467,479,423,0,418,454,446,420],
[500,454,443,473,0,470,472,453],
[461,429,454,437,421,0,464,419],
[490,439,425,445,419,427,0,425],
[494,453,419,471,438,472,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,468,450,446,457,469,446],
[452,0,463,434,452,472,454,453],
[423,428,0,443,429,441,476,437],
[441,457,448,0,429,449,465,469],
[445,439,462,462,0,461,463,457],
[434,419,450,442,430,0,440,440],
[422,437,415,426,428,451,0,430],
[445,438,454,422,434,451,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,459,475,473,459,455,445],
[436,0,448,430,456,425,443,433],
[432,443,0,431,449,429,431,456],
[416,461,460,0,469,436,458,459],
[418,435,442,422,0,443,421,442],
[432,466,462,455,448,0,468,448],
[436,448,460,433,470,423,0,432],
[446,458,435,432,449,443,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,444,426,479,446,443,476],
[419,0,432,405,448,415,452,439],
[447,459,0,451,470,475,444,454],
[465,486,440,0,471,464,447,467],
[412,443,421,420,0,416,426,429],
[445,476,416,427,475,0,422,451],
[448,439,447,444,465,469,0,460],
[415,452,437,424,462,440,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,422,434,506,470,441,477],
[439,0,463,440,462,448,446,450],
[469,428,0,439,464,458,431,436],
[457,451,452,0,443,471,439,435],
[385,429,427,448,0,463,428,432],
[421,443,433,420,428,0,437,436],
[450,445,460,452,463,454,0,448],
[414,441,455,456,459,455,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,451,446,436,460,445,429],
[440,0,433,402,438,431,428,429],
[440,458,0,435,442,458,440,451],
[445,489,456,0,452,462,452,445],
[455,453,449,439,0,437,445,454],
[431,460,433,429,454,0,448,431],
[446,463,451,439,446,443,0,443],
[462,462,440,446,437,460,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,449,435,431,441,459,464],
[460,0,448,447,457,443,456,466],
[442,443,0,436,449,421,419,446],
[456,444,455,0,453,441,453,458],
[460,434,442,438,0,433,425,427],
[450,448,470,450,458,0,442,456],
[432,435,472,438,466,449,0,457],
[427,425,445,433,464,435,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,438,470,460,426,436,449],
[415,0,408,448,416,434,433,451],
[453,483,0,456,458,451,441,469],
[421,443,435,0,457,428,437,457],
[431,475,433,434,0,413,432,422],
[465,457,440,463,478,0,455,483],
[455,458,450,454,459,436,0,470],
[442,440,422,434,469,408,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,443,458,437,447,444,457],
[449,0,442,474,436,452,468,475],
[448,449,0,446,433,437,434,455],
[433,417,445,0,440,424,427,450],
[454,455,458,451,0,433,453,478],
[444,439,454,467,458,0,443,448],
[447,423,457,464,438,448,0,436],
[434,416,436,441,413,443,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,450,449,479,438,431,461],
[423,0,460,431,474,452,448,455],
[441,431,0,452,457,450,458,459],
[442,460,439,0,469,430,416,442],
[412,417,434,422,0,405,427,459],
[453,439,441,461,486,0,429,458],
[460,443,433,475,464,462,0,467],
[430,436,432,449,432,433,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,463,416,426,429,432,452],
[486,0,423,454,414,403,457,480],
[428,468,0,406,429,391,429,529],
[475,437,485,0,450,448,484,429],
[465,477,462,441,0,406,464,457],
[462,488,500,443,485,0,481,463],
[459,434,462,407,427,410,0,460],
[439,411,362,462,434,428,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,410,418,416,405,426,436],
[478,0,438,457,458,425,438,444],
[481,453,0,469,476,445,439,466],
[473,434,422,0,432,396,424,457],
[475,433,415,459,0,405,442,476],
[486,466,446,495,486,0,443,477],
[465,453,452,467,449,448,0,445],
[455,447,425,434,415,414,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,357,370,375,354,439,432],
[504,0,441,390,436,454,467,390],
[534,450,0,454,485,443,493,456],
[521,501,437,0,484,447,518,432],
[516,455,406,407,0,465,546,403],
[537,437,448,444,426,0,487,451],
[452,424,398,373,345,404,0,430],
[459,501,435,459,488,440,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,440,424,429,414,450,435],
[443,0,442,442,444,440,449,456],
[451,449,0,443,458,451,461,442],
[467,449,448,0,441,444,456,433],
[462,447,433,450,0,448,447,429],
[477,451,440,447,443,0,456,427],
[441,442,430,435,444,435,0,438],
[456,435,449,458,462,464,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,461,482,399,430,429,459],
[494,0,434,461,489,321,434,404],
[430,457,0,511,486,429,460,488],
[409,430,380,0,372,402,348,432],
[492,402,405,519,0,346,404,430],
[461,570,462,489,545,0,403,545],
[462,457,431,543,487,488,0,458],
[432,487,403,459,461,346,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,466,449,486,466,430,531],
[447,0,409,375,431,439,407,427],
[425,482,0,322,465,474,408,489],
[442,516,569,0,524,488,582,557],
[405,460,426,367,0,451,442,447],
[425,452,417,403,440,0,426,430],
[461,484,483,309,449,465,0,412],
[360,464,402,334,444,461,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,421,448,418,447,476,456],
[439,0,477,447,445,470,503,500],
[470,414,0,447,437,443,471,476],
[443,444,444,0,432,440,494,482],
[473,446,454,459,0,439,481,478],
[444,421,448,451,452,0,476,479],
[415,388,420,397,410,415,0,452],
[435,391,415,409,413,412,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,450,411,437,461,466,425],
[480,0,479,434,450,502,496,471],
[441,412,0,427,452,443,478,418],
[480,457,464,0,473,459,467,440],
[454,441,439,418,0,472,452,417],
[430,389,448,432,419,0,454,413],
[425,395,413,424,439,437,0,378],
[466,420,473,451,474,478,513,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,456,410,427,413,457,398],
[438,0,433,426,413,425,481,438],
[435,458,0,390,476,467,489,468],
[481,465,501,0,436,461,490,487],
[464,478,415,455,0,464,493,433],
[478,466,424,430,427,0,436,416],
[434,410,402,401,398,455,0,421],
[493,453,423,404,458,475,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,502,484,452,490,434,438],
[459,0,473,493,410,469,410,440],
[389,418,0,437,404,423,368,421],
[407,398,454,0,407,429,397,430],
[439,481,487,484,0,508,437,473],
[401,422,468,462,383,0,414,408],
[457,481,523,494,454,477,0,436],
[453,451,470,461,418,483,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,405,429,444,387,378,434],
[432,0,438,414,422,416,427,395],
[486,453,0,439,420,481,452,414],
[462,477,452,0,432,421,440,396],
[447,469,471,459,0,434,472,453],
[504,475,410,470,457,0,455,462],
[513,464,439,451,419,436,0,385],
[457,496,477,495,438,429,506,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,483,472,450,454,418,495],
[439,0,471,536,462,454,517,469],
[408,420,0,469,411,443,425,465],
[419,355,422,0,436,417,451,410],
[441,429,480,455,0,457,479,499],
[437,437,448,474,434,0,469,466],
[473,374,466,440,412,422,0,466],
[396,422,426,481,392,425,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,442,455,438,447,446,417],
[469,0,460,456,451,450,476,435],
[449,431,0,438,435,460,443,432],
[436,435,453,0,454,461,445,454],
[453,440,456,437,0,446,454,438],
[444,441,431,430,445,0,464,430],
[445,415,448,446,437,427,0,437],
[474,456,459,437,453,461,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,448,474,454,430,448,428],
[402,0,455,437,398,397,416,382],
[443,436,0,441,447,399,455,419],
[417,454,450,0,438,453,445,384],
[437,493,444,453,0,393,480,445],
[461,494,492,438,498,0,461,453],
[443,475,436,446,411,430,0,402],
[463,509,472,507,446,438,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,442,454,465,451,445,468],
[438,0,429,445,420,421,414,475],
[449,462,0,470,445,436,427,471],
[437,446,421,0,435,414,428,457],
[426,471,446,456,0,444,450,470],
[440,470,455,477,447,0,451,460],
[446,477,464,463,441,440,0,470],
[423,416,420,434,421,431,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,432,463,440,420,435,446],
[430,0,443,460,436,461,436,434],
[459,448,0,438,431,433,427,429],
[428,431,453,0,431,421,431,459],
[451,455,460,460,0,442,428,470],
[471,430,458,470,449,0,435,455],
[456,455,464,460,463,456,0,440],
[445,457,462,432,421,436,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,464,453,457,474,446,451],
[467,0,461,460,452,470,449,440],
[427,430,0,431,427,439,435,417],
[438,431,460,0,450,442,441,438],
[434,439,464,441,0,454,418,443],
[417,421,452,449,437,0,441,444],
[445,442,456,450,473,450,0,433],
[440,451,474,453,448,447,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,497,463,434,524,483,453],
[470,0,467,442,445,488,458,463],
[394,424,0,411,386,460,421,444],
[428,449,480,0,431,467,439,495],
[457,446,505,460,0,474,489,432],
[367,403,431,424,417,0,425,441],
[408,433,470,452,402,466,0,481],
[438,428,447,396,459,450,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,437,445,460,445,439,436],
[444,0,438,455,450,442,461,453],
[454,453,0,441,459,473,447,432],
[446,436,450,0,451,444,447,439],
[431,441,432,440,0,441,431,435],
[446,449,418,447,450,0,449,453],
[452,430,444,444,460,442,0,432],
[455,438,459,452,456,438,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,478,434,444,489,462,476],
[470,0,465,451,444,438,490,440],
[413,426,0,427,434,509,467,427],
[457,440,464,0,471,438,459,460],
[447,447,457,420,0,429,459,468],
[402,453,382,453,462,0,451,423],
[429,401,424,432,432,440,0,436],
[415,451,464,431,423,468,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,450,446,453,458,453,441],
[445,0,450,458,465,456,472,458],
[441,441,0,448,450,441,468,460],
[445,433,443,0,447,435,465,455],
[438,426,441,444,0,432,444,439],
[433,435,450,456,459,0,459,451],
[438,419,423,426,447,432,0,434],
[450,433,431,436,452,440,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,441,450,474,475,430,489],
[452,0,452,498,436,464,433,454],
[450,439,0,422,439,470,396,480],
[441,393,469,0,448,493,454,451],
[417,455,452,443,0,471,401,483],
[416,427,421,398,420,0,417,446],
[461,458,495,437,490,474,0,488],
[402,437,411,440,408,445,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,463,429,442,417,447,458],
[443,0,468,466,447,449,445,450],
[428,423,0,423,437,435,420,426],
[462,425,468,0,457,457,443,456],
[449,444,454,434,0,464,455,467],
[474,442,456,434,427,0,462,454],
[444,446,471,448,436,429,0,435],
[433,441,465,435,424,437,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,494,441,473,483,490,497],
[392,0,435,429,447,459,432,488],
[397,456,0,413,437,456,412,439],
[450,462,478,0,450,445,429,486],
[418,444,454,441,0,461,454,503],
[408,432,435,446,430,0,441,485],
[401,459,479,462,437,450,0,455],
[394,403,452,405,388,406,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,523,488,479,491,437,457],
[419,0,463,447,471,444,465,426],
[368,428,0,408,424,409,366,392],
[403,444,483,0,411,455,410,421],
[412,420,467,480,0,467,438,427],
[400,447,482,436,424,0,403,439],
[454,426,525,481,453,488,0,433],
[434,465,499,470,464,452,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,441,429,439,447,457,447],
[459,0,460,450,445,442,467,459],
[450,431,0,457,444,428,446,458],
[462,441,434,0,465,438,456,460],
[452,446,447,426,0,455,440,437],
[444,449,463,453,436,0,449,449],
[434,424,445,435,451,442,0,428],
[444,432,433,431,454,442,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,532,441,425,457,473,467,498],
[359,0,431,433,460,417,434,444],
[450,460,0,435,447,501,510,488],
[466,458,456,0,416,462,499,441],
[434,431,444,475,0,436,482,481],
[418,474,390,429,455,0,470,476],
[424,457,381,392,409,421,0,451],
[393,447,403,450,410,415,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,426,450,454,455,422,433],
[450,0,429,438,438,439,420,430],
[465,462,0,448,474,476,456,444],
[441,453,443,0,431,439,431,438],
[437,453,417,460,0,445,422,438],
[436,452,415,452,446,0,405,433],
[469,471,435,460,469,486,0,452],
[458,461,447,453,453,458,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,442,484,459,462,450,428],
[436,0,442,476,461,477,465,425],
[449,449,0,462,477,465,444,464],
[407,415,429,0,453,418,430,417],
[432,430,414,438,0,449,441,421],
[429,414,426,473,442,0,439,426],
[441,426,447,461,450,452,0,453],
[463,466,427,474,470,465,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,492,414,381,429,540,363],
[486,0,437,453,414,364,480,367],
[399,454,0,511,381,313,462,430],
[477,438,380,0,461,345,511,374],
[510,477,510,430,0,491,491,472],
[462,527,578,546,400,0,610,476],
[351,411,429,380,400,281,0,348],
[528,524,461,517,419,415,543,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,457,452,443,461,443,460],
[437,0,460,445,471,434,457,463],
[434,431,0,436,447,435,421,458],
[439,446,455,0,457,457,458,487],
[448,420,444,434,0,434,448,467],
[430,457,456,434,457,0,452,443],
[448,434,470,433,443,439,0,455],
[431,428,433,404,424,448,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,438,465,438,485,457,441],
[426,0,451,437,425,455,432,440],
[453,440,0,461,441,491,445,438],
[426,454,430,0,437,453,443,421],
[453,466,450,454,0,472,469,443],
[406,436,400,438,419,0,441,422],
[434,459,446,448,422,450,0,450],
[450,451,453,470,448,469,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,429,441,441,443,435,423],
[463,0,457,428,400,402,440,416],
[462,434,0,473,453,469,450,464],
[450,463,418,0,421,437,453,448],
[450,491,438,470,0,456,454,462],
[448,489,422,454,435,0,464,458],
[456,451,441,438,437,427,0,445],
[468,475,427,443,429,433,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,455,477,461,471,492,443],
[435,0,447,427,429,456,470,413],
[436,444,0,461,472,448,486,453],
[414,464,430,0,449,416,460,431],
[430,462,419,442,0,439,441,427],
[420,435,443,475,452,0,478,433],
[399,421,405,431,450,413,0,413],
[448,478,438,460,464,458,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,453,439,463,464,472,442],
[436,0,429,446,455,459,446,454],
[438,462,0,453,456,467,446,431],
[452,445,438,0,444,459,468,449],
[428,436,435,447,0,441,448,467],
[427,432,424,432,450,0,442,443],
[419,445,445,423,443,449,0,432],
[449,437,460,442,424,448,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,453,421,469,437,449,454],
[453,0,462,442,448,428,437,464],
[438,429,0,429,446,432,444,447],
[470,449,462,0,455,439,456,443],
[422,443,445,436,0,449,456,447],
[454,463,459,452,442,0,449,456],
[442,454,447,435,435,442,0,455],
[437,427,444,448,444,435,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,436,437,436,416,427,428],
[469,0,457,456,464,444,440,438],
[455,434,0,433,442,455,417,446],
[454,435,458,0,429,439,453,439],
[455,427,449,462,0,451,440,473],
[475,447,436,452,440,0,457,435],
[464,451,474,438,451,434,0,450],
[463,453,445,452,418,456,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,464,459,456,450,450,442],
[428,0,446,440,483,394,475,429],
[427,445,0,413,482,454,452,437],
[432,451,478,0,459,420,447,436],
[435,408,409,432,0,366,422,397],
[441,497,437,471,525,0,486,461],
[441,416,439,444,469,405,0,447],
[449,462,454,455,494,430,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,434,427,428,448,449,437],
[458,0,461,453,446,460,448,434],
[457,430,0,438,432,461,445,440],
[464,438,453,0,441,455,461,436],
[463,445,459,450,0,460,453,444],
[443,431,430,436,431,0,423,424],
[442,443,446,430,438,468,0,459],
[454,457,451,455,447,467,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,451,465,431,458,452,454],
[435,0,450,455,437,439,438,450],
[440,441,0,468,436,446,438,434],
[426,436,423,0,425,430,430,426],
[460,454,455,466,0,447,428,455],
[433,452,445,461,444,0,431,428],
[439,453,453,461,463,460,0,431],
[437,441,457,465,436,463,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,435,436,450,444,450,429],
[450,0,445,430,448,426,431,447],
[456,446,0,465,465,443,436,455],
[455,461,426,0,452,447,445,448],
[441,443,426,439,0,408,423,433],
[447,465,448,444,483,0,448,451],
[441,460,455,446,468,443,0,464],
[462,444,436,443,458,440,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,453,456,467,446,493,429],
[445,0,484,464,458,455,479,454],
[438,407,0,417,443,449,471,457],
[435,427,474,0,481,452,471,450],
[424,433,448,410,0,431,439,439],
[445,436,442,439,460,0,429,430],
[398,412,420,420,452,462,0,414],
[462,437,434,441,452,461,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,432,432,484,440,479,482],
[438,0,402,451,490,447,474,479],
[459,489,0,445,456,448,480,463],
[459,440,446,0,493,461,417,485],
[407,401,435,398,0,398,389,425],
[451,444,443,430,493,0,470,482],
[412,417,411,474,502,421,0,441],
[409,412,428,406,466,409,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,436,440,460,451,453,463],
[433,0,417,424,431,461,445,463],
[455,474,0,431,438,450,431,458],
[451,467,460,0,438,489,429,467],
[431,460,453,453,0,434,440,478],
[440,430,441,402,457,0,424,459],
[438,446,460,462,451,467,0,482],
[428,428,433,424,413,432,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,464,481,451,475,449,442],
[417,0,442,445,436,445,427,432],
[427,449,0,464,437,454,456,460],
[410,446,427,0,405,439,436,447],
[440,455,454,486,0,461,424,469],
[416,446,437,452,430,0,435,445],
[442,464,435,455,467,456,0,435],
[449,459,431,444,422,446,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,453,459,446,429,448,469],
[479,0,466,472,447,461,454,439],
[438,425,0,456,438,430,453,429],
[432,419,435,0,439,425,427,409],
[445,444,453,452,0,438,443,441],
[462,430,461,466,453,0,451,428],
[443,437,438,464,448,440,0,445],
[422,452,462,482,450,463,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,487,417,439,436,455,466],
[434,0,431,393,419,408,409,458],
[404,460,0,390,433,422,425,435],
[474,498,501,0,508,464,441,497],
[452,472,458,383,0,436,411,450],
[455,483,469,427,455,0,446,477],
[436,482,466,450,480,445,0,477],
[425,433,456,394,441,414,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,463,454,452,446,440,437],
[441,0,478,485,457,443,452,478],
[428,413,0,442,441,448,445,429],
[437,406,449,0,447,449,422,459],
[439,434,450,444,0,447,450,443],
[445,448,443,442,444,0,441,436],
[451,439,446,469,441,450,0,441],
[454,413,462,432,448,455,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,467,476,441,458,442,415],
[412,0,456,441,412,420,418,406],
[424,435,0,473,404,401,362,404],
[415,450,418,0,425,413,410,412],
[450,479,487,466,0,447,440,452],
[433,471,490,478,444,0,419,438],
[449,473,529,481,451,472,0,432],
[476,485,487,479,439,453,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,462,447,462,448,470,438],
[437,0,454,468,484,451,468,445],
[429,437,0,447,448,464,447,442],
[444,423,444,0,467,446,443,435],
[429,407,443,424,0,434,451,423],
[443,440,427,445,457,0,450,447],
[421,423,444,448,440,441,0,453],
[453,446,449,456,468,444,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,465,429,414,434,435,470],
[459,0,481,438,436,478,447,500],
[426,410,0,413,466,396,427,492],
[462,453,478,0,443,427,462,493],
[477,455,425,448,0,449,450,520],
[457,413,495,464,442,0,481,489],
[456,444,464,429,441,410,0,479],
[421,391,399,398,371,402,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,408,472,437,429,438,450],
[430,0,450,388,448,419,446,393],
[483,441,0,483,464,425,471,443],
[419,503,408,0,397,416,459,456],
[454,443,427,494,0,425,485,468],
[462,472,466,475,466,0,478,437],
[453,445,420,432,406,413,0,449],
[441,498,448,435,423,454,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,446,425,442,470,442,444],
[455,0,459,449,452,490,444,447],
[445,432,0,425,432,470,446,451],
[466,442,466,0,427,453,434,469],
[449,439,459,464,0,471,417,450],
[421,401,421,438,420,0,401,432],
[449,447,445,457,474,490,0,454],
[447,444,440,422,441,459,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,441,438,415,401,417,431],
[467,0,445,466,459,450,452,447],
[450,446,0,434,431,406,402,454],
[453,425,457,0,444,431,443,433],
[476,432,460,447,0,468,436,448],
[490,441,485,460,423,0,440,479],
[474,439,489,448,455,451,0,453],
[460,444,437,458,443,412,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,435,453,452,438,413,426],
[469,0,429,443,446,454,445,430],
[456,462,0,472,480,448,476,443],
[438,448,419,0,439,440,438,441],
[439,445,411,452,0,447,449,435],
[453,437,443,451,444,0,414,437],
[478,446,415,453,442,477,0,457],
[465,461,448,450,456,454,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,461,447,396,522,470,486],
[424,0,532,502,406,465,367,535],
[430,359,0,413,464,429,389,483],
[444,389,478,0,353,459,445,441],
[495,485,427,538,0,521,500,533],
[369,426,462,432,370,0,468,478],
[421,524,502,446,391,423,0,514],
[405,356,408,450,358,413,377,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,427,427,403,448,452,462],
[433,0,446,455,419,446,457,428],
[464,445,0,456,451,451,456,428],
[464,436,435,0,408,441,416,426],
[488,472,440,483,0,477,451,472],
[443,445,440,450,414,0,448,437],
[439,434,435,475,440,443,0,437],
[429,463,463,465,419,454,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,446,499,487,434,443,482],
[439,0,425,478,451,433,433,464],
[445,466,0,465,477,468,453,471],
[392,413,426,0,447,399,428,446],
[404,440,414,444,0,446,449,479],
[457,458,423,492,445,0,461,444],
[448,458,438,463,442,430,0,454],
[409,427,420,445,412,447,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,416,435,435,428,424,433],
[452,0,417,399,390,421,419,407],
[475,474,0,465,435,486,459,410],
[456,492,426,0,425,475,445,460],
[456,501,456,466,0,476,463,441],
[463,470,405,416,415,0,432,457],
[467,472,432,446,428,459,0,450],
[458,484,481,431,450,434,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,439,467,425,496,441,456],
[444,0,453,459,464,505,450,436],
[452,438,0,441,456,486,443,442],
[424,432,450,0,436,481,452,458],
[466,427,435,455,0,473,429,444],
[395,386,405,410,418,0,403,405],
[450,441,448,439,462,488,0,431],
[435,455,449,433,447,486,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,442,445,453,458,435,447],
[456,0,437,442,476,450,456,460],
[449,454,0,450,440,450,443,446],
[446,449,441,0,437,451,436,443],
[438,415,451,454,0,450,434,454],
[433,441,441,440,441,0,440,438],
[456,435,448,455,457,451,0,441],
[444,431,445,448,437,453,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,455,442,446,429,447,437],
[444,0,453,457,447,449,449,458],
[436,438,0,441,464,426,435,435],
[449,434,450,0,464,449,446,446],
[445,444,427,427,0,416,434,417],
[462,442,465,442,475,0,452,431],
[444,442,456,445,457,439,0,452],
[454,433,456,445,474,460,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,461,438,437,426,414,428],
[481,0,473,445,450,451,460,455],
[430,418,0,426,422,430,395,427],
[453,446,465,0,472,445,445,461],
[454,441,469,419,0,411,428,460],
[465,440,461,446,480,0,442,461],
[477,431,496,446,463,449,0,469],
[463,436,464,430,431,430,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,443,433,439,439,451,451],
[430,0,447,446,452,486,492,468],
[448,444,0,452,430,458,471,463],
[458,445,439,0,444,462,485,428],
[452,439,461,447,0,448,465,457],
[452,405,433,429,443,0,467,448],
[440,399,420,406,426,424,0,430],
[440,423,428,463,434,443,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,474,465,426,458,409,420],
[434,0,430,446,426,451,402,409],
[417,461,0,475,407,481,408,417],
[426,445,416,0,414,422,387,419],
[465,465,484,477,0,516,444,485],
[433,440,410,469,375,0,398,400],
[482,489,483,504,447,493,0,438],
[471,482,474,472,406,491,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,426,465,465,438,441,443],
[438,0,435,443,455,427,448,429],
[465,456,0,455,473,469,423,470],
[426,448,436,0,459,435,443,439],
[426,436,418,432,0,426,416,429],
[453,464,422,456,465,0,433,449],
[450,443,468,448,475,458,0,443],
[448,462,421,452,462,442,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,410,435,445,415,426,409],
[485,0,445,468,482,498,499,447],
[481,446,0,474,491,483,486,444],
[456,423,417,0,463,477,422,420],
[446,409,400,428,0,447,416,424],
[476,393,408,414,444,0,476,429],
[465,392,405,469,475,415,0,444],
[482,444,447,471,467,462,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,480,423,459,487,433,445],
[424,0,405,396,378,432,382,438],
[411,486,0,433,449,427,399,452],
[468,495,458,0,426,453,434,474],
[432,513,442,465,0,440,411,480],
[404,459,464,438,451,0,446,463],
[458,509,492,457,480,445,0,453],
[446,453,439,417,411,428,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,480,434,490,453,446,477],
[462,0,461,417,482,464,465,447],
[411,430,0,415,477,432,417,395],
[457,474,476,0,481,470,466,445],
[401,409,414,410,0,429,416,387],
[438,427,459,421,462,0,476,407],
[445,426,474,425,475,415,0,451],
[414,444,496,446,504,484,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,457,440,452,445,458,469],
[427,0,443,430,426,423,431,426],
[434,448,0,423,430,424,433,442],
[451,461,468,0,446,436,445,463],
[439,465,461,445,0,448,452,450],
[446,468,467,455,443,0,460,458],
[433,460,458,446,439,431,0,430],
[422,465,449,428,441,433,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,422,463,419,421,450,444],
[436,0,425,435,423,426,450,441],
[469,466,0,444,442,468,456,433],
[428,456,447,0,429,439,449,463],
[472,468,449,462,0,445,456,441],
[470,465,423,452,446,0,440,439],
[441,441,435,442,435,451,0,442],
[447,450,458,428,450,452,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,439,429,475,431,449,445],
[429,0,419,449,429,424,435,446],
[452,472,0,430,458,463,457,464],
[462,442,461,0,468,446,460,439],
[416,462,433,423,0,439,416,449],
[460,467,428,445,452,0,421,443],
[442,456,434,431,475,470,0,447],
[446,445,427,452,442,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,460,436,433,431,437,429],
[425,0,456,435,408,420,448,409],
[431,435,0,430,420,414,423,433],
[455,456,461,0,432,420,439,445],
[458,483,471,459,0,440,451,456],
[460,471,477,471,451,0,446,440],
[454,443,468,452,440,445,0,437],
[462,482,458,446,435,451,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,456,511,455,481,443,415],
[481,0,421,476,459,436,451,445],
[435,470,0,498,415,452,449,448],
[380,415,393,0,449,443,438,386],
[436,432,476,442,0,460,464,459],
[410,455,439,448,431,0,435,420],
[448,440,442,453,427,456,0,393],
[476,446,443,505,432,471,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,464,482,444,443,428,455],
[449,0,462,478,438,468,442,457],
[427,429,0,470,425,438,385,441],
[409,413,421,0,437,417,388,419],
[447,453,466,454,0,457,427,439],
[448,423,453,474,434,0,419,445],
[463,449,506,503,464,472,0,436],
[436,434,450,472,452,446,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,222,333,333,447,333,666,444],
[669,0,447,558,447,336,558,558],
[558,444,0,669,225,558,558,558],
[558,333,222,0,336,558,669,558],
[444,444,666,555,0,333,444,555],
[558,555,333,333,558,0,558,444],
[225,333,333,222,447,333,0,333],
[447,333,333,333,336,447,558,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,465,486,369,518,498,405],
[406,0,404,527,422,482,446,443],
[426,487,0,433,469,446,503,469],
[405,364,458,0,501,443,480,461],
[522,469,422,390,0,502,486,400],
[373,409,445,448,389,0,464,390],
[393,445,388,411,405,427,0,367],
[486,448,422,430,491,501,524,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,462,463,480,442,494,458],
[440,0,460,502,499,503,508,486],
[429,431,0,444,489,447,485,463],
[428,389,447,0,448,433,454,451],
[411,392,402,443,0,444,448,434],
[449,388,444,458,447,0,453,469],
[397,383,406,437,443,438,0,426],
[433,405,428,440,457,422,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,460,439,430,470,445,427],
[463,0,452,428,453,449,441,419],
[431,439,0,450,461,446,470,431],
[452,463,441,0,448,468,429,452],
[461,438,430,443,0,435,437,449],
[421,442,445,423,456,0,463,429],
[446,450,421,462,454,428,0,447],
[464,472,460,439,442,462,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,441,447,426,439,447,435],
[436,0,436,433,432,433,422,437],
[450,455,0,429,424,428,428,417],
[444,458,462,0,450,440,448,438],
[465,459,467,441,0,435,446,453],
[452,458,463,451,456,0,437,444],
[444,469,463,443,445,454,0,458],
[456,454,474,453,438,447,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,465,408,452,465,358,425],
[447,0,426,420,412,392,355,442],
[426,465,0,445,469,434,437,457],
[483,471,446,0,548,433,453,469],
[439,479,422,343,0,392,360,424],
[426,499,457,458,499,0,413,462],
[533,536,454,438,531,478,0,552],
[466,449,434,422,467,429,339,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,457,429,445,452,443,438],
[431,0,426,446,493,442,450,453],
[434,465,0,455,460,441,442,430],
[462,445,436,0,467,444,473,453],
[446,398,431,424,0,425,432,428],
[439,449,450,447,466,0,436,440],
[448,441,449,418,459,455,0,446],
[453,438,461,438,463,451,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,418,452,437,442,441,429],
[453,0,428,474,473,439,457,441],
[473,463,0,462,471,456,430,463],
[439,417,429,0,449,451,422,428],
[454,418,420,442,0,414,443,435],
[449,452,435,440,477,0,441,429],
[450,434,461,469,448,450,0,441],
[462,450,428,463,456,462,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,434,455,472,437,432,458],
[446,0,443,466,445,462,442,459],
[457,448,0,465,445,443,437,465],
[436,425,426,0,409,411,439,436],
[419,446,446,482,0,442,453,451],
[454,429,448,480,449,0,419,440],
[459,449,454,452,438,472,0,462],
[433,432,426,455,440,451,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,418,469,453,426,454,435],
[469,0,440,455,453,435,466,479],
[473,451,0,470,479,435,464,431],
[422,436,421,0,434,417,445,448],
[438,438,412,457,0,426,447,467],
[465,456,456,474,465,0,457,443],
[437,425,427,446,444,434,0,440],
[456,412,460,443,424,448,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,427,498,463,449,419,464],
[467,0,431,469,508,474,448,469],
[464,460,0,493,485,513,438,508],
[393,422,398,0,456,435,412,442],
[428,383,406,435,0,405,376,454],
[442,417,378,456,486,0,417,453],
[472,443,453,479,515,474,0,476],
[427,422,383,449,437,438,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,472,453,419,435,468,453],
[454,0,459,467,419,455,478,440],
[419,432,0,444,447,436,443,413],
[438,424,447,0,397,446,450,412],
[472,472,444,494,0,463,483,477],
[456,436,455,445,428,0,458,445],
[423,413,448,441,408,433,0,442],
[438,451,478,479,414,446,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,529,463,463,465,414,447,571],
[362,0,458,460,499,406,520,557],
[428,433,0,462,445,443,444,495],
[428,431,429,0,431,422,471,542],
[426,392,446,460,0,485,487,476],
[477,485,448,469,406,0,497,595],
[444,371,447,420,404,394,0,550],
[320,334,396,349,415,296,341,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,418,484,453,449,458,444],
[415,0,410,410,432,365,425,417],
[473,481,0,451,470,438,459,479],
[407,481,440,0,437,436,431,461],
[438,459,421,454,0,420,447,488],
[442,526,453,455,471,0,468,455],
[433,466,432,460,444,423,0,420],
[447,474,412,430,403,436,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,426,445,427,447,415,446],
[445,0,415,428,419,429,415,465],
[465,476,0,437,441,449,456,456],
[446,463,454,0,419,456,433,468],
[464,472,450,472,0,455,442,443],
[444,462,442,435,436,0,426,445],
[476,476,435,458,449,465,0,475],
[445,426,435,423,448,446,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,414,419,432,418,414,391],
[473,0,450,435,469,442,448,449],
[477,441,0,468,457,454,451,460],
[472,456,423,0,489,427,478,455],
[459,422,434,402,0,435,408,417],
[473,449,437,464,456,0,431,445],
[477,443,440,413,483,460,0,440],
[500,442,431,436,474,446,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,432,455,472,441,466,436],
[445,0,447,459,455,425,438,448],
[459,444,0,467,458,441,448,443],
[436,432,424,0,455,435,435,436],
[419,436,433,436,0,431,431,443],
[450,466,450,456,460,0,448,428],
[425,453,443,456,460,443,0,434],
[455,443,448,455,448,463,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,429,447,431,450,450,432],
[465,0,449,451,442,428,445,449],
[462,442,0,458,431,437,436,438],
[444,440,433,0,438,432,424,453],
[460,449,460,453,0,444,445,452],
[441,463,454,459,447,0,434,479],
[441,446,455,467,446,457,0,467],
[459,442,453,438,439,412,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,461,467,444,458,468,437],
[433,0,478,466,426,413,459,452],
[430,413,0,437,439,401,432,410],
[424,425,454,0,430,440,442,440],
[447,465,452,461,0,416,439,403],
[433,478,490,451,475,0,454,447],
[423,432,459,449,452,437,0,447],
[454,439,481,451,488,444,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,453,462,447,409,447,453],
[460,0,463,462,437,454,442,465],
[438,428,0,442,444,446,456,461],
[429,429,449,0,436,419,449,431],
[444,454,447,455,0,437,466,479],
[482,437,445,472,454,0,464,481],
[444,449,435,442,425,427,0,436],
[438,426,430,460,412,410,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,456,430,447,440,446,421],
[405,0,438,430,417,401,387,444],
[435,453,0,397,437,419,382,391],
[461,461,494,0,448,447,388,479],
[444,474,454,443,0,429,391,421],
[451,490,472,444,462,0,411,428],
[445,504,509,503,500,480,0,498],
[470,447,500,412,470,463,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,414,433,436,436,489,476],
[477,0,462,441,445,436,498,494],
[477,429,0,479,466,474,512,492],
[458,450,412,0,444,433,472,467],
[455,446,425,447,0,430,491,485],
[455,455,417,458,461,0,474,479],
[402,393,379,419,400,417,0,450],
[415,397,399,424,406,412,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,339,504,418,471,426,408,501],
[552,0,421,486,472,505,523,570],
[387,470,0,469,406,450,437,467],
[473,405,422,0,538,476,461,488],
[420,419,485,353,0,420,443,533],
[465,386,441,415,471,0,473,422],
[483,368,454,430,448,418,0,501],
[390,321,424,403,358,469,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,445,468,472,452,447,438],
[435,0,460,449,448,439,444,430],
[446,431,0,430,430,454,432,454],
[423,442,461,0,428,418,426,436],
[419,443,461,463,0,443,446,446],
[439,452,437,473,448,0,472,459],
[444,447,459,465,445,419,0,435],
[453,461,437,455,445,432,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,539,459,493,464,442,568],
[394,0,518,444,374,481,429,480],
[352,373,0,336,426,370,373,407],
[432,447,555,0,432,524,412,522],
[398,517,465,459,0,447,304,444],
[427,410,521,367,444,0,480,548],
[449,462,518,479,587,411,0,534],
[323,411,484,369,447,343,357,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,394,439,460,483,432,447],
[417,0,372,390,404,465,383,441],
[497,519,0,426,463,501,484,508],
[452,501,465,0,472,496,418,473],
[431,487,428,419,0,518,420,451],
[408,426,390,395,373,0,352,430],
[459,508,407,473,471,539,0,476],
[444,450,383,418,440,461,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,453,436,453,424,458,449],
[442,0,442,446,458,440,440,443],
[438,449,0,418,441,428,444,429],
[455,445,473,0,468,450,420,439],
[438,433,450,423,0,411,432,433],
[467,451,463,441,480,0,447,468],
[433,451,447,471,459,444,0,444],
[442,448,462,452,458,423,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,472,453,426,462,446,427],
[443,0,466,456,458,464,427,446],
[419,425,0,399,448,424,428,412],
[438,435,492,0,443,434,425,429],
[465,433,443,448,0,465,427,444],
[429,427,467,457,426,0,440,435],
[445,464,463,466,464,451,0,433],
[464,445,479,462,447,456,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,440,404,421,442,386,404],
[479,0,458,436,446,450,447,456],
[451,433,0,429,460,471,432,437],
[487,455,462,0,454,477,441,452],
[470,445,431,437,0,458,431,448],
[449,441,420,414,433,0,417,419],
[505,444,459,450,460,474,0,463],
[487,435,454,439,443,472,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,465,439,426,462,449,453],
[476,0,475,437,449,460,465,461],
[426,416,0,415,420,437,422,456],
[452,454,476,0,428,471,472,479],
[465,442,471,463,0,473,455,450],
[429,431,454,420,418,0,453,443],
[442,426,469,419,436,438,0,464],
[438,430,435,412,441,448,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,472,461,441,445,471,435],
[419,0,435,436,413,435,482,439],
[419,456,0,436,425,446,451,448],
[430,455,455,0,434,440,465,452],
[450,478,466,457,0,443,448,443],
[446,456,445,451,448,0,478,437],
[420,409,440,426,443,413,0,457],
[456,452,443,439,448,454,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,392,415,428,416,431,440],
[476,0,452,422,437,451,445,481],
[499,439,0,458,468,478,458,502],
[476,469,433,0,462,488,471,502],
[463,454,423,429,0,444,471,459],
[475,440,413,403,447,0,425,473],
[460,446,433,420,420,466,0,464],
[451,410,389,389,432,418,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,426,470,443,450,432,428],
[438,0,422,441,439,436,421,418],
[465,469,0,471,463,450,431,447],
[421,450,420,0,422,431,431,419],
[448,452,428,469,0,434,432,449],
[441,455,441,460,457,0,425,417],
[459,470,460,460,459,466,0,443],
[463,473,444,472,442,474,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,438,422,421,442,464,464],
[435,0,435,442,436,448,442,451],
[453,456,0,458,441,461,462,480],
[469,449,433,0,453,446,452,440],
[470,455,450,438,0,459,460,467],
[449,443,430,445,432,0,460,443],
[427,449,429,439,431,431,0,433],
[427,440,411,451,424,448,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,411,498,488,497,461,446],
[429,0,411,528,476,505,559,498],
[480,480,0,491,453,514,470,441],
[393,363,400,0,420,501,409,419],
[403,415,438,471,0,472,438,437],
[394,386,377,390,419,0,377,369],
[430,332,421,482,453,514,0,469],
[445,393,450,472,454,522,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,431,435,420,430,446,420],
[459,0,463,412,422,461,429,439],
[460,428,0,435,428,450,445,464],
[456,479,456,0,456,468,442,457],
[471,469,463,435,0,454,442,436],
[461,430,441,423,437,0,460,448],
[445,462,446,449,449,431,0,428],
[471,452,427,434,455,443,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,466,451,502,435,493,465],
[390,0,409,438,439,460,503,436],
[425,482,0,449,462,483,511,441],
[440,453,442,0,444,440,499,435],
[389,452,429,447,0,448,480,444],
[456,431,408,451,443,0,483,440],
[398,388,380,392,411,408,0,404],
[426,455,450,456,447,451,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,449,463,455,443,451,441],
[441,0,468,441,451,447,435,453],
[442,423,0,452,429,435,437,432],
[428,450,439,0,448,431,460,440],
[436,440,462,443,0,424,462,459],
[448,444,456,460,467,0,449,464],
[440,456,454,431,429,442,0,450],
[450,438,459,451,432,427,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,452,413,422,416,415,400],
[452,0,445,414,434,489,408,439],
[439,446,0,398,395,420,402,449],
[478,477,493,0,473,485,428,487],
[469,457,496,418,0,481,446,435],
[475,402,471,406,410,0,422,449],
[476,483,489,463,445,469,0,452],
[491,452,442,404,456,442,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,546,483,464,446,536,438,422],
[345,0,394,442,394,423,410,384],
[408,497,0,503,443,501,468,428],
[427,449,388,0,427,431,381,391],
[445,497,448,464,0,478,430,477],
[355,468,390,460,413,0,390,401],
[453,481,423,510,461,501,0,458],
[469,507,463,500,414,490,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,439,443,426,452,447,429],
[469,0,453,444,459,468,461,467],
[452,438,0,458,450,450,447,438],
[448,447,433,0,453,425,461,452],
[465,432,441,438,0,443,454,418],
[439,423,441,466,448,0,458,448],
[444,430,444,430,437,433,0,417],
[462,424,453,439,473,443,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,437,364,463,444,374,422],
[492,0,434,459,448,509,451,547],
[454,457,0,445,415,550,464,473],
[527,432,446,0,434,435,434,418],
[428,443,476,457,0,443,410,457],
[447,382,341,456,448,0,449,526],
[517,440,427,457,481,442,0,555],
[469,344,418,473,434,365,336,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,279,334,384,445,386,501,389],
[612,0,443,444,448,502,612,443],
[557,448,0,445,503,556,499,555],
[507,447,446,0,392,560,446,447],
[446,443,388,499,0,445,556,445],
[505,389,335,331,446,0,613,444],
[390,279,392,445,335,278,0,223],
[502,448,336,444,446,447,668,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,467,479,431,498,464,438],
[406,0,433,456,464,465,468,445],
[424,458,0,469,438,467,461,452],
[412,435,422,0,435,435,475,434],
[460,427,453,456,0,443,467,466],
[393,426,424,456,448,0,449,428],
[427,423,430,416,424,442,0,459],
[453,446,439,457,425,463,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,484,448,435,528,466,422],
[424,0,431,391,401,435,420,408],
[407,460,0,400,396,429,443,394],
[443,500,491,0,461,491,443,425],
[456,490,495,430,0,517,476,465],
[363,456,462,400,374,0,440,373],
[425,471,448,448,415,451,0,425],
[469,483,497,466,426,518,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,443,456,427,445,454,453],
[437,0,418,453,449,457,454,449],
[448,473,0,467,470,431,453,474],
[435,438,424,0,447,427,428,436],
[464,442,421,444,0,429,451,437],
[446,434,460,464,462,0,435,444],
[437,437,438,463,440,456,0,454],
[438,442,417,455,454,447,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,477,449,455,465,462,467],
[446,0,446,456,429,452,442,448],
[414,445,0,457,432,453,456,466],
[442,435,434,0,427,451,457,459],
[436,462,459,464,0,453,453,480],
[426,439,438,440,438,0,447,485],
[429,449,435,434,438,444,0,474],
[424,443,425,432,411,406,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,434,426,448,426,442,435],
[453,0,455,452,435,457,441,459],
[457,436,0,436,435,465,429,468],
[465,439,455,0,442,441,467,457],
[443,456,456,449,0,444,432,463],
[465,434,426,450,447,0,436,467],
[449,450,462,424,459,455,0,443],
[456,432,423,434,428,424,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,474,467,441,446,457,453],
[443,0,463,436,453,439,452,468],
[417,428,0,419,447,423,436,409],
[424,455,472,0,467,459,437,441],
[450,438,444,424,0,424,460,428],
[445,452,468,432,467,0,478,448],
[434,439,455,454,431,413,0,430],
[438,423,482,450,463,443,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,481,438,458,480,469,463],
[436,0,465,452,441,460,458,429],
[410,426,0,427,430,466,427,434],
[453,439,464,0,457,460,459,423],
[433,450,461,434,0,460,432,420],
[411,431,425,431,431,0,426,434],
[422,433,464,432,459,465,0,433],
[428,462,457,468,471,457,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,451,465,420,471,453,472],
[444,0,426,402,427,442,422,472],
[440,465,0,442,429,478,459,476],
[426,489,449,0,456,456,492,432],
[471,464,462,435,0,452,476,480],
[420,449,413,435,439,0,445,432],
[438,469,432,399,415,446,0,476],
[419,419,415,459,411,459,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,572,464,424,493,553,491,551],
[319,0,424,360,492,534,409,487],
[427,467,0,446,558,578,557,618],
[467,531,445,0,511,593,443,594],
[398,399,333,380,0,549,404,463],
[338,357,313,298,342,0,361,425],
[400,482,334,448,487,530,0,552],
[340,404,273,297,428,466,339,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,438,434,444,450,449,443],
[447,0,441,459,450,449,434,455],
[453,450,0,453,458,468,443,468],
[457,432,438,0,460,464,456,442],
[447,441,433,431,0,452,432,444],
[441,442,423,427,439,0,433,436],
[442,457,448,435,459,458,0,454],
[448,436,423,449,447,455,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,480,458,390,418,432,449],
[440,0,441,467,455,466,407,404],
[411,450,0,482,395,406,406,440],
[433,424,409,0,383,402,394,406],
[501,436,496,508,0,413,474,455],
[473,425,485,489,478,0,455,428],
[459,484,485,497,417,436,0,457],
[442,487,451,485,436,463,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,459,406,446,461,425,417],
[405,0,398,403,422,408,385,377],
[432,493,0,459,478,507,430,486],
[485,488,432,0,492,493,408,448],
[445,469,413,399,0,428,387,411],
[430,483,384,398,463,0,427,428],
[466,506,461,483,504,464,0,439],
[474,514,405,443,480,463,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,450,450,430,434,426,435],
[455,0,460,440,450,436,459,436],
[441,431,0,443,412,428,433,428],
[441,451,448,0,460,462,457,424],
[461,441,479,431,0,416,465,446],
[457,455,463,429,475,0,447,438],
[465,432,458,434,426,444,0,440],
[456,455,463,467,445,453,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,385,411,444,464,427,465],
[427,0,484,455,462,462,463,490],
[506,407,0,428,455,432,451,505],
[480,436,463,0,426,470,473,493],
[447,429,436,465,0,468,473,490],
[427,429,459,421,423,0,435,509],
[464,428,440,418,418,456,0,466],
[426,401,386,398,401,382,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,432,408,451,436,426,417],
[422,0,435,416,448,421,439,417],
[459,456,0,438,473,467,454,429],
[483,475,453,0,474,440,435,449],
[440,443,418,417,0,447,457,452],
[455,470,424,451,444,0,468,439],
[465,452,437,456,434,423,0,468],
[474,474,462,442,439,452,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,430,445,457,438,450,461],
[431,0,432,444,449,441,435,443],
[461,459,0,447,455,445,466,460],
[446,447,444,0,429,437,432,448],
[434,442,436,462,0,435,454,451],
[453,450,446,454,456,0,451,436],
[441,456,425,459,437,440,0,458],
[430,448,431,443,440,455,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,414,465,504,496,485,448],
[458,0,398,479,463,451,460,461],
[477,493,0,444,476,542,477,453],
[426,412,447,0,469,500,483,465],
[387,428,415,422,0,467,451,461],
[395,440,349,391,424,0,427,405],
[406,431,414,408,440,464,0,418],
[443,430,438,426,430,486,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,450,458,427,423,402,392],
[447,0,468,444,506,481,419,455],
[441,423,0,442,473,465,431,433],
[433,447,449,0,456,438,432,425],
[464,385,418,435,0,433,441,446],
[468,410,426,453,458,0,460,417],
[489,472,460,459,450,431,0,450],
[499,436,458,466,445,474,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,405,433,454,452,419,413],
[483,0,465,502,491,468,445,488],
[486,426,0,459,470,458,453,469],
[458,389,432,0,496,476,442,481],
[437,400,421,395,0,415,418,431],
[439,423,433,415,476,0,432,425],
[472,446,438,449,473,459,0,454],
[478,403,422,410,460,466,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,386,433,434,415,419,461,438],
[505,0,429,468,474,496,463,447],
[458,462,0,426,425,474,444,428],
[457,423,465,0,426,474,472,463],
[476,417,466,465,0,488,475,453],
[472,395,417,417,403,0,439,445],
[430,428,447,419,416,452,0,454],
[453,444,463,428,438,446,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,434,425,448,452,560,414],
[462,0,427,424,443,516,468,507],
[457,464,0,435,440,482,510,438],
[466,467,456,0,434,442,466,457],
[443,448,451,457,0,413,510,469],
[439,375,409,449,478,0,487,436],
[331,423,381,425,381,404,0,406],
[477,384,453,434,422,455,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,464,441,496,467,441,452],
[437,0,410,417,474,426,438,412],
[427,481,0,457,504,421,429,448],
[450,474,434,0,494,486,463,441],
[395,417,387,397,0,404,438,399],
[424,465,470,405,487,0,416,428],
[450,453,462,428,453,475,0,415],
[439,479,443,450,492,463,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,468,433,495,467,463,463],
[419,0,408,416,477,465,444,458],
[423,483,0,449,489,463,459,473],
[458,475,442,0,451,472,456,453],
[396,414,402,440,0,451,414,409],
[424,426,428,419,440,0,434,460],
[428,447,432,435,477,457,0,464],
[428,433,418,438,482,431,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,481,482,483,480,445,521],
[483,0,482,634,518,443,556,555],
[410,409,0,486,482,519,522,484],
[409,257,405,0,222,407,369,481],
[408,373,409,669,0,445,595,488],
[411,448,372,484,446,0,484,559],
[446,335,369,522,296,407,0,521],
[370,336,407,410,403,332,370,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,447,457,413,453,455,425],
[453,0,448,431,421,458,419,449],
[444,443,0,432,432,460,425,433],
[434,460,459,0,417,396,425,432],
[478,470,459,474,0,452,414,493],
[438,433,431,495,439,0,420,465],
[436,472,466,466,477,471,0,447],
[466,442,458,459,398,426,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,494,509,469,420,514,486],
[409,0,445,388,413,435,376,390],
[397,446,0,471,437,449,455,424],
[382,503,420,0,444,405,447,458],
[422,478,454,447,0,432,474,411],
[471,456,442,486,459,0,508,487],
[377,515,436,444,417,383,0,439],
[405,501,467,433,480,404,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,457,461,447,458,438,458],
[427,0,433,414,447,446,444,433],
[434,458,0,429,428,439,417,439],
[430,477,462,0,446,458,417,430],
[444,444,463,445,0,455,435,448],
[433,445,452,433,436,0,433,446],
[453,447,474,474,456,458,0,445],
[433,458,452,461,443,445,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,416,440,426,458,407,450],
[420,0,433,459,421,441,442,441],
[475,458,0,455,426,433,438,436],
[451,432,436,0,428,431,446,445],
[465,470,465,463,0,432,438,463],
[433,450,458,460,459,0,469,471],
[484,449,453,445,453,422,0,466],
[441,450,455,446,428,420,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,564,529,436,400,458,435,482],
[327,0,422,432,403,475,403,451],
[362,469,0,393,359,416,400,396],
[455,459,498,0,407,459,446,474],
[491,488,532,484,0,457,419,471],
[433,416,475,432,434,0,433,427],
[456,488,491,445,472,458,0,483],
[409,440,495,417,420,464,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,406,403,467,348,382,361],
[494,0,409,444,501,444,441,399],
[485,482,0,439,496,424,461,465],
[488,447,452,0,425,425,421,449],
[424,390,395,466,0,382,412,374],
[543,447,467,466,509,0,446,409],
[509,450,430,470,479,445,0,428],
[530,492,426,442,517,482,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,432,448,422,445,458,442],
[424,0,433,455,457,454,433,433],
[459,458,0,459,447,451,421,424],
[443,436,432,0,436,454,407,420],
[469,434,444,455,0,440,422,420],
[446,437,440,437,451,0,429,458],
[433,458,470,484,469,462,0,486],
[449,458,467,471,471,433,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,324,396,414,410,378,513],
[416,0,417,465,445,432,401,549],
[567,474,0,444,488,444,461,541],
[495,426,447,0,462,437,440,499],
[477,446,403,429,0,434,479,535],
[481,459,447,454,457,0,419,500],
[513,490,430,451,412,472,0,525],
[378,342,350,392,356,391,366,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,443,447,442,455,428,462],
[470,0,461,432,461,434,424,473],
[448,430,0,426,443,423,410,438],
[444,459,465,0,463,435,451,462],
[449,430,448,428,0,441,424,465],
[436,457,468,456,450,0,460,469],
[463,467,481,440,467,431,0,488],
[429,418,453,429,426,422,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,440,454,420,472,447,382],
[453,0,449,490,445,479,429,447],
[451,442,0,458,423,494,423,373],
[437,401,433,0,441,459,405,379],
[471,446,468,450,0,441,451,424],
[419,412,397,432,450,0,398,422],
[444,462,468,486,440,493,0,444],
[509,444,518,512,467,469,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,467,442,440,437,448,458],
[449,0,459,461,433,453,453,463],
[424,432,0,450,424,442,437,439],
[449,430,441,0,448,446,466,422],
[451,458,467,443,0,432,464,459],
[454,438,449,445,459,0,464,451],
[443,438,454,425,427,427,0,448],
[433,428,452,469,432,440,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,440,475,421,437,457,466],
[476,0,453,489,446,443,478,479],
[451,438,0,484,459,467,454,445],
[416,402,407,0,415,421,427,438],
[470,445,432,476,0,462,470,446],
[454,448,424,470,429,0,452,461],
[434,413,437,464,421,439,0,438],
[425,412,446,453,445,430,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,459,457,471,444,470,452],
[410,0,457,459,446,452,442,416],
[432,434,0,445,471,449,451,429],
[434,432,446,0,455,445,436,434],
[420,445,420,436,0,433,418,416],
[447,439,442,446,458,0,434,435],
[421,449,440,455,473,457,0,439],
[439,475,462,457,475,456,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,433,468,482,457,485,404],
[398,0,447,398,417,460,436,446],
[458,444,0,442,455,449,484,459],
[423,493,449,0,480,474,470,474],
[409,474,436,411,0,448,471,430],
[434,431,442,417,443,0,458,426],
[406,455,407,421,420,433,0,415],
[487,445,432,417,461,465,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,485,446,459,449,468,479],
[449,0,476,432,450,480,462,504],
[406,415,0,468,405,468,460,476],
[445,459,423,0,459,451,453,462],
[432,441,486,432,0,432,467,459],
[442,411,423,440,459,0,485,445],
[423,429,431,438,424,406,0,434],
[412,387,415,429,432,446,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,561,484,408,461,462,535],
[456,0,434,514,458,434,487,512],
[330,457,0,535,258,356,404,432],
[407,377,356,0,307,405,408,433],
[483,433,633,584,0,555,535,584],
[430,457,535,486,336,0,483,532],
[429,404,487,483,356,408,0,583],
[356,379,459,458,307,359,308,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,475,465,457,418,447,424],
[420,0,459,408,394,393,412,399],
[416,432,0,432,444,387,396,416],
[426,483,459,0,475,466,439,455],
[434,497,447,416,0,442,429,435],
[473,498,504,425,449,0,462,466],
[444,479,495,452,462,429,0,462],
[467,492,475,436,456,425,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,444,479,447,373,516,478],
[449,0,463,528,489,409,488,489],
[447,428,0,531,449,438,453,479],
[412,363,360,0,400,383,376,428],
[444,402,442,491,0,425,450,431],
[518,482,453,508,466,0,441,498],
[375,403,438,515,441,450,0,427],
[413,402,412,463,460,393,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,441,455,455,433,419,443],
[465,0,489,454,463,469,443,455],
[450,402,0,416,419,448,400,426],
[436,437,475,0,427,446,425,434],
[436,428,472,464,0,460,445,445],
[458,422,443,445,431,0,428,444],
[472,448,491,466,446,463,0,434],
[448,436,465,457,446,447,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,456,430,460,426,453,445],
[437,0,434,429,419,406,421,399],
[435,457,0,415,441,448,452,432],
[461,462,476,0,456,430,478,450],
[431,472,450,435,0,445,466,449],
[465,485,443,461,446,0,440,459],
[438,470,439,413,425,451,0,418],
[446,492,459,441,442,432,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,415,427,448,436,415,396],
[447,0,479,437,429,468,498,453],
[476,412,0,461,471,429,465,461],
[464,454,430,0,457,447,427,437],
[443,462,420,434,0,432,477,410],
[455,423,462,444,459,0,461,444],
[476,393,426,464,414,430,0,421],
[495,438,430,454,481,447,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,449,437,415,408,467,435],
[470,0,431,475,454,463,472,472],
[442,460,0,440,416,431,427,471],
[454,416,451,0,415,447,457,469],
[476,437,475,476,0,458,473,476],
[483,428,460,444,433,0,457,468],
[424,419,464,434,418,434,0,450],
[456,419,420,422,415,423,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,354,383,383,366,392,379,403],
[537,0,401,459,415,446,438,392],
[508,490,0,486,429,466,444,485],
[508,432,405,0,445,433,491,518],
[525,476,462,446,0,424,443,461],
[499,445,425,458,467,0,457,483],
[512,453,447,400,448,434,0,412],
[488,499,406,373,430,408,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,454,471,437,466,477,452],
[472,0,464,467,443,469,477,483],
[437,427,0,446,445,446,460,449],
[420,424,445,0,421,447,446,434],
[454,448,446,470,0,461,460,436],
[425,422,445,444,430,0,434,436],
[414,414,431,445,431,457,0,419],
[439,408,442,457,455,455,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,277,328,327,465,325,328],
[472,0,374,426,472,469,564,378],
[614,517,0,424,473,423,469,331],
[563,465,467,0,424,561,513,375],
[564,419,418,467,0,654,560,515],
[426,422,468,330,237,0,520,474],
[566,327,422,378,331,371,0,381],
[563,513,560,516,376,417,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,416,424,446,446,453,457],
[455,0,453,419,467,481,454,484],
[475,438,0,457,470,474,476,459],
[467,472,434,0,476,486,470,477],
[445,424,421,415,0,464,445,433],
[445,410,417,405,427,0,425,441],
[438,437,415,421,446,466,0,430],
[434,407,432,414,458,450,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,444,457,466,443,470,453],
[450,0,428,429,494,462,427,457],
[447,463,0,438,476,439,444,463],
[434,462,453,0,451,431,462,452],
[425,397,415,440,0,409,431,438],
[448,429,452,460,482,0,453,423],
[421,464,447,429,460,438,0,462],
[438,434,428,439,453,468,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,465,442,447,443,455,476],
[471,0,423,435,489,435,442,477],
[426,468,0,457,485,448,456,452],
[449,456,434,0,478,440,456,470],
[444,402,406,413,0,411,424,446],
[448,456,443,451,480,0,466,464],
[436,449,435,435,467,425,0,464],
[415,414,439,421,445,427,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,432,457,428,409,450,397],
[491,0,444,501,439,420,494,462],
[459,447,0,457,430,415,457,420],
[434,390,434,0,420,375,435,395],
[463,452,461,471,0,426,469,433],
[482,471,476,516,465,0,507,442],
[441,397,434,456,422,384,0,403],
[494,429,471,496,458,449,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,388,433,387,428,369,382],
[481,0,434,461,438,450,447,434],
[503,457,0,458,451,422,419,435],
[458,430,433,0,504,441,431,449],
[504,453,440,387,0,386,398,405],
[463,441,469,450,505,0,418,409],
[522,444,472,460,493,473,0,497],
[509,457,456,442,486,482,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,443,440,436,432,469,453],
[454,0,468,416,419,418,436,462],
[448,423,0,446,449,440,456,467],
[451,475,445,0,450,469,481,472],
[455,472,442,441,0,432,460,450],
[459,473,451,422,459,0,442,444],
[422,455,435,410,431,449,0,435],
[438,429,424,419,441,447,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,456,450,482,486,473,429],
[418,0,461,465,436,454,451,449],
[435,430,0,454,417,478,440,433],
[441,426,437,0,430,465,438,447],
[409,455,474,461,0,457,439,439],
[405,437,413,426,434,0,424,412],
[418,440,451,453,452,467,0,438],
[462,442,458,444,452,479,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,443,456,418,437,463,434],
[449,0,438,431,423,444,452,436],
[448,453,0,456,450,448,457,422],
[435,460,435,0,433,453,462,449],
[473,468,441,458,0,440,465,451],
[454,447,443,438,451,0,462,448],
[428,439,434,429,426,429,0,415],
[457,455,469,442,440,443,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,485,461,458,432,478,469],
[425,0,434,389,465,466,488,469],
[406,457,0,462,481,454,451,458],
[430,502,429,0,493,471,463,459],
[433,426,410,398,0,436,427,436],
[459,425,437,420,455,0,449,457],
[413,403,440,428,464,442,0,432],
[422,422,433,432,455,434,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,423,437,388,451,435,405],
[429,0,456,421,393,429,462,428],
[468,435,0,457,401,443,451,444],
[454,470,434,0,402,435,464,406],
[503,498,490,489,0,482,433,463],
[440,462,448,456,409,0,420,406],
[456,429,440,427,458,471,0,482],
[486,463,447,485,428,485,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,459,453,434,449,469,465],
[449,0,473,442,453,461,434,472],
[432,418,0,438,431,440,452,473],
[438,449,453,0,418,447,426,443],
[457,438,460,473,0,460,484,464],
[442,430,451,444,431,0,437,467],
[422,457,439,465,407,454,0,436],
[426,419,418,448,427,424,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,463,445,455,536,466,455],
[443,0,498,472,444,471,457,496],
[428,393,0,418,443,422,441,440],
[446,419,473,0,449,501,466,492],
[436,447,448,442,0,445,447,449],
[355,420,469,390,446,0,431,445],
[425,434,450,425,444,460,0,462],
[436,395,451,399,442,446,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,452,428,461,468,416,442],
[445,0,429,410,489,471,443,462],
[439,462,0,436,508,462,465,467],
[463,481,455,0,488,534,438,445],
[430,402,383,403,0,412,365,401],
[423,420,429,357,479,0,430,427],
[475,448,426,453,526,461,0,477],
[449,429,424,446,490,464,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,495,424,508,475,495,426],
[420,0,443,424,475,462,488,458],
[396,448,0,387,483,418,470,416],
[467,467,504,0,505,474,460,390],
[383,416,408,386,0,403,457,389],
[416,429,473,417,488,0,455,481],
[396,403,421,431,434,436,0,452],
[465,433,475,501,502,410,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,446,473,438,482,470,450],
[421,0,427,427,451,421,413,435],
[445,464,0,427,442,435,450,447],
[418,464,464,0,427,441,437,436],
[453,440,449,464,0,438,436,455],
[409,470,456,450,453,0,451,451],
[421,478,441,454,455,440,0,465],
[441,456,444,455,436,440,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,465,466,448,453,466,463],
[446,0,472,432,453,477,466,470],
[426,419,0,428,423,428,440,449],
[425,459,463,0,434,466,449,472],
[443,438,468,457,0,455,446,459],
[438,414,463,425,436,0,439,430],
[425,425,451,442,445,452,0,435],
[428,421,442,419,432,461,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,448,444,451,428,451,419],
[445,0,423,436,451,425,442,414],
[443,468,0,452,459,436,456,429],
[447,455,439,0,482,450,456,449],
[440,440,432,409,0,422,434,417],
[463,466,455,441,469,0,478,440],
[440,449,435,435,457,413,0,428],
[472,477,462,442,474,451,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,460,439,465,402,479,466],
[410,0,387,461,450,385,462,404],
[431,504,0,463,468,437,506,418],
[452,430,428,0,437,409,476,405],
[426,441,423,454,0,450,462,455],
[489,506,454,482,441,0,496,454],
[412,429,385,415,429,395,0,414],
[425,487,473,486,436,437,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,463,441,468,448,445,446],
[438,0,432,446,471,455,445,433],
[428,459,0,446,451,446,426,413],
[450,445,445,0,478,433,452,435],
[423,420,440,413,0,431,428,423],
[443,436,445,458,460,0,427,428],
[446,446,465,439,463,464,0,448],
[445,458,478,456,468,463,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,496,462,462,440,445,454],
[440,0,471,434,438,393,415,417],
[395,420,0,416,452,416,414,427],
[429,457,475,0,448,452,443,433],
[429,453,439,443,0,443,448,435],
[451,498,475,439,448,0,439,430],
[446,476,477,448,443,452,0,439],
[437,474,464,458,456,461,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,455,463,446,446,437,463],
[436,0,444,448,450,443,451,476],
[436,447,0,421,406,426,430,454],
[428,443,470,0,424,453,441,454],
[445,441,485,467,0,468,443,480],
[445,448,465,438,423,0,453,435],
[454,440,461,450,448,438,0,480],
[428,415,437,437,411,456,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,428,439,445,437,450,433],
[457,0,447,429,438,449,437,436],
[463,444,0,434,426,446,452,447],
[452,462,457,0,447,458,452,444],
[446,453,465,444,0,443,466,454],
[454,442,445,433,448,0,456,437],
[441,454,439,439,425,435,0,424],
[458,455,444,447,437,454,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,463,449,472,437,455,458],
[450,0,464,441,463,449,461,470],
[428,427,0,415,451,422,441,451],
[442,450,476,0,454,459,459,454],
[419,428,440,437,0,425,455,437],
[454,442,469,432,466,0,453,442],
[436,430,450,432,436,438,0,426],
[433,421,440,437,454,449,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,461,407,437,460,428,437],
[414,0,408,416,450,441,427,422],
[430,483,0,422,447,465,432,435],
[484,475,469,0,445,474,439,466],
[454,441,444,446,0,459,446,429],
[431,450,426,417,432,0,423,424],
[463,464,459,452,445,468,0,431],
[454,469,456,425,462,467,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,451,474,424,438,449,487],
[455,0,472,472,447,442,466,450],
[440,419,0,468,421,423,430,485],
[417,419,423,0,405,426,425,438],
[467,444,470,486,0,470,465,489],
[453,449,468,465,421,0,433,449],
[442,425,461,466,426,458,0,464],
[404,441,406,453,402,442,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,385,491,411,405,496,406],
[506,0,492,509,448,508,407,551],
[506,399,0,570,555,486,488,508],
[400,382,321,0,448,378,470,399],
[480,443,336,443,0,400,423,462],
[486,383,405,513,491,0,403,489],
[395,484,403,421,468,488,0,485],
[485,340,383,492,429,402,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,470,431,441,428,437,447],
[426,0,474,430,403,416,419,399],
[421,417,0,418,413,402,398,428],
[460,461,473,0,425,448,437,429],
[450,488,478,466,0,456,442,431],
[463,475,489,443,435,0,392,447],
[454,472,493,454,449,499,0,445],
[444,492,463,462,460,444,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,459,419,455,448,437,441],
[454,0,452,454,459,439,460,469],
[432,439,0,436,447,446,437,428],
[472,437,455,0,468,457,440,477],
[436,432,444,423,0,453,429,446],
[443,452,445,434,438,0,430,444],
[454,431,454,451,462,461,0,438],
[450,422,463,414,445,447,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,477,444,426,460,418,456],
[455,0,480,435,458,461,474,483],
[414,411,0,422,428,469,456,461],
[447,456,469,0,427,444,444,477],
[465,433,463,464,0,455,468,463],
[431,430,422,447,436,0,452,471],
[473,417,435,447,423,439,0,476],
[435,408,430,414,428,420,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,434,453,445,469,439,454],
[446,0,456,442,415,451,460,452],
[457,435,0,445,447,457,471,458],
[438,449,446,0,439,460,461,466],
[446,476,444,452,0,453,466,437],
[422,440,434,431,438,0,449,438],
[452,431,420,430,425,442,0,419],
[437,439,433,425,454,453,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,460,485,414,428,441,468],
[485,0,440,473,426,446,465,475],
[431,451,0,471,449,416,464,466],
[406,418,420,0,402,437,444,489],
[477,465,442,489,0,453,471,468],
[463,445,475,454,438,0,434,471],
[450,426,427,447,420,457,0,474],
[423,416,425,402,423,420,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,441,418,437,410,434,435],
[460,0,436,424,473,451,477,449],
[450,455,0,438,439,431,420,425],
[473,467,453,0,454,420,435,425],
[454,418,452,437,0,425,445,413],
[481,440,460,471,466,0,453,431],
[457,414,471,456,446,438,0,417],
[456,442,466,466,478,460,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,465,423,438,466,423,434],
[459,0,475,436,434,442,442,460],
[426,416,0,412,419,441,441,438],
[468,455,479,0,438,444,455,443],
[453,457,472,453,0,418,427,457],
[425,449,450,447,473,0,458,437],
[468,449,450,436,464,433,0,449],
[457,431,453,448,434,454,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,368,397,435,426,404,385,433],
[523,0,489,505,454,477,420,500],
[494,402,0,482,449,492,464,540],
[456,386,409,0,457,468,395,446],
[465,437,442,434,0,428,430,448],
[487,414,399,423,463,0,465,466],
[506,471,427,496,461,426,0,500],
[458,391,351,445,443,425,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,519,476,474,473,433,466],
[439,0,453,414,439,460,446,440],
[372,438,0,430,405,432,431,419],
[415,477,461,0,438,493,437,447],
[417,452,486,453,0,455,440,473],
[418,431,459,398,436,0,418,443],
[458,445,460,454,451,473,0,450],
[425,451,472,444,418,448,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,438,461,447,446,464,456],
[406,0,443,446,452,443,447,450],
[453,448,0,499,466,461,445,455],
[430,445,392,0,451,411,414,424],
[444,439,425,440,0,442,440,440],
[445,448,430,480,449,0,444,435],
[427,444,446,477,451,447,0,463],
[435,441,436,467,451,456,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,449,453,392,424,423,414],
[428,0,425,451,422,411,457,407],
[442,466,0,443,399,425,442,429],
[438,440,448,0,430,407,429,430],
[499,469,492,461,0,435,460,473],
[467,480,466,484,456,0,451,436],
[468,434,449,462,431,440,0,442],
[477,484,462,461,418,455,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,383,356,451,419,435,395],
[484,0,437,443,445,464,474,456],
[508,454,0,434,491,418,431,418],
[535,448,457,0,501,492,435,486],
[440,446,400,390,0,443,458,468],
[472,427,473,399,448,0,434,421],
[456,417,460,456,433,457,0,460],
[496,435,473,405,423,470,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,488,457,438,415,443,453],
[418,0,444,438,400,411,410,433],
[403,447,0,466,447,443,454,463],
[434,453,425,0,459,431,435,449],
[453,491,444,432,0,447,438,481],
[476,480,448,460,444,0,454,467],
[448,481,437,456,453,437,0,440],
[438,458,428,442,410,424,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,485,449,457,479,444,442],
[451,0,473,440,463,479,449,430],
[406,418,0,419,445,434,418,400],
[442,451,472,0,465,471,448,463],
[434,428,446,426,0,453,429,424],
[412,412,457,420,438,0,432,422],
[447,442,473,443,462,459,0,452],
[449,461,491,428,467,469,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,425,430,420,431,435,419],
[486,0,452,448,443,448,444,441],
[466,439,0,437,456,441,436,434],
[461,443,454,0,428,421,431,450],
[471,448,435,463,0,441,442,449],
[460,443,450,470,450,0,450,448],
[456,447,455,460,449,441,0,432],
[472,450,457,441,442,443,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,422,418,431,427,419,414],
[485,0,425,437,483,460,445,457],
[469,466,0,445,477,441,465,452],
[473,454,446,0,468,435,433,440],
[460,408,414,423,0,401,411,415],
[464,431,450,456,490,0,443,446],
[472,446,426,458,480,448,0,454],
[477,434,439,451,476,445,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,443,452,450,463,450,460],
[434,0,420,449,442,454,449,457],
[448,471,0,443,457,473,469,461],
[439,442,448,0,461,447,456,445],
[441,449,434,430,0,439,459,454],
[428,437,418,444,452,0,448,444],
[441,442,422,435,432,443,0,450],
[431,434,430,446,437,447,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,465,470,431,478,435,463],
[442,0,458,475,464,502,471,459],
[426,433,0,480,478,462,451,437],
[421,416,411,0,429,445,425,444],
[460,427,413,462,0,469,427,448],
[413,389,429,446,422,0,427,438],
[456,420,440,466,464,464,0,458],
[428,432,454,447,443,453,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,444,438,454,424,462,453],
[445,0,431,414,428,406,446,442],
[447,460,0,454,448,446,445,469],
[453,477,437,0,450,430,459,449],
[437,463,443,441,0,453,460,445],
[467,485,445,461,438,0,471,466],
[429,445,446,432,431,420,0,452],
[438,449,422,442,446,425,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,473,449,484,439,445,440],
[432,0,452,447,465,445,452,438],
[418,439,0,444,471,448,461,429],
[442,444,447,0,453,425,445,429],
[407,426,420,438,0,404,446,421],
[452,446,443,466,487,0,438,441],
[446,439,430,446,445,453,0,456],
[451,453,462,462,470,450,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,444,457,432,460,467,440],
[439,0,444,451,452,445,439,442],
[447,447,0,455,425,452,449,421],
[434,440,436,0,415,446,432,421],
[459,439,466,476,0,473,474,456],
[431,446,439,445,418,0,447,420],
[424,452,442,459,417,444,0,431],
[451,449,470,470,435,471,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,568,385,405,432,365,431],
[455,0,468,454,420,465,382,480],
[323,423,0,304,388,381,327,401],
[506,437,587,0,560,540,444,453],
[486,471,503,331,0,452,444,423],
[459,426,510,351,439,0,446,409],
[526,509,564,447,447,445,0,459],
[460,411,490,438,468,482,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,667,891,667,891,222,445,445],
[224,0,669,669,891,446,669,669],
[0,222,0,445,444,0,222,0],
[224,222,446,0,446,0,222,224],
[0,0,447,445,0,0,222,0],
[669,445,891,891,891,0,891,669],
[446,222,669,669,669,0,0,447],
[446,222,891,667,891,222,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,411,465,443,445,421,444],
[431,0,444,435,414,417,447,443],
[480,447,0,450,457,475,428,455],
[426,456,441,0,448,445,447,403],
[448,477,434,443,0,448,433,415],
[446,474,416,446,443,0,438,435],
[470,444,463,444,458,453,0,463],
[447,448,436,488,476,456,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,498,502,416,432,458,462],
[470,0,455,477,432,441,440,450],
[393,436,0,433,458,457,422,448],
[389,414,458,0,430,453,426,432],
[475,459,433,461,0,478,456,463],
[459,450,434,438,413,0,418,482],
[433,451,469,465,435,473,0,431],
[429,441,443,459,428,409,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,413,383,429,401,422,392],
[438,0,438,391,456,418,445,414],
[478,453,0,448,503,415,461,459],
[508,500,443,0,512,474,484,452],
[462,435,388,379,0,423,441,398],
[490,473,476,417,468,0,475,441],
[469,446,430,407,450,416,0,464],
[499,477,432,439,493,450,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,429,452,469,452,442,436],
[428,0,419,455,438,434,460,443],
[462,472,0,481,443,445,455,446],
[439,436,410,0,421,447,446,445],
[422,453,448,470,0,442,444,448],
[439,457,446,444,449,0,448,463],
[449,431,436,445,447,443,0,452],
[455,448,445,446,443,428,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,431,454,432,460,420,461],
[424,0,431,444,410,478,408,422],
[460,460,0,470,429,482,448,476],
[437,447,421,0,453,467,449,458],
[459,481,462,438,0,459,445,473],
[431,413,409,424,432,0,420,424],
[471,483,443,442,446,471,0,468],
[430,469,415,433,418,467,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,466,442,437,443,422,463],
[452,0,467,452,437,466,437,454],
[425,424,0,437,434,435,436,455],
[449,439,454,0,460,456,456,462],
[454,454,457,431,0,455,439,443],
[448,425,456,435,436,0,435,451],
[469,454,455,435,452,456,0,482],
[428,437,436,429,448,440,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,450,465,450,446,444,461],
[438,0,435,458,424,459,450,428],
[441,456,0,442,444,442,441,442],
[426,433,449,0,411,453,426,416],
[441,467,447,480,0,462,439,465],
[445,432,449,438,429,0,433,418],
[447,441,450,465,452,458,0,430],
[430,463,449,475,426,473,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,455,467,486,441,439,449],
[449,0,456,474,488,453,462,444],
[436,435,0,471,448,442,431,442],
[424,417,420,0,465,433,436,428],
[405,403,443,426,0,424,419,420],
[450,438,449,458,467,0,463,446],
[452,429,460,455,472,428,0,443],
[442,447,449,463,471,445,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,450,472,464,471,439,444],
[435,0,484,476,465,476,452,460],
[441,407,0,431,437,436,444,446],
[419,415,460,0,428,482,425,456],
[427,426,454,463,0,432,441,432],
[420,415,455,409,459,0,448,439],
[452,439,447,466,450,443,0,434],
[447,431,445,435,459,452,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,361,457,429,434,473,455,445],
[530,0,459,439,469,494,499,483],
[434,432,0,412,450,455,478,465],
[462,452,479,0,438,484,499,511],
[457,422,441,453,0,487,475,492],
[418,397,436,407,404,0,486,447],
[436,392,413,392,416,405,0,418],
[446,408,426,380,399,444,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,495,460,490,440,482,473],
[442,0,464,448,539,466,491,505],
[396,427,0,403,488,426,428,445],
[431,443,488,0,488,468,468,472],
[401,352,403,403,0,406,411,458],
[451,425,465,423,485,0,480,467],
[409,400,463,423,480,411,0,445],
[418,386,446,419,433,424,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,552,427,456,400,551,550],
[403,0,493,524,459,431,462,494],
[339,398,0,367,332,398,462,489],
[464,367,524,0,400,523,553,488],
[435,432,559,491,0,434,497,528],
[491,460,493,368,457,0,523,582],
[340,429,429,338,394,368,0,459],
[341,397,402,403,363,309,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,433,464,439,444,446,435],
[475,0,472,448,477,463,424,449],
[458,419,0,457,430,465,436,444],
[427,443,434,0,483,459,431,453],
[452,414,461,408,0,461,411,434],
[447,428,426,432,430,0,399,446],
[445,467,455,460,480,492,0,480],
[456,442,447,438,457,445,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,415,474,433,426,420,442],
[455,0,408,498,456,425,433,420],
[476,483,0,515,486,494,453,445],
[417,393,376,0,412,412,413,418],
[458,435,405,479,0,440,411,440],
[465,466,397,479,451,0,422,431],
[471,458,438,478,480,469,0,453],
[449,471,446,473,451,460,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,364,396,414,427,411,373,397],
[527,0,471,480,508,439,462,494],
[495,420,0,467,456,453,442,470],
[477,411,424,0,470,424,423,424],
[464,383,435,421,0,423,405,410],
[480,452,438,467,468,0,455,460],
[518,429,449,468,486,436,0,460],
[494,397,421,467,481,431,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,451,431,431,437,470,457],
[454,0,462,483,406,471,443,450],
[440,429,0,470,415,421,445,442],
[460,408,421,0,451,456,427,463],
[460,485,476,440,0,471,463,460],
[454,420,470,435,420,0,434,443],
[421,448,446,464,428,457,0,441],
[434,441,449,428,431,448,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,455,435,497,422,425,488],
[375,0,397,419,513,395,452,397],
[436,494,0,465,479,469,525,513],
[456,472,426,0,550,426,456,458],
[394,378,412,341,0,441,395,423],
[469,496,422,465,450,0,559,496],
[466,439,366,435,496,332,0,423],
[403,494,378,433,468,395,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,447,452,441,439,428,453],
[498,0,458,445,461,452,444,459],
[444,433,0,455,448,405,384,430],
[439,446,436,0,426,438,461,412],
[450,430,443,465,0,462,420,454],
[452,439,486,453,429,0,448,470],
[463,447,507,430,471,443,0,472],
[438,432,461,479,437,421,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,437,431,468,478,464,456],
[444,0,432,447,480,480,471,452],
[454,459,0,435,470,464,442,443],
[460,444,456,0,496,464,488,457],
[423,411,421,395,0,457,441,407],
[413,411,427,427,434,0,428,444],
[427,420,449,403,450,463,0,440],
[435,439,448,434,484,447,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,445,509,428,468,467,432],
[420,0,446,505,449,477,448,453],
[446,445,0,503,441,466,460,394],
[382,386,388,0,373,405,395,384],
[463,442,450,518,0,487,495,454],
[423,414,425,486,404,0,438,440],
[424,443,431,496,396,453,0,427],
[459,438,497,507,437,451,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,439,460,459,462,436,433],
[476,0,456,462,456,481,426,449],
[452,435,0,432,468,466,416,420],
[431,429,459,0,433,466,429,394],
[432,435,423,458,0,439,446,438],
[429,410,425,425,452,0,434,402],
[455,465,475,462,445,457,0,445],
[458,442,471,497,453,489,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,426,408,432,415,463,372],
[475,0,445,440,448,424,456,470],
[465,446,0,405,462,447,475,427],
[483,451,486,0,482,471,513,442],
[459,443,429,409,0,430,446,450],
[476,467,444,420,461,0,487,452],
[428,435,416,378,445,404,0,437],
[519,421,464,449,441,439,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,385,403,416,434,436,400],
[473,0,441,438,436,430,432,442],
[506,450,0,454,476,473,484,438],
[488,453,437,0,408,464,447,416],
[475,455,415,483,0,452,482,472],
[457,461,418,427,439,0,449,467],
[455,459,407,444,409,442,0,435],
[491,449,453,475,419,424,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,421,424,446,445,415,419],
[475,0,440,437,468,440,442,433],
[470,451,0,435,464,468,437,450],
[467,454,456,0,484,474,461,422],
[445,423,427,407,0,436,452,424],
[446,451,423,417,455,0,448,437],
[476,449,454,430,439,443,0,441],
[472,458,441,469,467,454,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,443,431,405,429,438,462],
[450,0,442,442,455,448,452,463],
[448,449,0,438,429,454,443,462],
[460,449,453,0,430,454,452,461],
[486,436,462,461,0,463,456,471],
[462,443,437,437,428,0,445,425],
[453,439,448,439,435,446,0,444],
[429,428,429,430,420,466,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,471,405,432,463,455],
[441,0,465,436,390,415,422,472],
[446,426,0,453,428,452,429,474],
[420,455,438,0,462,457,445,454],
[486,501,463,429,0,432,445,482],
[459,476,439,434,459,0,446,447],
[428,469,462,446,446,445,0,473],
[436,419,417,437,409,444,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,432,462,448,531,506,422],
[424,0,400,449,395,495,444,413],
[459,491,0,486,432,504,475,455],
[429,442,405,0,402,452,487,399],
[443,496,459,489,0,542,495,482],
[360,396,387,439,349,0,439,400],
[385,447,416,404,396,452,0,412],
[469,478,436,492,409,491,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,454,453,450,490,441,466],
[433,0,460,440,439,493,462,473],
[437,431,0,461,452,483,458,461],
[438,451,430,0,435,477,482,445],
[441,452,439,456,0,465,474,466],
[401,398,408,414,426,0,414,415],
[450,429,433,409,417,477,0,463],
[425,418,430,446,425,476,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,446,469,452,447,441,464],
[443,0,455,460,461,447,444,471],
[445,436,0,449,459,451,449,416],
[422,431,442,0,419,434,447,423],
[439,430,432,472,0,444,424,449],
[444,444,440,457,447,0,442,427],
[450,447,442,444,467,449,0,455],
[427,420,475,468,442,464,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,434,455,432,435,428,434],
[451,0,465,457,462,456,453,439],
[457,426,0,469,467,444,454,444],
[436,434,422,0,481,445,440,433],
[459,429,424,410,0,443,439,438],
[456,435,447,446,448,0,432,419],
[463,438,437,451,452,459,0,447],
[457,452,447,458,453,472,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,442,452,463,435,432,448],
[448,0,449,465,463,464,445,456],
[449,442,0,440,445,432,444,440],
[439,426,451,0,456,431,433,434],
[428,428,446,435,0,444,400,424],
[456,427,459,460,447,0,454,443],
[459,446,447,458,491,437,0,446],
[443,435,451,457,467,448,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,444,466,460,450,458,458],
[448,0,445,457,465,468,445,437],
[447,446,0,464,456,460,444,454],
[425,434,427,0,454,450,438,441],
[431,426,435,437,0,455,453,444],
[441,423,431,441,436,0,442,459],
[433,446,447,453,438,449,0,435],
[433,454,437,450,447,432,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,424,435,452,428,427,418],
[482,0,420,437,446,429,426,423],
[467,471,0,438,458,447,442,416],
[456,454,453,0,443,442,417,461],
[439,445,433,448,0,421,422,421],
[463,462,444,449,470,0,456,461],
[464,465,449,474,469,435,0,428],
[473,468,475,430,470,430,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,299,396,495,396,595,99,298],
[592,0,297,594,395,594,296,297],
[495,594,0,693,297,495,395,594],
[396,297,198,0,396,395,197,297],
[495,496,594,495,0,693,495,396],
[296,297,396,496,198,0,197,396],
[792,595,496,694,396,694,0,497],
[593,594,297,594,495,495,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,433,463,466,434,452,462],
[437,0,449,449,472,436,430,448],
[458,442,0,462,457,443,461,444],
[428,442,429,0,473,433,444,448],
[425,419,434,418,0,418,423,435],
[457,455,448,458,473,0,440,447],
[439,461,430,447,468,451,0,443],
[429,443,447,443,456,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,428,458,441,436,446,438],
[473,0,448,488,472,509,457,436],
[463,443,0,461,446,436,457,448],
[433,403,430,0,456,447,432,440],
[450,419,445,435,0,433,439,435],
[455,382,455,444,458,0,456,419],
[445,434,434,459,452,435,0,436],
[453,455,443,451,456,472,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,438,446,477,467,484,452],
[426,0,444,447,483,441,462,465],
[453,447,0,467,492,440,451,473],
[445,444,424,0,476,426,465,448],
[414,408,399,415,0,435,453,390],
[424,450,451,465,456,0,467,474],
[407,429,440,426,438,424,0,408],
[439,426,418,443,501,417,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,431,438,398,398,427,449],
[437,0,413,400,423,455,375,449],
[460,478,0,444,411,455,434,423],
[453,491,447,0,423,491,389,498],
[493,468,480,468,0,504,417,500],
[493,436,436,400,387,0,475,371],
[464,516,457,502,474,416,0,440],
[442,442,468,393,391,520,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,369,443,468,439,375,391],
[452,0,348,491,476,473,408,398],
[522,543,0,499,504,521,428,452],
[448,400,392,0,468,482,417,406],
[423,415,387,423,0,425,422,358],
[452,418,370,409,466,0,380,383],
[516,483,463,474,469,511,0,424],
[500,493,439,485,533,508,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,458,433,458,477,482,454],
[452,0,448,412,450,477,454,480],
[433,443,0,457,444,454,456,395],
[458,479,434,0,449,458,463,452],
[433,441,447,442,0,430,449,440],
[414,414,437,433,461,0,439,410],
[409,437,435,428,442,452,0,428],
[437,411,496,439,451,481,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,413,448,431,433,427,440],
[454,0,431,429,426,463,460,458],
[478,460,0,445,416,461,446,453],
[443,462,446,0,454,470,443,451],
[460,465,475,437,0,465,472,442],
[458,428,430,421,426,0,449,431],
[464,431,445,448,419,442,0,435],
[451,433,438,440,449,460,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,509,477,518,435,438,450],
[440,0,488,431,446,376,414,435],
[382,403,0,443,363,424,414,378],
[414,460,448,0,398,425,404,325],
[373,445,528,493,0,407,395,408],
[456,515,467,466,484,0,430,419],
[453,477,477,487,496,461,0,427],
[441,456,513,566,483,472,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,464,478,453,442,451,460],
[417,0,438,454,485,446,451,456],
[427,453,0,457,430,414,433,460],
[413,437,434,0,401,413,425,436],
[438,406,461,490,0,438,436,475],
[449,445,477,478,453,0,453,483],
[440,440,458,466,455,438,0,456],
[431,435,431,455,416,408,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,438,474,399,434,440,427],
[446,0,491,527,411,332,419,393],
[453,400,0,537,405,402,391,358],
[417,364,354,0,386,386,373,363],
[492,480,486,505,0,481,525,442],
[457,559,489,505,410,0,536,464],
[451,472,500,518,366,355,0,396],
[464,498,533,528,449,427,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,486,494,476,471,441,471],
[418,0,472,436,459,466,458,475],
[405,419,0,422,402,447,431,455],
[397,455,469,0,433,455,433,462],
[415,432,489,458,0,440,414,466],
[420,425,444,436,451,0,428,462],
[450,433,460,458,477,463,0,458],
[420,416,436,429,425,429,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,452,436,424,431,445,458],
[455,0,442,453,446,446,457,450],
[439,449,0,438,450,450,438,439],
[455,438,453,0,439,436,440,446],
[467,445,441,452,0,451,472,442],
[460,445,441,455,440,0,449,462],
[446,434,453,451,419,442,0,439],
[433,441,452,445,449,429,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,450,431,438,431,414,430],
[445,0,465,426,423,431,417,426],
[441,426,0,409,412,431,411,406],
[460,465,482,0,466,457,459,439],
[453,468,479,425,0,434,419,446],
[460,460,460,434,457,0,449,438],
[477,474,480,432,472,442,0,435],
[461,465,485,452,445,453,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,449,405,401,427,440,437],
[467,0,474,461,445,492,487,483],
[442,417,0,446,434,458,451,462],
[486,430,445,0,456,471,442,489],
[490,446,457,435,0,495,452,460],
[464,399,433,420,396,0,442,433],
[451,404,440,449,439,449,0,463],
[454,408,429,402,431,458,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,403,426,448,423,458,433],
[453,0,436,464,416,445,433,450],
[488,455,0,461,449,441,446,468],
[465,427,430,0,442,434,444,470],
[443,475,442,449,0,448,451,454],
[468,446,450,457,443,0,455,439],
[433,458,445,447,440,436,0,469],
[458,441,423,421,437,452,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,375,513,432,431,411,448],
[463,0,492,566,443,510,407,443],
[516,399,0,515,484,513,516,502],
[378,325,376,0,360,380,394,345],
[459,448,407,531,0,512,452,463],
[460,381,378,511,379,0,380,413],
[480,484,375,497,439,511,0,496],
[443,448,389,546,428,478,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,452,459,445,468,447,453],
[430,0,453,443,464,483,452,450],
[439,438,0,421,451,460,435,453],
[432,448,470,0,439,461,452,426],
[446,427,440,452,0,455,458,443],
[423,408,431,430,436,0,459,426],
[444,439,456,439,433,432,0,438],
[438,441,438,465,448,465,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,455,442,446,477,466,455],
[433,0,443,445,440,467,448,407],
[436,448,0,449,440,479,471,441],
[449,446,442,0,441,462,461,438],
[445,451,451,450,0,453,471,432],
[414,424,412,429,438,0,449,411],
[425,443,420,430,420,442,0,417],
[436,484,450,453,459,480,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,364,457,454,447,437,385,437],
[527,0,476,496,468,429,475,461],
[434,415,0,448,393,398,425,443],
[437,395,443,0,442,467,411,417],
[444,423,498,449,0,420,414,467],
[454,462,493,424,471,0,444,448],
[506,416,466,480,477,447,0,466],
[454,430,448,474,424,443,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,451,439,437,371,454,423],
[419,0,443,438,455,408,450,424],
[440,448,0,444,399,410,441,445],
[452,453,447,0,425,450,441,433],
[454,436,492,466,0,398,512,455],
[520,483,481,441,493,0,512,446],
[437,441,450,450,379,379,0,428],
[468,467,446,458,436,445,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,427,450,456,436,438,459],
[466,0,456,472,463,462,444,488],
[464,435,0,466,471,453,455,486],
[441,419,425,0,454,441,439,484],
[435,428,420,437,0,452,442,475],
[455,429,438,450,439,0,434,471],
[453,447,436,452,449,457,0,457],
[432,403,405,407,416,420,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,421,431,436,452,444,453],
[454,0,441,446,461,477,461,462],
[470,450,0,416,451,477,458,471],
[460,445,475,0,431,449,453,471],
[455,430,440,460,0,453,444,464],
[439,414,414,442,438,0,453,470],
[447,430,433,438,447,438,0,450],
[438,429,420,420,427,421,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,437,410,445,443,438,399],
[455,0,442,424,426,456,440,422],
[454,449,0,425,446,432,440,453],
[481,467,466,0,467,467,464,442],
[446,465,445,424,0,442,465,442],
[448,435,459,424,449,0,463,436],
[453,451,451,427,426,428,0,442],
[492,469,438,449,449,455,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,511,458,460,480,431,466,495],
[380,0,443,411,424,429,430,427],
[433,448,0,427,408,406,392,446],
[431,480,464,0,421,433,459,458],
[411,467,483,470,0,458,488,497],
[460,462,485,458,433,0,463,461],
[425,461,499,432,403,428,0,470],
[396,464,445,433,394,430,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,531,485,512,580,564,441,458],
[360,0,433,400,447,493,435,495],
[406,458,0,439,459,529,408,372],
[379,491,452,0,487,489,437,419],
[311,444,432,404,0,422,423,445],
[327,398,362,402,469,0,420,388],
[450,456,483,454,468,471,0,402],
[433,396,519,472,446,503,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,481,464,473,447,470,496],
[456,0,456,450,458,423,456,454],
[410,435,0,438,424,426,451,454],
[427,441,453,0,456,449,435,448],
[418,433,467,435,0,444,451,496],
[444,468,465,442,447,0,456,477],
[421,435,440,456,440,435,0,453],
[395,437,437,443,395,414,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,416,440,455,457,467,440],
[441,0,436,433,470,451,430,434],
[475,455,0,484,438,495,485,482],
[451,458,407,0,456,457,427,445],
[436,421,453,435,0,457,439,465],
[434,440,396,434,434,0,408,460],
[424,461,406,464,452,483,0,459],
[451,457,409,446,426,431,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,464,448,429,418,426,435],
[464,0,461,462,434,449,450,449],
[427,430,0,447,430,424,436,431],
[443,429,444,0,438,434,451,453],
[462,457,461,453,0,440,446,437],
[473,442,467,457,451,0,465,453],
[465,441,455,440,445,426,0,441],
[456,442,460,438,454,438,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,442,473,435,448,464,435],
[446,0,444,486,432,437,485,429],
[449,447,0,476,429,433,475,448],
[418,405,415,0,404,402,455,424],
[456,459,462,487,0,464,483,442],
[443,454,458,489,427,0,464,443],
[427,406,416,436,408,427,0,406],
[456,462,443,467,449,448,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,433,426,434,447,438,446],
[441,0,413,445,441,445,440,453],
[458,478,0,462,453,463,445,472],
[465,446,429,0,444,441,444,434],
[457,450,438,447,0,460,457,457],
[444,446,428,450,431,0,442,436],
[453,451,446,447,434,449,0,459],
[445,438,419,457,434,455,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,442,481,453,437,451,455],
[431,0,445,454,460,422,429,460],
[449,446,0,471,428,440,427,441],
[410,437,420,0,424,440,429,427],
[438,431,463,467,0,421,431,467],
[454,469,451,451,470,0,436,445],
[440,462,464,462,460,455,0,462],
[436,431,450,464,424,446,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,426,435,457,454,419,447],
[463,0,449,448,455,451,435,452],
[465,442,0,457,454,463,459,451],
[456,443,434,0,430,430,439,437],
[434,436,437,461,0,440,410,441],
[437,440,428,461,451,0,456,457],
[472,456,432,452,481,435,0,451],
[444,439,440,454,450,434,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,457,473,409,456,446,408],
[454,0,405,476,390,388,457,455],
[434,486,0,471,447,430,425,439],
[418,415,420,0,381,430,439,439],
[482,501,444,510,0,476,532,449],
[435,503,461,461,415,0,481,471],
[445,434,466,452,359,410,0,409],
[483,436,452,452,442,420,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,460,433,448,455,473,455],
[438,0,461,464,416,443,498,452],
[431,430,0,447,432,413,451,473],
[458,427,444,0,445,461,484,436],
[443,475,459,446,0,443,478,457],
[436,448,478,430,448,0,477,465],
[418,393,440,407,413,414,0,431],
[436,439,418,455,434,426,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,465,423,412,449,468,418],
[425,0,488,464,408,425,452,468],
[426,403,0,443,398,445,435,365],
[468,427,448,0,469,473,479,428],
[479,483,493,422,0,461,487,447],
[442,466,446,418,430,0,435,448],
[423,439,456,412,404,456,0,430],
[473,423,526,463,444,443,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,444,452,447,445,435,471],
[408,0,419,447,403,418,397,421],
[447,472,0,481,439,461,435,440],
[439,444,410,0,417,432,433,443],
[444,488,452,474,0,440,449,489],
[446,473,430,459,451,0,412,465],
[456,494,456,458,442,479,0,481],
[420,470,451,448,402,426,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,433,442,427,449,427,422],
[455,0,432,453,424,464,425,408],
[458,459,0,483,439,463,459,447],
[449,438,408,0,423,475,447,400],
[464,467,452,468,0,466,455,432],
[442,427,428,416,425,0,415,395],
[464,466,432,444,436,476,0,413],
[469,483,444,491,459,496,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,453,472,428,497,464,448],
[419,0,426,452,412,460,418,431],
[438,465,0,469,442,466,435,450],
[419,439,422,0,394,448,422,416],
[463,479,449,497,0,495,439,442],
[394,431,425,443,396,0,414,393],
[427,473,456,469,452,477,0,449],
[443,460,441,475,449,498,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,444,419,453,447,429,426],
[445,0,447,399,424,441,369,415],
[447,444,0,432,436,416,424,415],
[472,492,459,0,455,414,462,423],
[438,467,455,436,0,429,435,429],
[444,450,475,477,462,0,439,430],
[462,522,467,429,456,452,0,466],
[465,476,476,468,462,461,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,437,424,396,420,398,404],
[500,0,499,481,423,479,468,446],
[454,392,0,444,412,426,421,414],
[467,410,447,0,420,437,418,384],
[495,468,479,471,0,447,466,426],
[471,412,465,454,444,0,447,402],
[493,423,470,473,425,444,0,426],
[487,445,477,507,465,489,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,444,443,431,435,453,472],
[411,0,424,408,429,432,432,438],
[447,467,0,433,451,443,446,449],
[448,483,458,0,435,473,432,471],
[460,462,440,456,0,442,453,473],
[456,459,448,418,449,0,447,460],
[438,459,445,459,438,444,0,472],
[419,453,442,420,418,431,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,458,428,456,456,451,452],
[419,0,440,439,446,463,439,437],
[433,451,0,446,455,464,446,446],
[463,452,445,0,441,465,443,447],
[435,445,436,450,0,450,434,450],
[435,428,427,426,441,0,419,442],
[440,452,445,448,457,472,0,452],
[439,454,445,444,441,449,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,391,420,409,435,443,429],
[441,0,447,417,441,418,430,450],
[500,444,0,439,450,442,449,461],
[471,474,452,0,441,486,449,466],
[482,450,441,450,0,436,458,469],
[456,473,449,405,455,0,432,446],
[448,461,442,442,433,459,0,442],
[462,441,430,425,422,445,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,471,445,416,455,455,460],
[452,0,453,454,431,440,455,477],
[420,438,0,434,422,408,438,479],
[446,437,457,0,426,433,441,443],
[475,460,469,465,0,431,448,452],
[436,451,483,458,460,0,478,451],
[436,436,453,450,443,413,0,453],
[431,414,412,448,439,440,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,437,462,464,459,443,469],
[468,0,419,446,464,475,465,461],
[454,472,0,439,462,452,453,485],
[429,445,452,0,459,450,476,454],
[427,427,429,432,0,450,465,490],
[432,416,439,441,441,0,470,463],
[448,426,438,415,426,421,0,442],
[422,430,406,437,401,428,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,345,407,379,428,361,405,366],
[546,0,481,451,463,465,467,382],
[484,410,0,426,397,420,428,419],
[512,440,465,0,512,425,465,463],
[463,428,494,379,0,395,377,413],
[530,426,471,466,496,0,444,451],
[486,424,463,426,514,447,0,486],
[525,509,472,428,478,440,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,419,431,426,417,420,429],
[468,0,454,442,443,452,467,450],
[472,437,0,456,465,447,452,457],
[460,449,435,0,441,448,468,439],
[465,448,426,450,0,448,429,451],
[474,439,444,443,443,0,444,448],
[471,424,439,423,462,447,0,428],
[462,441,434,452,440,443,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,554,594,514,513,426,555,640],
[337,0,510,552,386,471,468,468],
[297,381,0,468,429,425,554,597],
[377,339,423,0,509,383,553,593],
[378,505,462,382,0,379,507,675],
[465,420,466,508,512,0,679,637],
[336,423,337,338,384,212,0,465],
[251,423,294,298,216,254,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,457,432,457,452,450,445],
[437,0,429,460,483,444,473,456],
[434,462,0,446,497,472,496,474],
[459,431,445,0,479,459,476,466],
[434,408,394,412,0,456,444,422],
[439,447,419,432,435,0,456,425],
[441,418,395,415,447,435,0,433],
[446,435,417,425,469,466,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,416,424,440,470,418,448],
[457,0,452,420,443,458,415,436],
[475,439,0,446,452,472,433,452],
[467,471,445,0,474,495,435,477],
[451,448,439,417,0,471,446,435],
[421,433,419,396,420,0,397,408],
[473,476,458,456,445,494,0,441],
[443,455,439,414,456,483,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,475,523,476,426,496,445],
[420,0,439,480,457,407,442,419],
[416,452,0,491,452,430,475,432],
[368,411,400,0,402,416,428,386],
[415,434,439,489,0,440,458,447],
[465,484,461,475,451,0,462,441],
[395,449,416,463,433,429,0,421],
[446,472,459,505,444,450,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,445,437,442,440,427,426],
[458,0,451,435,444,442,461,445],
[446,440,0,443,450,460,425,447],
[454,456,448,0,458,441,459,445],
[449,447,441,433,0,446,451,444],
[451,449,431,450,445,0,459,445],
[464,430,466,432,440,432,0,427],
[465,446,444,446,447,446,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,437,457,441,416,448,437],
[453,0,455,467,441,454,454,445],
[454,436,0,445,455,445,465,468],
[434,424,446,0,429,423,448,453],
[450,450,436,462,0,430,460,463],
[475,437,446,468,461,0,483,470],
[443,437,426,443,431,408,0,430],
[454,446,423,438,428,421,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,442,434,426,459,420,447],
[441,0,434,434,418,457,421,428],
[449,457,0,446,421,466,430,423],
[457,457,445,0,438,444,426,427],
[465,473,470,453,0,479,440,434],
[432,434,425,447,412,0,424,432],
[471,470,461,465,451,467,0,443],
[444,463,468,464,457,459,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,542,416,454,435,427,543],
[489,0,509,471,453,449,443,499],
[349,382,0,345,397,354,356,462],
[475,420,546,0,487,403,447,473],
[437,438,494,404,0,427,420,480],
[456,442,537,488,464,0,452,497],
[464,448,535,444,471,439,0,504],
[348,392,429,418,411,394,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,429,392,424,428,413,414],
[470,0,462,404,454,409,453,438],
[462,429,0,409,424,407,409,428],
[499,487,482,0,444,469,476,447],
[467,437,467,447,0,435,465,439],
[463,482,484,422,456,0,448,430],
[478,438,482,415,426,443,0,429],
[477,453,463,444,452,461,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,461,447,457,465,432,452],
[411,0,441,419,424,435,435,457],
[430,450,0,429,456,437,428,443],
[444,472,462,0,446,450,457,447],
[434,467,435,445,0,459,434,438],
[426,456,454,441,432,0,434,443],
[459,456,463,434,457,457,0,446],
[439,434,448,444,453,448,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,443,436,464,469,446,420],
[438,0,416,434,448,443,427,449],
[448,475,0,412,455,445,410,457],
[455,457,479,0,485,464,438,449],
[427,443,436,406,0,450,410,419],
[422,448,446,427,441,0,403,429],
[445,464,481,453,481,488,0,469],
[471,442,434,442,472,462,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,445,446,452,442,427,419],
[434,0,440,449,445,440,469,439],
[446,451,0,456,438,468,432,451],
[445,442,435,0,435,454,421,423],
[439,446,453,456,0,467,463,481],
[449,451,423,437,424,0,429,428],
[464,422,459,470,428,462,0,447],
[472,452,440,468,410,463,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,439,476,478,429,444,446],
[429,0,431,463,443,431,447,419],
[452,460,0,481,452,435,451,416],
[415,428,410,0,441,435,423,418],
[413,448,439,450,0,443,436,422],
[462,460,456,456,448,0,455,439],
[447,444,440,468,455,436,0,419],
[445,472,475,473,469,452,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,442,473,465,493,484,506],
[411,0,418,448,421,391,368,429],
[449,473,0,400,477,453,411,506],
[418,443,491,0,446,502,406,480],
[426,470,414,445,0,483,394,488],
[398,500,438,389,408,0,433,518],
[407,523,480,485,497,458,0,499],
[385,462,385,411,403,373,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,393,370,482,390,434,480],
[504,0,469,444,620,462,508,533],
[498,422,0,454,525,450,525,480],
[521,447,437,0,572,385,434,431],
[409,271,366,319,0,297,319,435],
[501,429,441,506,594,0,523,505],
[457,383,366,457,572,368,0,504],
[411,358,411,460,456,386,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,405,417,426,426,436,424],
[474,0,409,442,519,472,439,451],
[486,482,0,423,453,445,463,475],
[474,449,468,0,477,452,433,478],
[465,372,438,414,0,395,450,436],
[465,419,446,439,496,0,458,442],
[455,452,428,458,441,433,0,427],
[467,440,416,413,455,449,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,425,450,462,443,435,454],
[435,0,393,431,448,426,410,411],
[466,498,0,446,441,457,435,447],
[441,460,445,0,460,455,425,441],
[429,443,450,431,0,419,433,466],
[448,465,434,436,472,0,448,431],
[456,481,456,466,458,443,0,452],
[437,480,444,450,425,460,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,470,444,455,452,449,450],
[429,0,473,430,415,429,441,421],
[421,418,0,420,408,422,420,398],
[447,461,471,0,422,424,445,441],
[436,476,483,469,0,448,448,459],
[439,462,469,467,443,0,457,457],
[442,450,471,446,443,434,0,454],
[441,470,493,450,432,434,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,442,464,438,404,415,383],
[458,0,452,465,451,406,434,462],
[449,439,0,423,423,400,422,426],
[427,426,468,0,452,398,443,419],
[453,440,468,439,0,412,439,442],
[487,485,491,493,479,0,462,440],
[476,457,469,448,452,429,0,474],
[508,429,465,472,449,451,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,451,478,458,427,440,425],
[439,0,450,455,473,415,444,452],
[440,441,0,441,468,426,417,429],
[413,436,450,0,428,406,437,428],
[433,418,423,463,0,435,401,407],
[464,476,465,485,456,0,452,436],
[451,447,474,454,490,439,0,458],
[466,439,462,463,484,455,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,435,418,435,431,451,445],
[474,0,443,446,465,472,485,459],
[456,448,0,398,452,474,428,414],
[473,445,493,0,450,482,471,458],
[456,426,439,441,0,454,483,433],
[460,419,417,409,437,0,448,414],
[440,406,463,420,408,443,0,420],
[446,432,477,433,458,477,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,474,451,450,444,448,452],
[434,0,470,468,416,419,429,462],
[417,421,0,493,440,478,456,437],
[440,423,398,0,409,454,432,439],
[441,475,451,482,0,451,467,473],
[447,472,413,437,440,0,462,461],
[443,462,435,459,424,429,0,468],
[439,429,454,452,418,430,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,421,448,465,401,444,411],
[470,0,412,473,395,398,437,411],
[470,479,0,458,454,412,482,408],
[443,418,433,0,408,434,426,451],
[426,496,437,483,0,435,430,412],
[490,493,479,457,456,0,465,438],
[447,454,409,465,461,426,0,430],
[480,480,483,440,479,453,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,458,431,463,435,432,468],
[454,0,452,451,473,439,441,451],
[433,439,0,426,476,418,432,468],
[460,440,465,0,480,449,451,457],
[428,418,415,411,0,405,407,427],
[456,452,473,442,486,0,443,484],
[459,450,459,440,484,448,0,487],
[423,440,423,434,464,407,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,453,440,455,452,492,474],
[463,0,436,441,447,437,468,451],
[438,455,0,444,440,436,479,438],
[451,450,447,0,420,425,438,443],
[436,444,451,471,0,467,484,431],
[439,454,455,466,424,0,457,445],
[399,423,412,453,407,434,0,440],
[417,440,453,448,460,446,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,426,441,443,420,433,451],
[452,0,388,433,438,406,415,416],
[465,503,0,465,477,439,463,463],
[450,458,426,0,433,418,426,434],
[448,453,414,458,0,441,447,420],
[471,485,452,473,450,0,440,425],
[458,476,428,465,444,451,0,447],
[440,475,428,457,471,466,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,479,473,460,472,454,439],
[438,0,446,470,438,472,448,425],
[412,445,0,449,437,453,441,444],
[418,421,442,0,427,462,459,432],
[431,453,454,464,0,476,448,455],
[419,419,438,429,415,0,449,424],
[437,443,450,432,443,442,0,432],
[452,466,447,459,436,467,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,453,441,441,464,435,442],
[434,0,454,467,459,446,436,445],
[438,437,0,459,450,446,423,439],
[450,424,432,0,439,452,418,443],
[450,432,441,452,0,449,453,457],
[427,445,445,439,442,0,426,437],
[456,455,468,473,438,465,0,451],
[449,446,452,448,434,454,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,447,435,424,446,451,410],
[450,0,471,431,441,478,473,436],
[444,420,0,443,449,438,451,428],
[456,460,448,0,466,451,476,443],
[467,450,442,425,0,466,478,449],
[445,413,453,440,425,0,459,440],
[440,418,440,415,413,432,0,428],
[481,455,463,448,442,451,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,456,463,451,449,427,454],
[463,0,474,473,454,436,446,464],
[435,417,0,453,437,424,440,452],
[428,418,438,0,434,422,417,444],
[440,437,454,457,0,428,437,448],
[442,455,467,469,463,0,452,457],
[464,445,451,474,454,439,0,470],
[437,427,439,447,443,434,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,420,454,410,444,434,437],
[452,0,426,467,434,441,430,438],
[471,465,0,482,433,459,455,442],
[437,424,409,0,409,414,416,401],
[481,457,458,482,0,457,426,471],
[447,450,432,477,434,0,436,447],
[457,461,436,475,465,455,0,453],
[454,453,449,490,420,444,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,424,429,418,463,453,425],
[437,0,424,413,410,446,450,418],
[467,467,0,431,412,474,467,432],
[462,478,460,0,448,451,447,444],
[473,481,479,443,0,443,458,446],
[428,445,417,440,448,0,466,414],
[438,441,424,444,433,425,0,416],
[466,473,459,447,445,477,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,429,435,470,431,426,452],
[453,0,439,450,464,439,461,427],
[462,452,0,466,461,436,464,455],
[456,441,425,0,461,449,430,462],
[421,427,430,430,0,439,429,436],
[460,452,455,442,452,0,451,447],
[465,430,427,461,462,440,0,435],
[439,464,436,429,455,444,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,446,461,433,427,442,446],
[459,0,456,459,439,440,462,429],
[445,435,0,463,393,448,440,430],
[430,432,428,0,419,438,458,426],
[458,452,498,472,0,433,471,443],
[464,451,443,453,458,0,451,457],
[449,429,451,433,420,440,0,427],
[445,462,461,465,448,434,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,456,439,460,454,458,446],
[469,0,443,470,445,484,450,459],
[435,448,0,461,445,464,443,425],
[452,421,430,0,441,461,456,425],
[431,446,446,450,0,491,443,444],
[437,407,427,430,400,0,437,423],
[433,441,448,435,448,454,0,448],
[445,432,466,466,447,468,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,446,452,447,444,426,448],
[429,0,438,427,462,443,419,437],
[445,453,0,445,459,443,424,435],
[439,464,446,0,442,442,429,441],
[444,429,432,449,0,438,424,433],
[447,448,448,449,453,0,447,440],
[465,472,467,462,467,444,0,450],
[443,454,456,450,458,451,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,440,445,460,456,446,465],
[463,0,437,452,450,453,454,451],
[451,454,0,439,445,457,447,457],
[446,439,452,0,450,473,450,439],
[431,441,446,441,0,428,445,442],
[435,438,434,418,463,0,418,443],
[445,437,444,441,446,473,0,447],
[426,440,434,452,449,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,616,561,503,782,390,669,613],
[275,0,502,389,555,224,445,499],
[330,389,0,334,334,446,499,445],
[388,502,557,0,446,392,390,558],
[109,336,557,445,0,112,444,500],
[501,667,445,499,779,0,554,499],
[222,446,392,501,447,337,0,671],
[278,392,446,333,391,392,220,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,467,433,462,526,455,427],
[398,0,465,436,435,467,405,407],
[424,426,0,410,407,441,389,405],
[458,455,481,0,463,497,429,436],
[429,456,484,428,0,464,452,435],
[365,424,450,394,427,0,395,426],
[436,486,502,462,439,496,0,466],
[464,484,486,455,456,465,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,459,447,418,440,443,453],
[449,0,439,462,439,430,452,429],
[432,452,0,440,435,438,444,433],
[444,429,451,0,425,439,435,419],
[473,452,456,466,0,454,461,441],
[451,461,453,452,437,0,449,440],
[448,439,447,456,430,442,0,431],
[438,462,458,472,450,451,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,448,442,437,443,428,440],
[455,0,474,449,444,463,447,432],
[443,417,0,428,431,436,429,424],
[449,442,463,0,458,467,441,450],
[454,447,460,433,0,461,432,439],
[448,428,455,424,430,0,447,422],
[463,444,462,450,459,444,0,447],
[451,459,467,441,452,469,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,443,426,471,438,425,432],
[467,0,449,434,444,431,432,453],
[448,442,0,446,465,434,435,467],
[465,457,445,0,471,451,449,457],
[420,447,426,420,0,413,431,456],
[453,460,457,440,478,0,453,456],
[466,459,456,442,460,438,0,449],
[459,438,424,434,435,435,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,446,455,465,467,428,399],
[419,0,345,431,442,433,440,435],
[445,546,0,487,504,518,467,419],
[436,460,404,0,483,483,491,526],
[426,449,387,408,0,436,464,467],
[424,458,373,408,455,0,472,424],
[463,451,424,400,427,419,0,421],
[492,456,472,365,424,467,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,458,396,444,430,428,469],
[472,0,458,433,459,455,440,496],
[433,433,0,447,432,437,434,440],
[495,458,444,0,451,440,446,476],
[447,432,459,440,0,446,460,466],
[461,436,454,451,445,0,443,491],
[463,451,457,445,431,448,0,496],
[422,395,451,415,425,400,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,462,424,435,454,416,444],
[459,0,457,446,434,443,447,467],
[429,434,0,450,414,422,443,430],
[467,445,441,0,444,441,414,409],
[456,457,477,447,0,428,435,439],
[437,448,469,450,463,0,431,452],
[475,444,448,477,456,460,0,458],
[447,424,461,482,452,439,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,438,455,436,440,453,442],
[434,0,412,449,423,436,454,443],
[453,479,0,467,459,440,472,458],
[436,442,424,0,422,461,444,438],
[455,468,432,469,0,448,445,440],
[451,455,451,430,443,0,442,450],
[438,437,419,447,446,449,0,443],
[449,448,433,453,451,441,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,462,472,471,477,440,435],
[447,0,479,477,476,500,438,473],
[429,412,0,464,433,450,433,438],
[419,414,427,0,457,464,424,440],
[420,415,458,434,0,441,447,465],
[414,391,441,427,450,0,409,416],
[451,453,458,467,444,482,0,446],
[456,418,453,451,426,475,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,435,442,444,469,432,449],
[422,0,426,418,451,435,419,451],
[456,465,0,448,444,450,452,461],
[449,473,443,0,457,448,452,455],
[447,440,447,434,0,450,438,460],
[422,456,441,443,441,0,437,456],
[459,472,439,439,453,454,0,464],
[442,440,430,436,431,435,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,358,402,454,497,448,450],
[421,0,495,480,493,525,464,436],
[533,396,0,462,450,507,476,518],
[489,411,429,0,486,531,475,497],
[437,398,441,405,0,505,451,442],
[394,366,384,360,386,0,389,398],
[443,427,415,416,440,502,0,445],
[441,455,373,394,449,493,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,425,469,450,463,437,422],
[454,0,432,479,448,522,493,421],
[466,459,0,513,415,484,477,449],
[422,412,378,0,432,439,410,403],
[441,443,476,459,0,467,471,444],
[428,369,407,452,424,0,441,408],
[454,398,414,481,420,450,0,473],
[469,470,442,488,447,483,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,448,451,454,424,427,439],
[440,0,444,419,430,433,418,427],
[443,447,0,440,447,450,448,434],
[440,472,451,0,457,445,436,455],
[437,461,444,434,0,442,454,459],
[467,458,441,446,449,0,433,449],
[464,473,443,455,437,458,0,455],
[452,464,457,436,432,442,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_891.csv", index=False, header=False)